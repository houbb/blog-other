import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o as n}from"./app-CEDSurVN.js";const p={};function o(h,e){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="性能测试" tabindex="-1"><a class="header-anchor" href="#性能测试"><span>性能测试</span></a></h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>软件压力测试是一种基本的质量保证行为，它是每个重要软件测试工作的一部分。</p><p>软件压力测试的基本思路很简单：不是在常规条件下运行手动或自动测试，而是在计算机数量较少或系统资源匮乏的条件下运行测试。通常要进行软件压力测试的资源包括内部内存、CPU 可用性、磁盘空间和网络带宽。</p><h2 id="目的" tabindex="-1"><a class="header-anchor" href="#目的"><span>目的</span></a></h2><p>需要了解AUT(被测应用程序)一般能够承受的压力，同时能够承受的用户访问量(容量)，最多支持有多少用户同时访问某个功能。</p><h1 id="相关工具" tabindex="-1"><a class="header-anchor" href="#相关工具"><span>相关工具</span></a></h1><p>Apache apacheBench</p><p>Apache webBench</p><p><a href="https://houbb.github.io/2018/07/19/jmeter" target="_blank" rel="noopener noreferrer">Apache JMeter</a></p><p><a href="https://houbb.github.io/2018/07/19/load-runner" target="_blank" rel="noopener noreferrer">LoadRunner</a></p><p><a href="https://help.aliyun.com/product/29260.html" target="_blank" rel="noopener noreferrer">Ali 性能测试 TPS</a></p><p><a href="https://github.com/houbb/junitperf" target="_blank" rel="noopener noreferrer">JunitPerf</a></p><h1 id="全链路压测" tabindex="-1"><a class="header-anchor" href="#全链路压测"><span>全链路压测</span></a></h1><h2 id="标准化-自动化" tabindex="-1"><a class="header-anchor" href="#标准化-自动化"><span>标准化+自动化</span></a></h2><p>节约后期人力成本</p><h2 id="核心问题" tabindex="-1"><a class="header-anchor" href="#核心问题"><span>核心问题</span></a></h2><p>基础流程如何自动化，提高人效；</p><p>如何自动做好压测验证，保障压测安全；</p><p>压测置信度量化如何计算，保证压测有效。</p><h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2019/01/23/unit-test-best-practise" target="_blank" rel="noopener noreferrer">单元测试最佳实践</a></p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/10364657" target="_blank" rel="noopener noreferrer">软件压力测试-百度百科</a></p><p><a href="https://mp.weixin.qq.com/s/uv2AfwnKzkSAMDjj9fs-UA" target="_blank" rel="noopener noreferrer">全链路压测自动化实践</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5NjQ5MTI5OA==&amp;mid=2651748852&amp;idx=1&amp;sn=71d24d5f4fe1575589d56d2bed040d7a&amp;chksm=bd12a0b98a6529aff13987a8189205b21c832398add2b8443e953ba88be88a856c2ced2e4607&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">全链路压测平台（Quake）在美团中的实践</a></p>',26)]))}const c=t(p,[["render",o]]),d=JSON.parse('{"path":"/posts/test/2019-02-18-perfermance-test.html","title":"性能测试","lang":"zh-CN","frontmatter":{"title":"性能测试","date":"2019-02-18T00:00:00.000Z","categories":["Test"],"tags":["test","sh"],"published":true,"excerpt":"性能测试","description":"性能测试 概念 软件压力测试是一种基本的质量保证行为，它是每个重要软件测试工作的一部分。 软件压力测试的基本思路很简单：不是在常规条件下运行手动或自动测试，而是在计算机数量较少或系统资源匮乏的条件下运行测试。通常要进行软件压力测试的资源包括内部内存、CPU 可用性、磁盘空间和网络带宽。 目的 需要了解AUT(被测应用程序)一般能够承受的压力，同时能够承...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/test/2019-02-18-perfermance-test.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"性能测试"}],["meta",{"property":"og:description","content":"性能测试 概念 软件压力测试是一种基本的质量保证行为，它是每个重要软件测试工作的一部分。 软件压力测试的基本思路很简单：不是在常规条件下运行手动或自动测试，而是在计算机数量较少或系统资源匮乏的条件下运行测试。通常要进行软件压力测试的资源包括内部内存、CPU 可用性、磁盘空间和网络带宽。 目的 需要了解AUT(被测应用程序)一般能够承受的压力，同时能够承..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2019-02-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能测试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-02-18T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.31,"words":393},"filePathRelative":"posts/test/2019-02-18-perfermance-test.md","localizedDate":"2019年2月18日","autoDesc":true}');export{c as comp,d as data};
