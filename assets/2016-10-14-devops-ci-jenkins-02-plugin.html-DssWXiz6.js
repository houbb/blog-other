import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,o as a}from"./app-CEDSurVN.js";const r={};function l(t,e){return a(),n("div",null,e[0]||(e[0]=[s(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2016/10/14/devops-01-overview" target="_blank" rel="noopener noreferrer">Devops-01-devops 是什么？</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-02-jpom" target="_blank" rel="noopener noreferrer">Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-sonarqube-01-intro" target="_blank" rel="noopener noreferrer">代码质量管理 SonarQube-01-入门介绍</a></p><p><a href="https://houbb.github.io/2016/10/14/project-manage-jira-01-intro" target="_blank" rel="noopener noreferrer">项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件</a></p><p><a href="https://houbb.github.io/2016/10/14/project-manage-phabricator-01-overview" target="_blank" rel="noopener noreferrer">项目管理平台-01-Phabricator 入门介绍 一套集成的强大工具，帮助公司构建更高质量的软件</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-jenkins-01-intro" target="_blank" rel="noopener noreferrer">持续集成平台 01 jenkins 入门介绍</a></p><h1 id="junit-插件" tabindex="-1"><a class="header-anchor" href="#junit-插件"><span>JUnit 插件</span></a></h1><p>单元测试检测</p><blockquote><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/JUnit+Plugin" target="_blank" rel="noopener noreferrer">JUnit 插件</a></p></blockquote><blockquote><p><a href="http://m.blog.csdn.net/article/details?id=9949309" target="_blank" rel="noopener noreferrer">JUnit 博客</a></p></blockquote><blockquote><p><a href="http://www.myexception.cn/cvs-svn/1508681.html" target="_blank" rel="noopener noreferrer">JUnit 测试构建</a></p></blockquote><ol><li><p>安装 <code>junit 插件</code></p></li><li><p>不跳过测试</p></li><li><p>编辑你项目中的 <code>pom.xml</code></p></li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    junit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    junit</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    \${junit.version}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="sonar-插件" tabindex="-1"><a class="header-anchor" href="#sonar-插件"><span>Sonar 插件</span></a></h1><p>单元质量检测</p><blockquote><p><a href="http://blog.csdn.net/xinluke/article/details/53035583" target="_blank" rel="noopener noreferrer">Sonar 集成</a></p></blockquote><blockquote><p><a href="http://wcp88888888.iteye.com/blog/2211605" target="_blank" rel="noopener noreferrer">Sonar 问题</a></p></blockquote><blockquote><p>准备</p></blockquote><ol><li><p>安装 <code>SonarQube</code></p></li><li><p>在 Jenkins 中安装 <code>SonarQube 插件</code></p></li></ol><blockquote><p>配置 Sonar 服务器</p></blockquote><p>Jenkins–》系统设置–》SonarQube servers</p><ol><li><p>服务器版本 <strong>5.2</strong> 或之前: 用户名/密码 默认为 <code>admin/admin</code></p></li><li><p>服务器认证令牌</p></li></ol><ul><li>生成令牌</li></ul><p>配置-&gt;权限-&gt;用户-&gt;Tokens</p><p>输入一个名称，并生成一个：</p><p><code>30a4d56f3130d246818ed384ece7d15c56ae8c85</code> 命名为 <strong>admin</strong>，将其复制到 <strong>Server authentication token</strong></p><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar.png" alt="sonar" tabindex="0" loading="lazy"><figcaption>sonar</figcaption></figure><blockquote><p>配置 Sonar 扫描仪</p></blockquote><p>系统管理–》全局工具配置</p><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar-scanner.png" alt="scanner" tabindex="0" loading="lazy"><figcaption>scanner</figcaption></figure><blockquote><p>配置项目</p></blockquote><p>要让 Jenkins 编译完成后，自动将代码传给 SonarQube 进行分析，则需要配置 Jenkins 中的目标项目。<br> 选择你的项目–》配置–》添加构建前步骤-》执行 SonarQube 扫描仪</p><p>在项目的根目录创建文件 <code>sonar-project.properties</code>, <strong>项目属性路径</strong> 默认路径即为这个。内容如下:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sonar.projectKey=blog</span></span>
<span class="line"><span>sonar.projectName=blog</span></span>
<span class="line"><span>sonar.projectVersion=1.0</span></span>
<span class="line"><span>sonar.sources=src/main/java</span></span>
<span class="line"><span>sonar.language=java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者直接将此内容添加在<strong>分析属性</strong>中。</p><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar-executor.png" alt="scanner" tabindex="0" loading="lazy"><figcaption>scanner</figcaption></figure><ul><li>编辑你项目中的 <code>pom.xml</code>:</li></ul><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> org.sonarsource.scanner.maven</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sonar-maven-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 3.1.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>错误</p><p>一直卡在这个问题</p><blockquote><p>Unpacking <a href="https://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/2.8/sonar-scanner-cli-2.8.zip" target="_blank" rel="noopener noreferrer">https://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/2.8/sonar-scanner-cli-2.8.zip</a> 到 /Users/houbinbin/.jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQube_Scanner on Jenkins</p></blockquote><p>也就是要将这个文件下载下来，并解压缩到目标路径。手动操作，解决。</p><h1 id="cobertura" tabindex="-1"><a class="header-anchor" href="#cobertura"><span>Cobertura</span></a></h1><p>单元测试覆盖率</p><blockquote><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/Cobertura+Plugin" target="_blank" rel="noopener noreferrer">Cobertura+Plugin</a></p></blockquote><blockquote><p><a href="http://blog.csdn.net/yaominhua/article/details/40684647" target="_blank" rel="noopener noreferrer">Cobertura</a></p></blockquote><blockquote><p><a href="http://blog.csdn.net/wangmuming/article/details/23455947" target="_blank" rel="noopener noreferrer">代码覆盖率</a></p></blockquote><ol><li><p>安装 <code>Cobertura 插件</code></p></li><li><p>构建时添加目标(Goals)如下:</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>clean cobertura:cobertura package</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>构建后操作-》发布 Cobertura 覆盖率报告</li></ol><p>设置 <strong>Cobertura xml 报告模式</strong> 如下:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>**/target/site/cobertura/coverage.xml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>编辑你项目中的 <code>pom.xml</code></li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    org.codehaus.mojo</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    findbugs-maven-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    3.0.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        High</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        Default</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        target/site--&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="findbugs" tabindex="-1"><a class="header-anchor" href="#findbugs"><span>FindBugs</span></a></h1><p>找寻代码中的 BUG</p><blockquote><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin" target="_blank" rel="noopener noreferrer">FindBugs+Plugin</a></p></blockquote><blockquote><p><a href="http://blog.csdn.net/fighterandknight/article/details/51424257" target="_blank" rel="noopener noreferrer">FindBugs 中文版</a></p></blockquote><ol><li><p>在 Jenkins 中安装 <code>FindBugs 插件</code></p></li><li><p>构建时添加目标(Goals)如下:</p></li></ol><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>findbugs:findbugs</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意: 使用 FindBugs 务必保证文件已被解析为 <code>.class</code>, 即已经被 <code>maven compile</code></p><ol start="3"><li>构建后操作-》发布 FindBugs 分析结果</li></ol><p><strong>FindBugs 结果</strong> 保持默认即可。</p><h1 id="javadoc" tabindex="-1"><a class="header-anchor" href="#javadoc"><span>Javadoc</span></a></h1><blockquote><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/Javadoc+Plugin" target="_blank" rel="noopener noreferrer">Javadoc+Plugin</a></p></blockquote><ol><li><p>在 Jenkins 中安装 <code>Javadoc 插件</code></p></li><li><p>配置 Jenkins 任务:</p></li></ol><p>在构建部分，目标和选项行添加:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>javadoc:javadoc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>发布 Javadoc</li></ol><p>定义 <strong>Javadoc 目录</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>target/site/apidocs/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>编辑你项目中的 <code>pom.xml</code></li></ol><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">d</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    org.apache.maven.plugins</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    maven-javadoc-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    2.10.2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -Xdoclint:none</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>true</code> 多模块</p></li><li><p><code>-Xdoclint:none</code> JDK8 对文档要求特别严格，使用这个偷懒。</p></li></ul><h1 id="blueocean" tabindex="-1"><a class="header-anchor" href="#blueocean"><span>BlueOcean</span></a></h1><p>Blue Ocean 是重新构思 Jenkins 用户体验的新项目。从头开始设计用于 Jenkins Pipeline<br> 并与 Freestyle 作业兼容，Blue Ocean 减少了混乱，增加了团队每个成员的清晰度。</p><blockquote><p><a href="https://jenkins.io/projects/blueocean/" target="_blank" rel="noopener noreferrer">BlueOcean</a></p></blockquote><ol><li><p>安装 <code>BlueOcean beta</code></p></li><li><p>点击 <code>Open Blue Ocean</code> 来开始旅程~~~.</p></li></ol>`,79)]))}const c=i(r,[["render",l]]),d=JSON.parse('{"path":"/posts/devops/2016-10-14-devops-ci-jenkins-02-plugin.html","title":"持续集成平台 02 jenkins plugin 插件","lang":"zh-CN","frontmatter":{"title":"持续集成平台 02 jenkins plugin 插件","date":"2016-10-14T00:00:00.000Z","categories":["Devops"],"tags":["devops","ci","plugin"],"published":true,"description":"拓展阅读 Devops-01-devops 是什么？ Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件 代码质量管理 SonarQube-01-入门介绍 项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件 项目管理平台-01-Phabricator 入门介...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/devops/2016-10-14-devops-ci-jenkins-02-plugin.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"持续集成平台 02 jenkins plugin 插件"}],["meta",{"property":"og:description","content":"拓展阅读 Devops-01-devops 是什么？ Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件 代码质量管理 SonarQube-01-入门介绍 项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件 项目管理平台-01-Phabricator 入门介..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"ci"}],["meta",{"property":"article:tag","content":"plugin"}],["meta",{"property":"article:published_time","content":"2016-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"持续集成平台 02 jenkins plugin 插件\\",\\"image\\":[\\"https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar.png\\",\\"https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar-scanner.png\\",\\"https://raw.githubusercontent.com/houbb/resource/master/img/jenkins/2016-12-10-jenkins-sonar-executor.png\\"],\\"datePublished\\":\\"2016-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.28,"words":983},"filePathRelative":"posts/devops/2016-10-14-devops-ci-jenkins-02-plugin.md","localizedDate":"2016年10月14日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-01-overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Devops-01-devops 是什么？</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-02-jpom\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-sonarqube-01-intro\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">代码质量管理 SonarQube-01-入门介绍</a></p>","autoDesc":true}');export{c as comp,d as data};
