import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,o as i}from"./app-CEDSurVN.js";const t={};function r(o,e){return i(),n("div",null,e[0]||(e[0]=[s(`<h1 id="make-for-windows" tabindex="-1"><a class="header-anchor" href="#make-for-windows"><span>Make for Windows</span></a></h1><p>Make：GNU make 工具，用于维护程序的可执行文件和其他非源文件的生成</p><p>版本<br> 3.81</p><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><p>Make 是一个控制从程序的源文件生成可执行文件和其他非源文件的工具。Make 从一个称为 makefile 的文件获取构建程序的知识，该文件列出了每个非源文件以及如何从其他文件计算它。当您编写程序时，应为其编写一个 makefile，以便可以使用 Make 来构建和安装程序。</p><h2 id="make-的功能" tabindex="-1"><a class="header-anchor" href="#make-的功能"><span>Make 的功能</span></a></h2><p>Make 使最终用户能够构建和安装您的软件包，而不需要了解这是如何完成的，因为这些细节记录在您提供的 makefile 中。<br> Make 根据已更改的源文件自动确定需要更新哪些文件。它还自动确定更新文件的正确顺序，以防一个非源文件依赖于另一个非源文件。因此，如果更改了一些源文件然后运行 Make，它不需要重新编译整个程序。它仅更新直接或间接依赖于您更改的源文件的那些非源文件。<br> Make 不限于任何特定语言。对于程序中的每个非源文件，makefile 指定了计算它的 shell 命令。这些 shell 命令可以运行编译器以生成对象文件，运行链接器以生成可执行文件，运行 ar 以更新库，或运行 TeX 或 Makeinfo 以格式化文档。<br> Make 不限于构建软件包。您还可以使用 Make 控制安装或卸载软件包，为其生成标签表，或执行其他您经常要做的操作，使其值得编写如何执行这些操作的说明。</p><h2 id="主页" tabindex="-1"><a class="header-anchor" href="#主页"><span>主页</span></a></h2><p><a href="http://www.gnu.org/software/make" target="_blank" rel="noopener noreferrer">http://www.gnu.org/software/make</a></p><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h2><p>如果您下载软件包的安装程序，那么在下面的要求中列出的依赖项，例如动态链接库（DLL），已经包含在其中，无需额外安装。如果您将软件包下载为 Zip 文件，则必须自行下载并安装依赖项的 Zip 文件。</p><p>其他软件包的开发者文件（头文件和库）并不包含在内；因此，如果您希望开发自己的应用程序，必须单独安装所需的软件包。</p><h1 id="install-windows10" tabindex="-1"><a class="header-anchor" href="#install-windows10"><span>install windows10</span></a></h1><h2 id="下载-1" tabindex="-1"><a class="header-anchor" href="#下载-1"><span>下载</span></a></h2><p>我们这里下载安装程序，可以默认包含依赖项。</p><blockquote><p><a href="https://gnuwin32.sourceforge.net/downlinks/make.php" target="_blank" rel="noopener noreferrer">https://gnuwin32.sourceforge.net/downlinks/make.php</a></p></blockquote><h2 id="配置变量" tabindex="-1"><a class="header-anchor" href="#配置变量"><span>配置变量</span></a></h2><p>默认的安装路径：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>C:\\Program Files (x86)\\GnuWin32\\bin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下面的文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>λ ls</span></span>
<span class="line"><span> bin/   Cmder.exe*   config/   icons/   LICENSE   opt/   vendor/  &#39;Version 1.3.24.236&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>安装之后，发现默认没有加到 path 中。</p><p>我们编辑环境变量，把 <code>C:\\Program Files (x86)\\GnuWin32\\bin</code> 加到 path 中。</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&gt;make -v</span></span>
<span class="line"><span>GNU Make 3.81</span></span>
<span class="line"><span>Copyright (C) 2006  Free Software Foundation, Inc.</span></span>
<span class="line"><span>This is free software; see the source for copying conditions.</span></span>
<span class="line"><span>There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A</span></span>
<span class="line"><span>PARTICULAR PURPOSE.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>This program built for i386-pc-mingw32</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p>chat</p><p><a href="https://gnuwin32.sourceforge.net/packages/make.htm" target="_blank" rel="noopener noreferrer">https://gnuwin32.sourceforge.net/packages/make.htm</a></p><p><a href="https://blog.csdn.net/weixin_45903371/article/details/113886121" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_45903371/article/details/113886121</a></p>`,29)]))}const d=a(t,[["render",r]]),h=JSON.parse('{"path":"/posts/windows/2021-07-04-windows-tool-make.html","title":"windows10 make 编译命令安装笔记","lang":"zh-CN","frontmatter":{"title":"windows10 make 编译命令安装笔记","date":"2021-06-20T00:00:00.000Z","categories":["Windows"],"tags":["windows","tool"],"published":true,"description":"Make for Windows Make：GNU make 工具，用于维护程序的可执行文件和其他非源文件的生成 版本 3.81 描述 Make 是一个控制从程序的源文件生成可执行文件和其他非源文件的工具。Make 从一个称为 makefile 的文件获取构建程序的知识，该文件列出了每个非源文件以及如何从其他文件计算它。当您编写程序时，应为其编写一个 ...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/windows/2021-07-04-windows-tool-make.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"windows10 make 编译命令安装笔记"}],["meta",{"property":"og:description","content":"Make for Windows Make：GNU make 工具，用于维护程序的可执行文件和其他非源文件的生成 版本 3.81 描述 Make 是一个控制从程序的源文件生成可执行文件和其他非源文件的工具。Make 从一个称为 makefile 的文件获取构建程序的知识，该文件列出了每个非源文件以及如何从其他文件计算它。当您编写程序时，应为其编写一个 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"windows"}],["meta",{"property":"article:tag","content":"tool"}],["meta",{"property":"article:published_time","content":"2021-06-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"windows10 make 编译命令安装笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-06-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"posts/windows/2021-07-04-windows-tool-make.md","localizedDate":"2021年6月20日","excerpt":"\\n<p>Make：GNU make 工具，用于维护程序的可执行文件和其他非源文件的生成</p>\\n<p>版本<br>\\n3.81</p>\\n<h2>描述</h2>\\n<p>Make 是一个控制从程序的源文件生成可执行文件和其他非源文件的工具。Make 从一个称为 makefile 的文件获取构建程序的知识，该文件列出了每个非源文件以及如何从其他文件计算它。当您编写程序时，应为其编写一个 makefile，以便可以使用 Make 来构建和安装程序。</p>\\n<h2>Make 的功能</h2>\\n<p>Make 使最终用户能够构建和安装您的软件包，而不需要了解这是如何完成的，因为这些细节记录在您提供的 makefile 中。<br>\\nMake 根据已更改的源文件自动确定需要更新哪些文件。它还自动确定更新文件的正确顺序，以防一个非源文件依赖于另一个非源文件。因此，如果更改了一些源文件然后运行 Make，它不需要重新编译整个程序。它仅更新直接或间接依赖于您更改的源文件的那些非源文件。<br>\\nMake 不限于任何特定语言。对于程序中的每个非源文件，makefile 指定了计算它的 shell 命令。这些 shell 命令可以运行编译器以生成对象文件，运行链接器以生成可执行文件，运行 ar 以更新库，或运行 TeX 或 Makeinfo 以格式化文档。<br>\\nMake 不限于构建软件包。您还可以使用 Make 控制安装或卸载软件包，为其生成标签表，或执行其他您经常要做的操作，使其值得编写如何执行这些操作的说明。</p>","autoDesc":true}');export{d as comp,h as data};
