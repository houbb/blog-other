import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as t,o as n}from"./app-uJE4P3e0.js";const r={};function o(i,a){return n(),p("div",null,a[0]||(a[0]=[t('<h1 id="指标" tabindex="-1"><a class="header-anchor" href="#指标"><span>指标</span></a></h1><p>所有的数据都可以认为是指标：sql / 日志 / prome / cat / net / ...</p><h2 id="sql-指标" tabindex="-1"><a class="header-anchor" href="#sql-指标"><span>SQL 指标</span></a></h2><p>basic: 业务域+应用名+名称+标签+remark</p><h3 id="核心" tabindex="-1"><a class="header-anchor" href="#核心"><span>核心</span></a></h3><p>数据源：初期可以配置，手动输入。</p><p>API: 后续可以考虑 cmdb 动态维护，比较难实现。</p><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><p>调度时间：cron fixed</p><p>下次执行时间</p><p>执行时间 offset</p><h3 id="预执行" tabindex="-1"><a class="header-anchor" href="#预执行"><span>预执行</span></a></h3><p>提前执行，验证正确性。</p><p>耗时 开始/结束</p><p>SQL</p><p>结果</p><h2 id="日志指标" tabindex="-1"><a class="header-anchor" href="#日志指标"><span>日志指标</span></a></h2><p>完整的日志解决方案</p><h3 id="日志可视化方案" tabindex="-1"><a class="header-anchor" href="#日志可视化方案"><span>日志可视化方案</span></a></h3><p>日志：agent 采集</p><p>发送到 mq:</p><p>ETL===&gt; 核心处理逻辑 logstash</p><p>ES===&gt; 分词</p><p>kibana===》可视化</p><h3 id="核心属性" tabindex="-1"><a class="header-anchor" href="#核心属性"><span>核心属性</span></a></h3><p>basic: 业务域+应用名+名称+标签+remark</p><p>calc:</p><ol><li>匹配条件：黑/白</li></ol><p>文本</p><p>regex</p><ol start="2"><li>值提取</li></ol><p>value-extractor</p><p>json-path</p><p>aviator</p><p>value-label</p><ol start="3"><li>预验证</li></ol><p>验证配置的效果</p><hr><h1 id="rule-规则" tabindex="-1"><a class="header-anchor" href="#rule-规则"><span>rule 规则</span></a></h1><h2 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1"><span>属性</span></a></h2><p>参数配置：参数 / 指标 / 查询条件</p><p>执行偏移： offset</p><p>条件：根据条件+阈值====》level，表达式计算。</p><p>调度时间：cron fixed</p><p>通知人：谁接收 cmdb-固定指定 email/phone/sms</p><p>附加信息：通知内容 / 附加</p><p>抑制逻辑：避免报警太多 xxx 秒，最多 yyy 次</p><h2 id="event-报警事件" tabindex="-1"><a class="header-anchor" href="#event-报警事件"><span>Event（报警事件）</span></a></h2><p>id status name time</p><p>模拟==》避免配置错误</p><h1 id="alarm-报警" tabindex="-1"><a class="header-anchor" href="#alarm-报警"><span>alarm 报警</span></a></h1><h2 id="基本" tabindex="-1"><a class="header-anchor" href="#基本"><span>基本</span></a></h2><p>name eventId level appName ip title content extraMap ruleId alertTime uid type env</p><h2 id="闭环" tabindex="-1"><a class="header-anchor" href="#闭环"><span>闭环</span></a></h2><p>关联事件</p><p>处理记录</p><p>通知列表</p><p>规则联动</p><h2 id="处理" tabindex="-1"><a class="header-anchor" href="#处理"><span>处理</span></a></h2><p>忽略</p><p>关闭</p><p>屏蔽===》规则 快捷/指定</p><p>自愈===》规则 联动作业</p><p>RCA 分析</p><h2 id="可配置化" tabindex="-1"><a class="header-anchor" href="#可配置化"><span>可配置化</span></a></h2><p>通知的内容</p><p>通知的群等</p><h1 id="度量大盘" tabindex="-1"><a class="header-anchor" href="#度量大盘"><span>度量大盘</span></a></h1><p>可视化大盘</p><p>datax</p><h1 id="crud" tabindex="-1"><a class="header-anchor" href="#crud"><span>CRUD</span></a></h1><p>list</p><p>add</p><p>edit</p><p>remove</p><p>detail</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>',77)]))}const c=e(r,[["render",o]]),d=JSON.parse('{"path":"/posts/devops/2019-04-01-monitor-in-action-12-indicator-rule.html","title":"监控系统实战-12-indicator 指标 + rule 规则","lang":"zh-CN","frontmatter":{"title":"监控系统实战-12-indicator 指标 + rule 规则","date":"2018-11-25T00:00:00.000Z","categories":["Devops"],"tags":["devops","monitor","apm","zabbix","sh"],"published":true,"description":"指标 所有的数据都可以认为是指标：sql / 日志 / prome / cat / net / ... SQL 指标 basic: 业务域+应用名+名称+标签+remark 核心 数据源：初期可以配置，手动输入。 API: 后续可以考虑 cmdb 动态维护，比较难实现。 属性 调度时间：cron fixed 下次执行时间 执行时间 offset 预执行...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/devops/2019-04-01-monitor-in-action-12-indicator-rule.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"监控系统实战-12-indicator 指标 + rule 规则"}],["meta",{"property":"og:description","content":"指标 所有的数据都可以认为是指标：sql / 日志 / prome / cat / net / ... SQL 指标 basic: 业务域+应用名+名称+标签+remark 核心 数据源：初期可以配置，手动输入。 API: 后续可以考虑 cmdb 动态维护，比较难实现。 属性 调度时间：cron fixed 下次执行时间 执行时间 offset 预执行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"monitor"}],["meta",{"property":"article:tag","content":"apm"}],["meta",{"property":"article:tag","content":"zabbix"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-11-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"监控系统实战-12-indicator 指标 + rule 规则\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.44,"words":433},"filePathRelative":"posts/devops/2019-04-01-monitor-in-action-12-indicator-rule.md","localizedDate":"2018年11月25日","excerpt":"\\n<p>所有的数据都可以认为是指标：sql / 日志 / prome / cat / net / ...</p>\\n<h2>SQL 指标</h2>\\n<p>basic: 业务域+应用名+名称+标签+remark</p>\\n<h3>核心</h3>\\n<p>数据源：初期可以配置，手动输入。</p>\\n<p>API: 后续可以考虑 cmdb 动态维护，比较难实现。</p>\\n<h3>属性</h3>\\n<p>调度时间：cron fixed</p>\\n<p>下次执行时间</p>\\n<p>执行时间 offset</p>\\n<h3>预执行</h3>\\n<p>提前执行，验证正确性。</p>\\n<p>耗时 开始/结束</p>\\n<p>SQL</p>","autoDesc":true}');export{c as comp,d as data};
