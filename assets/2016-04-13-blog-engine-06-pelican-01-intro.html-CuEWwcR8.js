import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as l}from"./app-uJE4P3e0.js";const s={};function t(r,e){return l(),n("div",null,e[0]||(e[0]=[a(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2016/04/13/blog-engine-01-overview" target="_blank" rel="noopener noreferrer">blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-02-jekyll-01-install" target="_blank" rel="noopener noreferrer">blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-02-intro" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll 博客引擎介绍</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-03-install-on-windows-doc" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll 如何在 windows 环境安装，官方文档</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-04-seo" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll SEO</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-04-hugo-intro" target="_blank" rel="noopener noreferrer">blog-engine-04-博客引擎 hugo intro 入门介绍+安装笔记</a></p><p><a href="https://houbb.github.io/2017/03/29/blog-engine-05-hexo" target="_blank" rel="noopener noreferrer">blog-engine-05-博客引擎 Hexo 入门介绍+安装笔记</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-06-pelican-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-06-pelican 静态网站生成 官方文档</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-06-pelican-02-quick-start" target="_blank" rel="noopener noreferrer">blog-engine-06-pelican 静态网站生成 windows 安装实战</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-07-gatsby-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-07-gatsby 建极速网站和应用程序 基于React的最佳框架，具备性能、可扩展性和安全性</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-08-vuepress-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-08-vuepress 以 Markdown 为中心的静态网站生成器</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-09-nuxt-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-09-nuxt 构建快速、SEO友好和可扩展的Web应用程序变得轻松</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-10-middleman-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具</a></p><h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>由于个人一直喜欢使用 markdown 来写 <a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">个人博客</a>，最近就整理了一下有哪些博客引擎。</p><p>感兴趣的小伙伴也可以选择自己合适的。</p><h1 id="pelican-是什么" tabindex="-1"><a class="header-anchor" href="#pelican-是什么"><span>Pelican 是什么？</span></a></h1><p>Pelican 是一个使用 Python 编写的静态博客生成器。想象一下，如果你有一个智能助手，你只需要告诉它你的想法，它就能帮你整理成漂亮的文章，甚至还能自动发布到网上，这个智能助手就是 Pelican。</p><h2 id="pelican-的特点" tabindex="-1"><a class="header-anchor" href="#pelican-的特点"><span>Pelican 的特点</span></a></h2><ol><li><p><strong>静态生成</strong><br> Pelican 生成的是静态网页，这意味着速度快，安全性高。</p></li><li><p><strong>Markdown 写作</strong><br> 使用 Markdown 语法来写作，简洁高效，让你更专注于内容。</p></li><li><p><strong>丰富的主题</strong><br> Pelican 社区提供了很多美观的主题，你可以挑选一个你喜欢的。</p></li><li><p><strong>插件系统</strong><br> 通过插件，你可以扩展 Pelican 的功能，比如增加文章摘要、分类、标签等。</p></li><li><p><strong>部署简单</strong><br> 生成的静态文件可以轻松部署到 GitHub Pages、FTP、CDN 等多种平台上。</p></li></ol><h1 id="如何安装-pelican" tabindex="-1"><a class="header-anchor" href="#如何安装-pelican"><span>如何安装 Pelican？</span></a></h1><ol><li><p><strong>安装 Python</strong><br> Pelican 是基于 Python 的，所以首先需要在你的电脑上安装 Python。</p></li><li><p><strong>安装 Pelican</strong><br> 打开终端或命令提示符，输入以下命令安装 Pelican：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pelican</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>创建新博客</strong><br> 使用以下命令创建一个新的 Pelican 博客：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pelican-quickstart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按照提示设置你的博客信息。</p></li></ol><h1 id="如何使用-pelican" tabindex="-1"><a class="header-anchor" href="#如何使用-pelican"><span>如何使用 Pelican？</span></a></h1><ol><li><p><strong>编写文章</strong><br> 在博客的 <code>content</code> 目录下创建 Markdown 文件，就可以开始写文章了。</p></li><li><p><strong>本地预览</strong><br> 输入以下命令启动本地服务器：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pelican</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --listen</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后在浏览器中输入 <code>http://localhost:8000</code>，就可以实时预览你的博客了。</p></li><li><p><strong>生成静态文件</strong><br> 当你的文章写好后，使用以下命令生成静态网页：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pelican</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这会在 <code>output</code> 目录下生成静态文件。</p></li><li><p><strong>发布博客</strong><br> 将 <code>output</code> 目录下的文件部署到你选择的平台上，你的博客就上线了。</p></li><li><p><strong>选择主题和插件</strong><br> Pelican 有很多免费的主题和插件，你可以挑选你喜欢的，按照文档说明进行安装和配置。</p></li></ol><h1 id="pelican-的优缺点" tabindex="-1"><a class="header-anchor" href="#pelican-的优缺点"><span>Pelican 的优缺点</span></a></h1><h2 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h2><ul><li><p><strong>静态网站</strong><br> 静态网站加载速度快，安全性高。</p></li><li><p><strong>写作体验好</strong><br> Markdown 写作简洁高效，让你更专注于内容。</p></li><li><p><strong>社区支持</strong><br> Pelican 有一个活跃的社区，你可以找到大量的教程和帮助。</p></li><li><p><strong>高度可定制</strong><br> 通过主题和插件，你可以高度定制你的博客。</p></li></ul><h2 id="pelican-的不足" tabindex="-1"><a class="header-anchor" href="#pelican-的不足"><span>Pelican 的不足</span></a></h2><ul><li><p><strong>静态网站</strong><br> 由于 Pelican 生成的是静态网站，所以不支持动态网站的功能，如用户注册、登录等。</p></li><li><p><strong>学习曲线</strong><br> Pelican 的配置和主题定制可能需要一定的学习成本。</p></li></ul><p>如果你喜欢写作，想要一个简单、安全的平台来分享你的想法，Pelican 是一个不错的选择。</p><hr><h1 id="pelican" tabindex="-1"><a class="header-anchor" href="#pelican"><span>pelican</span></a></h1><p><a href="https://github.com/getpelican/pelican" target="_blank" rel="noopener noreferrer">Pelican</a> 是一个静态网站生成器，用Python编写，它允许您通过编写Markdown、reStructuredText和HTML等格式的文本文件来创建网站。</p><p>使用Pelican，您可以创建网站而无需担心数据库或服务器端编程。Pelican生成可以通过任何网络服务器或托管服务提供的静态站点。</p><p>您可以使用Pelican执行以下功能：</p><ul><li><p>使用您选择的编辑器在Markdown或reStructuredText中编写内容</p></li><li><p>简单的命令行工具重新生成HTML、CSS和JS源内容</p></li><li><p>易于与版本控制系统和Web挂钩进行接口</p></li><li><p>完全静态的输出可以简单地托管在任何地方</p></li></ul><h2 id="功能特点" tabindex="-1"><a class="header-anchor" href="#功能特点"><span>功能特点</span></a></h2><p>Pelican的功能亮点包括：</p><ul><li><p>时间排序的内容（例如，文章、博客文章）以及静态页面</p></li><li><p>与外部服务的集成</p></li><li><p>站点主题（使用Jinja2模板创建）</p></li><li><p>在多种语言中发布文章</p></li><li><p>生成Atom和RSS订阅源</p></li><li><p>通过Pygments进行代码语法高亮显示</p></li><li><p>从WordPress、Dotclear或RSS订阅源导入现有内容</p></li><li><p>由于内容缓存和选择性输出编写，重建速度快</p></li><li><p>可通过丰富的插件生态系统进行扩展：Pelican插件</p></li></ul><p>查看 <a href="https://docs.getpelican.com/en/latest/" target="_blank" rel="noopener noreferrer">Pelican 文档</a> 以获取更多信息。</p><h2 id="为什么叫-pelican" tabindex="-1"><a class="header-anchor" href="#为什么叫-pelican"><span>为什么叫“Pelican”？</span></a></h2><p>“Pelican”是“calepin”的一个变位词，法语中意为“笔记本”。</p><h1 id="pelican主题" tabindex="-1"><a class="header-anchor" href="#pelican主题"><span>Pelican主题</span></a></h1><p>该存储库包含了用于Pelican的主题。请随意克隆、添加您自己的主题，并提交拉取请求。这是由社区管理的！</p><p>您可以在 <a href="http://www.pelicanthemes.com" target="_blank" rel="noopener noreferrer">http://www.pelicanthemes.com</a> 查看实时版本。</p><h2 id="使用主题" tabindex="-1"><a class="header-anchor" href="#使用主题"><span>使用主题</span></a></h2><p>以下说明假定您已经阅读了所有Pelican文档，有一个工作站点，并且现在想要应用一个非默认主题。</p><p>首先，选择一个位置来存放您的主题。对于这个示例，我们将使用目录~/pelican-themes，但您的目录可能不同。</p><p>在您的本地机器上将pelican-themes存储库克隆到该位置：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --recursive</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/getpelican/pelican-themes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/pelican-themes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在您应该在 <code>~/pelican-themes/</code> 下存储您的 pelican-themes 存储库。</p><p>要使用其中一个主题，请编辑您的Pelican设置文件以包含以下行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>THEME = &quot;/home/user/pelican-themes/theme-name&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>所以，例如，要使用mnmlist主题，您将编辑您的设置文件以包含：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>THEME = &quot;/home/user/pelican-themes/mnmlist&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>保存对设置文件的更改，然后使用您已经设置的 <code>pelican-quickstart Makefile</code> 重新生成您的站点：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> html</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也可以通过-pelican命令的 <code>-t ~/pelican-themes/theme-name</code> 参数直接指定主题。</p><p>如果您想要编辑您的主题，请确保您所做的任何编辑都是针对存储在~/pelican-themes/theme-name中的副本进行的。</p><p>对于存储在站点输出目录中的文件所做的任何更改都将在下次生成站点时被删除。</p><h1 id="pelican插件" tabindex="-1"><a class="header-anchor" href="#pelican插件"><span>Pelican插件</span></a></h1><p>重要提示：我们正在将插件从这个单一的存储库迁移到它们自己的独立存储库，这些存储库位于新的Pelican插件组织下，这是一个供插件作者与Pelican维护者和社区其他成员更广泛合作的地方。我们的意图是让所有新组织下的插件都采用新的“命名空间插件”格式，这意味着这些插件可以轻松地通过Pip安装，并且Pelican 4.5+可以立即识别它们——而不必显式启用它们。</p><p>这个过渡过程需要一些时间，因此我们感谢您在此期间的耐心等待。如果您想帮助加速这个过渡，以下内容将非常有帮助：</p><ul><li>如果您在这里找到一个尚未迁移到新组织的插件，请在这个存储库下创建一个新的问题，并说明您想要帮助迁移的插件，之后Pelican维护者将指导您完成此过程。</li><li>如果您来到这里提交一个拉取请求以添加您的插件，请考虑将您的插件移动到Pelican插件组织下。要开始，请在这个存储库下创建一个新的问题，提供您插件的详细信息，之后Pelican维护者将指导您完成此过程。</li><li>无论您是创建新插件还是迁移现有插件，请使用提供的Cookiecutter模板生成符合社区约定的脚手架命名空间插件。查看Simple Footnotes存储库，以查看一个已迁移插件的示例。</li></ul><p>以下其余信息与传统插件相关，但不适用于Pelican插件组织中的新命名空间插件。</p><h1 id="如何使用插件" tabindex="-1"><a class="header-anchor" href="#如何使用插件"><span>如何使用插件</span></a></h1><p>安装和使用这些插件的最简单方法是克隆这个存储库：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --recursive</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/getpelican/pelican-plugins</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>并在您的设置文件中激活您想要的插件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PLUGIN_PATHS = [&#39;path/to/pelican-plugins&#39;]</span></span>
<span class="line"><span>PLUGINS = [&#39;assets&#39;, &#39;sitemap&#39;, &#39;gravatar&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>PLUGIN_PATHS可以是相对于您的设置文件的路径，也可以是绝对路径。</p><p>或者，如果插件位于可导入的路径中，您可以省略PLUGIN_PATHS并列出它们：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PLUGINS = [&#39;assets&#39;, &#39;sitemap&#39;, &#39;gravatar&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者您可以直接导入插件并给出：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import my_plugin</span></span>
<span class="line"><span>PLUGINS = [my_plugin, &#39;assets&#39;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://github.com/getpelican/pelican" target="_blank" rel="noopener noreferrer">https://github.com/getpelican/pelican</a></p>`,78)]))}const o=i(s,[["render",t]]),g=JSON.parse('{"path":"/posts/blogs/2016-04-13-blog-engine-06-pelican-01-intro.html","title":"blog-engine-06-pelican 静态网站生成 支持 markdown 和 reST 语法","lang":"zh-CN","frontmatter":{"title":"blog-engine-06-pelican 静态网站生成 支持 markdown 和 reST 语法","date":"2016-04-13T00:00:00.000Z","categories":["Blogs"],"tags":["hexo","blog","blog-engine"],"published":true,"description":"拓展阅读 blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比 blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记 blog-engine-02-博客引擎jekyll-jekyll 博客引...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/blogs/2016-04-13-blog-engine-06-pelican-01-intro.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"blog-engine-06-pelican 静态网站生成 支持 markdown 和 reST 语法"}],["meta",{"property":"og:description","content":"拓展阅读 blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比 blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记 blog-engine-02-博客引擎jekyll-jekyll 博客引..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"hexo"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"blog-engine"}],["meta",{"property":"article:published_time","content":"2016-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"blog-engine-06-pelican 静态网站生成 支持 markdown 和 reST 语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":8.07,"words":2421},"filePathRelative":"posts/blogs/2016-04-13-blog-engine-06-pelican-01-intro.md","localizedDate":"2016年4月13日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2016/04/13/blog-engine-01-overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/04/13/blog-engine-02-jekyll-01-install\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记</a></p>","autoDesc":true}');export{o as comp,g as data};
