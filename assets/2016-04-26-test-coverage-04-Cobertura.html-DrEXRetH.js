import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,o as s}from"./app-CEDSurVN.js";const i={};function n(o,a){return s(),r("div",null,a[0]||(a[0]=[t(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2018/06/23/test-04-test-converage" target="_blank" rel="noopener noreferrer">test 系统学习-04-test converate 测试覆盖率 jacoco 原理介绍</a></p><p><a href="https://houbb.github.io/2018/06/23/test-05-jacoco-idea-plugin" target="_blank" rel="noopener noreferrer">test 系统学习-05-test jacoco 测试覆盖率与 idea 插件</a></p><p><a href="https://houbb.github.io/2018/06/23/test-06-jacoco-overview" target="_blank" rel="noopener noreferrer">test 系统学习-06-test jacoco</a></p><h1 id="关于-cobertura" tabindex="-1"><a class="header-anchor" href="#关于-cobertura"><span>关于 Cobertura</span></a></h1><p>Cobertura是一个免费的Java代码覆盖率报告工具，基于jcoverage 1.0.5。详细信息请参阅Cobertura网页和维基。</p><p>从版本2.0.0开始，Cobertura遵循语义版本控制准则。</p><h1 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h1><p>您可以从中央仓库下载Cobertura。这包括用于独立命令行使用的分发版本。</p><p>要将其作为Maven依赖项使用，可以使用以下片段：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    net.sourceforge.cobertura</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cobertura</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    2.1.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="版权" tabindex="-1"><a class="header-anchor" href="#版权"><span>版权</span></a></h1><p>net.sourceforge.cobertura.javancss包中的代码版权属于 Chr. Clemens Lee（C）2000。</p><p>请参阅包含的文件 &quot;LICENSE.txt&quot;。</p><h1 id="许可证" tabindex="-1"><a class="header-anchor" href="#许可证"><span>许可证</span></a></h1><p>Cobertura是免费软件，大部分使用GNU GPL许可，您可以根据自由软件基金会发布的GNU通用公共许可证的第2版或（根据您的选择）任何以后的版本重新分发或修改它。有关详细信息，请查看此分发中包含的 &quot;LICENSE.txt&quot; 文件。Cobertura的部分内容根据Apache软件许可证第1.1版授权。</p><h1 id="保修" tabindex="-1"><a class="header-anchor" href="#保修"><span>保修</span></a></h1><p>Cobertura被分发，希望它是有用的，但没有任何保修；甚至没有适销性或适用于特定目的的默示保修。有关更多详细信息，请参阅GNU通用公共许可证。</p><h1 id="约定" tabindex="-1"><a class="header-anchor" href="#约定"><span>约定</span></a></h1><p>提交之前</p><p>检查所有测试是否通过</p><p>构建项目，以便所有代码都得到统一的缩进。Maven插件确保了这一点。</p><h1 id="maven迁移说明" tabindex="-1"><a class="header-anchor" href="#maven迁移说明"><span>MAVEN迁移说明</span></a></h1><p>在所有文件被移动的情况下，如何获得良好的责任？</p><p>使用 &quot;git blame --follow&quot; nameOfFile.java</p><p>Cobertura基于Travis-CI构建。</p><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="详细介绍一下-cobertura" tabindex="-1"><a class="header-anchor" href="#详细介绍一下-cobertura"><span>详细介绍一下 Cobertura</span></a></h2><p>Cobertura是一个用于Java应用程序的开源代码覆盖率分析工具。</p><p>它通过在源代码中插入一些特殊的代码，来跟踪程序在运行时哪些代码被执行，从而生成详细的代码覆盖率报告。</p><p>以下是Cobertura的一些关键特点和使用方面的详细介绍：</p><h3 id="主要特点" tabindex="-1"><a class="header-anchor" href="#主要特点"><span>主要特点：</span></a></h3><ol><li><p><strong>代码覆盖率分析：</strong> Cobertura通过插桩源代码或字节码，以实现行、分支、方法等不同层次的代码覆盖率分析。这有助于开发人员了解他们的代码在测试中的执行情况。</p></li><li><p><strong>报告生成：</strong> Cobertura生成多种格式的报告，包括HTML、XML和控制台输出。这些报告提供了详细的统计信息，使开发人员能够可视化地查看哪些代码被覆盖，哪些未被覆盖。</p></li><li><p><strong>易于集成：</strong> Cobertura易于集成到不同的构建工具中，如Ant、Maven和Gradle。它也支持与JUnit等测试框架的集成，可以方便地在测试过程中进行代码覆盖分析。</p></li><li><p><strong>历史记录和趋势：</strong> Cobertura可以追踪代码覆盖率的历史记录，并生成趋势报告，帮助团队了解代码覆盖率的演变趋势。</p></li><li><p><strong>支持忽略规则：</strong> Cobertura允许开发人员定义一些规则，以排除不希望进行覆盖分析的代码，如第三方库或自动生成的代码。</p></li><li><p><strong>开源且活跃：</strong> Cobertura是一个开源项目，具有活跃的社区支持。虽然原始项目在一段时间内没有更新，但社区维护了一个基于JaCoCo的分支，称为Cobertura 2.1。</p></li></ol><h3 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例：</span></a></h3><h4 id="_1-集成到maven项目" tabindex="-1"><a class="header-anchor" href="#_1-集成到maven项目"><span>1. 集成到Maven项目：</span></a></h4><p>在Maven项目的<code>pom.xml</code>中添加以下插件配置：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            org.codehaus.mojo</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            cobertura-maven-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            2.7</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    html</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    xml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        cobertura</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在命令行中运行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cobertura:cobertura</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-生成html报告" tabindex="-1"><a class="header-anchor" href="#_2-生成html报告"><span>2. 生成HTML报告：</span></a></h4><p>在项目目录下运行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cobertura-report</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将在<code>target/site/cobertura</code>目录下生成HTML报告。</p><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项：</span></a></h3><ul><li><p>Cobertura对于大型项目可能会产生一些性能开销，因为它在运行时会修改字节码。在某些情况下，可能需要仔细评估性能影响。</p></li><li><p>虽然Cobertura是一个强大的工具，但在一些特定场景下可能不如JaCoCo等工具灵活。选择工具时应根据具体项目需求进行评估。</p></li></ul><p>总体而言，Cobertura是一个功能强大的代码覆盖率工具，适用于许多Java项目，特别是对于小型到中型规模的应用程序。</p><h2 id="cobertura-emma-jacoco-的差异对比" tabindex="-1"><a class="header-anchor" href="#cobertura-emma-jacoco-的差异对比"><span>Cobertura/emma/jacoco 的差异对比？</span></a></h2><p>Cobertura、Emma（JaCoCo的前身）和JaCoCo都是Java代码覆盖率工具，它们在实现和特性上存在一些差异。</p><p>以下是它们之间的一些主要区别：</p><h3 id="_1-实现原理" tabindex="-1"><a class="header-anchor" href="#_1-实现原理"><span>1. <strong>实现原理：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 使用插桩技术，通过在字节码中插入特殊代码来追踪执行的代码路径。</li><li><strong>Emma：</strong> 通过在源代码或字节码中插入探针代码来实现覆盖率分析。</li><li><strong>JaCoCo：</strong> 与Emma类似，通过在字节码中插入探针代码实现覆盖率分析。JaCoCo是Emma的继任者，采用了更现代的方法和改进。</li></ul><h3 id="_2-支持的覆盖率度量" tabindex="-1"><a class="header-anchor" href="#_2-支持的覆盖率度量"><span>2. <strong>支持的覆盖率度量：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 支持语句覆盖、分支覆盖、方法覆盖等。</li><li><strong>Emma：</strong> 支持行覆盖、分支覆盖、方法覆盖、基本块覆盖等。</li><li><strong>JaCoCo：</strong> 支持行覆盖、分支覆盖、方法覆盖、指令覆盖等。JaCoCo提供了更丰富的覆盖率度量。</li></ul><h3 id="_3-报告生成" tabindex="-1"><a class="header-anchor" href="#_3-报告生成"><span>3. <strong>报告生成：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 生成HTML和XML格式的报告。</li><li><strong>Emma：</strong> 生成文本、HTML和XML格式的报告。</li><li><strong>JaCoCo：</strong> 生成HTML、XML和CSV格式的报告。JaCoCo的HTML报告相对于Cobertura和Emma更现代化。</li></ul><h3 id="_4-集成和支持" tabindex="-1"><a class="header-anchor" href="#_4-集成和支持"><span>4. <strong>集成和支持：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 相对较轻量，适用于小到中型项目。</li><li><strong>Emma：</strong> Emma本身已经不再积极维护，但它的继任者JaCoCo得到了广泛的支持。</li><li><strong>JaCoCo：</strong> 目前是最为活跃和广泛使用的Java代码覆盖率工具，支持Maven、Gradle、Ant等构建工具。</li></ul><h3 id="_5-性能影响" tabindex="-1"><a class="header-anchor" href="#_5-性能影响"><span>5. <strong>性能影响：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 有一些性能开销，特别是对于大型项目。</li><li><strong>Emma：</strong> 与Cobertura类似，可能对大型项目的性能产生一定影响。</li><li><strong>JaCoCo：</strong> 通过采用更现代的技术和算法，性能影响相对较小。</li></ul><h3 id="_6-对源代码的依赖" tabindex="-1"><a class="header-anchor" href="#_6-对源代码的依赖"><span>6. <strong>对源代码的依赖：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 不需要访问源代码。</li><li><strong>Emma：</strong> 不一定需要访问源代码，根据配置和使用情况而定。</li><li><strong>JaCoCo：</strong> 不需要访问源代码，完全可以在没有源代码的情况下执行覆盖率分析。</li></ul><h3 id="_7-开发者社区" tabindex="-1"><a class="header-anchor" href="#_7-开发者社区"><span>7. <strong>开发者社区：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 相对较小的社区，原始项目的维护相对较少。</li><li><strong>Emma：</strong> Emma本身已经不再积极维护，但它的继任者JaCoCo有一个活跃的社区。</li><li><strong>JaCoCo：</strong> 有一个大而活跃的社区，得到了广泛的支持。</li></ul><h3 id="_8-支持的java版本" tabindex="-1"><a class="header-anchor" href="#_8-支持的java版本"><span>8. <strong>支持的Java版本：</strong></span></a></h3><ul><li><strong>Cobertura：</strong> 支持Java 5及以上。</li><li><strong>Emma：</strong> 支持Java 2及以上。</li><li><strong>JaCoCo：</strong> 支持Java 5及以上。</li></ul><p>总体而言，JaCoCo是目前被广泛接受和推荐的Java代码覆盖率工具，具有更丰富的功能和更现代的实现。</p><p>选择工具时应根据项目需求、集成方便性和开发者社区等因素进行权衡。</p><h2 id="给出-cobertura-的最佳实践" tabindex="-1"><a class="header-anchor" href="#给出-cobertura-的最佳实践"><span>给出 Cobertura 的最佳实践</span></a></h2><p>Cobertura的最佳实践通常涉及配置、集成、解释报告以及在项目中实现持续改进。</p><p>以下是一些Cobertura的最佳实践：</p><ol><li><p><strong>集成到构建工具中：</strong></p><ul><li>将Cobertura集成到项目的构建工具中，如Maven、Gradle或Ant。这样，可以在每次构建时自动运行代码覆盖率分析。</li></ul></li><li><p><strong>为测试代码提供足够的覆盖：</strong></p><ul><li>保证测试用例覆盖到项目中的主要代码路径。这有助于确保代码覆盖率报告反映出项目的实际测试情况。</li></ul></li><li><p><strong>定期分析代码覆盖率：</strong></p><ul><li>定期运行Cobertura以分析代码覆盖率，并将结果整合到持续集成环境中。这有助于及早发现并解决代码覆盖率的问题。</li></ul></li><li><p><strong>设定合理的目标：</strong></p><ul><li>设定合理的代码覆盖率目标，这取决于项目的特性和要求。过高的目标可能导致不切实际的工作量。</li></ul></li><li><p><strong>处理例外情况：</strong></p><ul><li>确保Cobertura能够处理项目中的例外情况，如异步代码或特殊的代码结构。</li></ul></li><li><p><strong>生成易于理解的报告：</strong></p><ul><li>Cobertura生成的报告应该易于理解。了解报告中的不同部分，包括哪些代码路径被测试覆盖，以便更好地利用这些信息。</li></ul></li><li><p><strong>版本控制与协作：</strong></p><ul><li>将Cobertura的配置文件和生成的报告纳入版本控制系统，并确保团队成员都知道如何运行和解释这些报告。</li></ul></li><li><p><strong>优化测试用例：</strong></p><ul><li>优化测试用例以更全面地覆盖代码。这包括测试边界条件、异常情况以及各种可能的执行路径。</li></ul></li><li><p><strong>审查和改进：</strong></p><ul><li>定期审查代码覆盖率报告，特别是关注覆盖率较低的区域，并制定计划进行改进。</li></ul></li><li><p><strong>持续改进：</strong></p><ul><li>将代码覆盖率的改进纳入持续改进流程。与团队一起反思测试策略，讨论如何更好地利用Cobertura来提高代码质量。</li></ul></li></ol><p>这些最佳实践有助于确保Cobertura的有效使用，从而提高代码的可维护性和质量。</p><h2 id="给出深入学习-cobertura-的资料-包含网址" tabindex="-1"><a class="header-anchor" href="#给出深入学习-cobertura-的资料-包含网址"><span>给出深入学习 Cobertura 的资料，包含网址</span></a></h2><p>在深入学习Cobertura时，你可以参考以下资料，包含了网址和文档，以便更好地理解和使用这个工具：</p><ol><li><p><strong>Cobertura官方网站：</strong></p><ul><li><a href="http://cobertura.github.io/cobertura/" target="_blank" rel="noopener noreferrer">Cobertura Official Website</a> - Cobertura的官方网站是一个重要的资源，提供了文档、下载和其他有用的信息。</li></ul></li><li><p><strong>GitHub仓库：</strong></p><ul><li><a href="https://github.com/cobertura/cobertura" target="_blank" rel="noopener noreferrer">Cobertura GitHub Repository</a> - 在GitHub上的Cobertura仓库包含源代码、问题追踪和社区贡献。你可以在这里找到最新的发布版本和开发更新。</li></ul></li><li><p><strong>Cobertura Maven插件文档：</strong></p><ul><li><a href="http://www.mojohaus.org/cobertura-maven-plugin/index.html" target="_blank" rel="noopener noreferrer">Cobertura Maven Plugin Documentation</a> - 如果你使用Maven构建工具，这个插件的文档提供了关于如何配置和使用Cobertura的详细说明。</li></ul></li><li><p><strong>Cobertura Gradle插件文档：</strong></p><ul><li><a href="https://docs.gradle.org/current/userguide/cobertura_plugin.html" target="_blank" rel="noopener noreferrer">Cobertura Gradle Plugin Documentation</a> - 如果你使用Gradle构建工具，Gradle插件文档将指导你如何集成Cobertura到Gradle项目中。</li></ul></li><li><p><strong>Cobertura的使用示例：</strong></p><ul><li><a href="https://dzone.com/articles/measuring-code-coverage-using-cobertura" target="_blank" rel="noopener noreferrer">Cobertura Example</a> - 这篇文章提供了使用Cobertura的简单示例，有助于初学者更好地了解如何应用该工具。</li></ul></li><li><p><strong>Stack Overflow上的Cobertura标签：</strong></p><ul><li><a href="https://stackoverflow.com/questions/tagged/cobertura" target="_blank" rel="noopener noreferrer">Cobertura on Stack Overflow</a> - 在Stack Overflow上Cobertura标签下的问题和答案是解决常见问题的好地方，也可以在这里提出自己的问题。</li></ul></li><li><p><strong>Cobertura User Group：</strong></p><ul><li><a href="https://groups.google.com/g/cobertura" target="_blank" rel="noopener noreferrer">Cobertura User Group</a> - Cobertura的用户组是一个可以获取支持和分享经验的社区平台。</li></ul></li></ol><p>请注意，由于互联网资源可能会发生变化，建议随时查阅Cobertura的官方网站和相关社区以获取最新的信息和文档。</p><h2 id="如果让你深入学习-cobertura-你会问哪-10-个问题-为什么" tabindex="-1"><a class="header-anchor" href="#如果让你深入学习-cobertura-你会问哪-10-个问题-为什么"><span>如果让你深入学习 Cobertura，你会问哪 10 个问题？为什么</span></a></h2><p>Cobertura是一个用于代码覆盖度分析的开源工具，通常用于测试软件的代码覆盖率。</p><p>如果我要深入学习Cobertura，我可能会问以下十个问题：</p><ol><li><p><strong>什么是Cobertura？</strong></p><ul><li>这个问题将有助于获得Cobertura的基本定义和概述，了解它的主要目标和用途。</li></ul></li><li><p><strong>Cobertura是如何工作的？</strong></p><ul><li>了解Cobertura的工作原理，包括它是如何追踪和分析代码覆盖率的。</li></ul></li><li><p><strong>支持的编程语言有哪些？</strong></p><ul><li>确保了解Cobertura支持的编程语言，以便确定它是否适用于你的项目。</li></ul></li><li><p><strong>如何集成Cobertura到项目中？</strong></p><ul><li>了解Cobertura的集成过程，包括如何配置和运行它来分析代码覆盖率。</li></ul></li><li><p><strong>Cobertura提供哪些报告和统计信息？</strong></p><ul><li>探讨Cobertura生成的报告和统计信息，以便有效地解读和利用代码覆盖率数据。</li></ul></li><li><p><strong>Cobertura与其他代码覆盖工具的比较？</strong></p><ul><li>比较Cobertura与其他类似工具的优缺点，帮助选择最适合特定需求的工具。</li></ul></li><li><p><strong>如何处理代码中的例外情况？</strong></p><ul><li>考虑了解Cobertura在处理异常、特殊情况或异步代码方面的能力。</li></ul></li><li><p><strong>Cobertura是否支持持续集成？</strong></p><ul><li>了解Cobertura是否能够与持续集成工具集成，以便在每次构建或测试时自动运行。</li></ul></li><li><p><strong>有哪些实际应用案例？</strong></p><ul><li>寻找实际项目中使用Cobertura的案例，了解其在不同场景下的应用经验。</li></ul></li><li><p><strong>Cobertura的未来发展方向是什么？</strong></p><ul><li>了解Cobertura的开发者社区活跃度、最新版本的更新和计划，以及未来发展方向。</li></ul></li></ol><p>这些问题有助于建立对Cobertura的全面理解，使你能够更好地使用它来提高代码质量和测试覆盖率。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://github.com/cobertura/cobertura" target="_blank" rel="noopener noreferrer">https://github.com/cobertura/cobertura</a></p>`,83)]))}const h=e(i,[["render",n]]),u=JSON.parse('{"path":"/posts/tests/2016-04-26-test-coverage-04-Cobertura.html","title":"test coverate-04-测试覆盖率 Cobertura","lang":"zh-CN","frontmatter":{"title":"test coverate-04-测试覆盖率 Cobertura","date":"2016-04-26T00:00:00.000Z","categories":["Test"],"tags":["java","test"],"published":true,"description":"拓展阅读 test 系统学习-04-test converate 测试覆盖率 jacoco 原理介绍 test 系统学习-05-test jacoco 测试覆盖率与 idea 插件 test 系统学习-06-test jacoco 关于 Cobertura Cobertura是一个免费的Java代码覆盖率报告工具，基于jcoverage 1.0.5。详...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/tests/2016-04-26-test-coverage-04-Cobertura.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"test coverate-04-测试覆盖率 Cobertura"}],["meta",{"property":"og:description","content":"拓展阅读 test 系统学习-04-test converate 测试覆盖率 jacoco 原理介绍 test 系统学习-05-test jacoco 测试覆盖率与 idea 插件 test 系统学习-06-test jacoco 关于 Cobertura Cobertura是一个免费的Java代码覆盖率报告工具，基于jcoverage 1.0.5。详..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:published_time","content":"2016-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"test coverate-04-测试覆盖率 Cobertura\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":11.13,"words":3338},"filePathRelative":"posts/tests/2016-04-26-test-coverage-04-Cobertura.md","localizedDate":"2016年4月26日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2018/06/23/test-04-test-converage\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">test 系统学习-04-test converate 测试覆盖率 jacoco 原理介绍</a></p>\\n<p><a href=\\"https://houbb.github.io/2018/06/23/test-05-jacoco-idea-plugin\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">test 系统学习-05-test jacoco 测试覆盖率与 idea 插件</a></p>","autoDesc":true}');export{h as comp,u as data};
