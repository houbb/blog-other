import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as e,o as n}from"./app-CEDSurVN.js";const l={};function t(p,s){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="facade" tabindex="-1"><a class="header-anchor" href="#facade"><span>Facade</span></a></h1><p>facade 应该怎么设计？</p><p>最近暴露给外部使用，由于是历史遗留项目，问题很严重。</p><p>facade 引入了很多引用。</p><h2 id="纯净性" tabindex="-1"><a class="header-anchor" href="#纯净性"><span>纯净性</span></a></h2><p>最好的 facade 应该只有 POJO 和 Interface，不包含任何的三方 jar.</p><h3 id="内部系统" tabindex="-1"><a class="header-anchor" href="#内部系统"><span>内部系统</span></a></h3><p>如果公司内部有比较成熟的架构，可以统一使用公共的 jar。</p><p>保证不能有任何的 jar 冲突，不能有任何的冗余 jar。</p><h2 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h2><ul><li>方式1</li></ul><p>一般一个版本是放在一个大的项目下，打包的时候需要把父类 pom 信息排除掉。</p><p>然后保证每次记录最新的版本号。</p><ul><li>方式2</li></ul><p>直接将 facade 设计成一个单独的模块，不和当前的项目有依赖。</p><ul><li>方式3</li></ul><p>每次拉取分支的时候，项目都一个唯一的版本号。</p><p>开发的时候，使用 XXXX-SNAPSHOT</p><p>上线的时候使用 XXXX 的 RELEASE 版本。</p><p>封板：当测试完成以后，禁止往分支中提交代码，可能对代码进行封存。</p><h1 id="文件配置" tabindex="-1"><a class="header-anchor" href="#文件配置"><span>文件配置</span></a></h1><h2 id="setting-xml" tabindex="-1"><a class="header-anchor" href="#setting-xml"><span>setting.xml</span></a></h2><p>在文件中配置仓库的访问权限。</p><h2 id="pom-xml" tabindex="-1"><a class="header-anchor" href="#pom-xml"><span>pom.xml</span></a></h2><h3 id="仓库地址" tabindex="-1"><a class="header-anchor" href="#仓库地址"><span>仓库地址</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        nexus</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        Releases</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        http://代码仓库地址/nexus/content/repositories/releases/</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        nexus</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        Snapshots</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        http://代码仓库地址/nexus/content/repositories/snapshots/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定上传-resource" tabindex="-1"><a class="header-anchor" href="#指定上传-resource"><span>指定上传 resource</span></a></h3><p>别人可以看到你的注释等信息。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            maven-compiler-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            3.6.0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                1.8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                1.8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                UTF-8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            org.apache.maven.plugins</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            maven-source-plugin</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            3.0.1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    attach-sources</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                        jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="发布命令" tabindex="-1"><a class="header-anchor" href="#发布命令"><span>发布命令</span></a></h2><p>到指定的模块下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$   mvn clean deploy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,32)]))}const h=a(l,[["render",t]]),c=JSON.parse('{"path":"/posts/Design/2019-01-30-facade-design-best-practise.html","title":"Facade 设计最佳实践","lang":"zh-CN","frontmatter":{"title":"Facade 设计最佳实践","date":"2019-01-30T00:00:00.000Z","categories":["Design"],"tags":["design","best-practise","sh"],"published":true,"excerpt":"Facade 设计最佳实践","description":"Facade facade 应该怎么设计？ 最近暴露给外部使用，由于是历史遗留项目，问题很严重。 facade 引入了很多引用。 纯净性 最好的 facade 应该只有 POJO 和 Interface，不包含任何的三方 jar. 内部系统 如果公司内部有比较成熟的架构，可以统一使用公共的 jar。 保证不能有任何的 jar 冲突，不能有任何的冗余 j...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Design/2019-01-30-facade-design-best-practise.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Facade 设计最佳实践"}],["meta",{"property":"og:description","content":"Facade facade 应该怎么设计？ 最近暴露给外部使用，由于是历史遗留项目，问题很严重。 facade 引入了很多引用。 纯净性 最好的 facade 应该只有 POJO 和 Interface，不包含任何的三方 jar. 内部系统 如果公司内部有比较成熟的架构，可以统一使用公共的 jar。 保证不能有任何的 jar 冲突，不能有任何的冗余 j..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"design"}],["meta",{"property":"article:tag","content":"best-practise"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2019-01-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Facade 设计最佳实践\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-01-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.48,"words":445},"filePathRelative":"posts/Design/2019-01-30-facade-design-best-practise.md","localizedDate":"2019年1月30日","autoDesc":true}');export{h as comp,c as data};
