import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,o}from"./app-uJE4P3e0.js";const n={};function i(s,e){return o(),r("div",null,e[0]||(e[0]=[a('<h1 id="parameterresolver" tabindex="-1"><a class="header-anchor" href="#parameterresolver"><span>ParameterResolver</span></a></h1><p>ParameterResolver 定义用于在运行时动态解析参数的扩展API。</p><p>如果测试构造函数或@Test、@RepeatedTest、@ParameterizedTest、@TestFactory、@BeforeEach、@BeforeAll或@AfterAll方法接受一个参数，那么参数必须在运行时由一个参数解析器解析。</p><p>参数解析器可以是内置的(参见<a href="https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoParameterResolver.java" target="_blank" rel="noopener noreferrer">TestInfoParameterResolver</a>)，也可以由用户注册。</p><p>一般来说，参数可以通过名称、类型、注释或其任何组合来解析。对于具体的示例，请参考<br><a href="https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/execution/injection/sample/CustomTypeParameterResolver.java" target="_blank" rel="noopener noreferrer">CustomTypeParameterResolver</a> 和 <a href="https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/test/java/org/junit/jupiter/engine/execution/injection/sample/CustomAnnotationParameterResolver.java" target="_blank" rel="noopener noreferrer">CustomAnnotationParameterResolver</a> 的源代码。</p><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h2><p>由于在JDK 9之前的JDK版本上，javac生成的字节代码中有一个错误，因此可以通过核心 <code>java.lang.reflect.Parameter</code> 直接查找关于参数的注释对于内部类构造函数(例如，@嵌套测试类中的构造函数) API总是失败的。</p><p>因此，提供给参数解析器实现的ParameterContext API包含以下方便的方法，用于正确查找关于参数的注释。强烈建议扩展作者使用这些方法，而不是使用<br><code>java.lang. reflection.Parameter</code> 中提供的方法。以避免JDK中的这个bug。</p><ul><li><p>boolean isAnnotated(Class annotationType)</p></li><li><p>Optional findAnnotation(Class annotationType)</p></li><li><p>List findRepeatableAnnotations(Class annotationType)</p></li></ul>',9)]))}const m=t(n,[["render",i]]),c=JSON.parse('{"path":"/posts/test/2018-06-25-junit5-22-ex-param-resolve.html","title":"Junit5-22-Ex Parameter Resolution","lang":"zh-CN","frontmatter":{"title":"Junit5-22-Ex Parameter Resolution","date":"2018-06-26T00:00:00.000Z","categories":["Test"],"tags":["test","sh"],"published":true,"description":"ParameterResolver ParameterResolver 定义用于在运行时动态解析参数的扩展API。 如果测试构造函数或@Test、@RepeatedTest、@ParameterizedTest、@TestFactory、@BeforeEach、@BeforeAll或@AfterAll方法接受一个参数，那么参数必须在运行时由一个参数解析...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/test/2018-06-25-junit5-22-ex-param-resolve.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Junit5-22-Ex Parameter Resolution"}],["meta",{"property":"og:description","content":"ParameterResolver ParameterResolver 定义用于在运行时动态解析参数的扩展API。 如果测试构造函数或@Test、@RepeatedTest、@ParameterizedTest、@TestFactory、@BeforeEach、@BeforeAll或@AfterAll方法接受一个参数，那么参数必须在运行时由一个参数解析..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-06-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Junit5-22-Ex Parameter Resolution\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.1,"words":329},"filePathRelative":"posts/test/2018-06-25-junit5-22-ex-param-resolve.md","localizedDate":"2018年6月26日","excerpt":"\\n<p>ParameterResolver 定义用于在运行时动态解析参数的扩展API。</p>\\n<p>如果测试构造函数或@Test、@RepeatedTest、@ParameterizedTest、@TestFactory、@BeforeEach、@BeforeAll或@AfterAll方法接受一个参数，那么参数必须在运行时由一个参数解析器解析。</p>\\n<p>参数解析器可以是内置的(参见<a href=\\"https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoParameterResolver.java\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">TestInfoParameterResolver</a>)，也可以由用户注册。</p>","autoDesc":true}');export{m as comp,c as data};
