import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a,o as l}from"./app-uJE4P3e0.js";const n={};function s(t,e){return l(),p("div",null,e[0]||(e[0]=[a(`<h1 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>Note</span></a></h1><p>对一个月来的记录进行分类整理。偏于以后查阅。</p><h1 id="plan" tabindex="-1"><a class="header-anchor" href="#plan"><span>Plan</span></a></h1><ul><li><p>TED</p></li><li><p>Metadata</p></li></ul><ol><li><p>支持多种数据库</p></li><li><p>使用脚本(建议是程序)</p></li></ol><ul><li>DOC</li></ul><p>对于文档的解析。生成一套独自的页面。(应该有类似的工具，没必要全部从零开始。)</p><ul><li>Read</li></ul><p>《设计模式》《UML》学而不用，意义不大。</p><ul><li>Log4j</li></ul><p>日志根据错误级别分开放(这个太老旧了，可以舍弃)</p><ul><li>app-template</li></ul><p>对于系统使用模板的不断完善。</p><h1 id="imix" tabindex="-1"><a class="header-anchor" href="#imix"><span>Imix</span></a></h1><p>一、Rule</p><ul><li><p>登录成功修改密码</p></li><li><p>限制重连次数(每次不低于30S)</p></li><li><p>消息直接转发到MQ</p></li></ul><p>二、代码修改规则</p><ul><li><p>改哪里</p></li><li><p>怎么改(如何查询)</p></li><li><p>如何处理</p></li></ul><p>三、MQ相关</p><p>(建议学习JMS)</p><ul><li><p>监听者的注册以及使用？</p></li><li><p>配置信息</p></li><li><p>Message 如何知道已经回执？</p></li><li><p>消息入库</p></li></ul><p>使用XSL进行转换。</p><p>四、错误信息的处理</p><p>保证自己的错误信息和IMIX标准一致，便于统一处理。</p><p>五、接口设计</p><p>尽可能的隐藏实现细节。减少别人的传参。</p><p>文档的编写。(尽量完善。)</p><p>测试的补充。(很消耗时间，不现实)。</p><p>测试场景的设计，根据实际的场景来。</p><p>六、异构系统</p><p>1、对于字段类型，全部统一使用 <code>String</code></p><p>2、名称的大小写，不同的 SOAP 协议可能会变得很奇怪。</p><p>3、Set 方法对于列表可能会消失。(==!)</p><h1 id="imix-link" tabindex="-1"><a class="header-anchor" href="#imix-link"><span>IMIX Link</span></a></h1><p>一、连接步骤</p><ol><li><p>Mobile Partner</p></li><li><p>Open <code>iNode</code>, double click VPN</p></li><li><p>交易前端</p></li><li><p>证书(U盘)</p></li></ol><h1 id="xml" tabindex="-1"><a class="header-anchor" href="#xml"><span>XML</span></a></h1><p>保证源码的封闭性。（OC原则）</p><p>责任链模式可以使得职权明确。</p><ul><li><p>XPath</p></li><li><p>Xslt</p></li></ul><p>将复杂难以识别的信息转化为容易识别的信息。将容易识别的信息直接转化为可以直接使用的信息。</p><p>是否应该使用代码生成？</p><p>和其他语言的结合(js/java)</p><p>所有的方法抽离成为公共模板(使用组合的方式进行编码)</p><ul><li>XStream</li></ul><p>优于 Dom4j</p><ul><li>XSD</li></ul><p>可以自动生成。但是不可节点之间相互约束。</p><h1 id="music" tabindex="-1"><a class="header-anchor" href="#music"><span>Music</span></a></h1><p>《骑士王的荣耀》</p><p>《D City Rock》</p><h1 id="poem" tabindex="-1"><a class="header-anchor" href="#poem"><span>Poem</span></a></h1><ul><li>青春是一座孤岛</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>《青春是一座孤岛》</span></span>
<span class="line"><span>青春是一座孤岛</span></span>
<span class="line"><span>独自在岸边垂钓</span></span>
<span class="line"><span>我爱的从不回头</span></span>
<span class="line"><span>爱我的早在身后</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2017.07.04</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>流年</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>早晨中午晚上</span></span>
<span class="line"><span>周一周五周末</span></span>
<span class="line"><span>五月六月七月</span></span>
<span class="line"><span>一年两年三年</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56)]))}const d=i(n,[["render",s]]),c=JSON.parse('{"path":"/posts/Note/2017-07-22-note-201707.html","title":"Note 201707","lang":"zh-CN","frontmatter":{"title":"Note 201707","date":"2017-07-22T00:00:00.000Z","categories":["Note"],"tags":["note","work"],"published":true,"description":"Note 对一个月来的记录进行分类整理。偏于以后查阅。 Plan TED Metadata 支持多种数据库 使用脚本(建议是程序) DOC 对于文档的解析。生成一套独自的页面。(应该有类似的工具，没必要全部从零开始。) Read 《设计模式》《UML》学而不用，意义不大。 Log4j 日志根据错误级别分开放(这个太老旧了，可以舍弃) app-templ...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/Note/2017-07-22-note-201707.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Note 201707"}],["meta",{"property":"og:description","content":"Note 对一个月来的记录进行分类整理。偏于以后查阅。 Plan TED Metadata 支持多种数据库 使用脚本(建议是程序) DOC 对于文档的解析。生成一套独自的页面。(应该有类似的工具，没必要全部从零开始。) Read 《设计模式》《UML》学而不用，意义不大。 Log4j 日志根据错误级别分开放(这个太老旧了，可以舍弃) app-templ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"note"}],["meta",{"property":"article:tag","content":"work"}],["meta",{"property":"article:published_time","content":"2017-07-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Note 201707\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-07-22T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":2.06,"words":618},"filePathRelative":"posts/Note/2017-07-22-note-201707.md","localizedDate":"2017年7月22日","excerpt":"\\n<p>对一个月来的记录进行分类整理。偏于以后查阅。</p>\\n<h1>Plan</h1>\\n<ul>\\n<li>\\n<p>TED</p>\\n</li>\\n<li>\\n<p>Metadata</p>\\n</li>\\n</ul>\\n<ol>\\n<li>\\n<p>支持多种数据库</p>\\n</li>\\n<li>\\n<p>使用脚本(建议是程序)</p>\\n</li>\\n</ol>\\n<ul>\\n<li>DOC</li>\\n</ul>\\n<p>对于文档的解析。生成一套独自的页面。(应该有类似的工具，没必要全部从零开始。)</p>\\n<ul>\\n<li>Read</li>\\n</ul>\\n<p>《设计模式》《UML》学而不用，意义不大。</p>\\n<ul>\\n<li>Log4j</li>\\n</ul>","autoDesc":true}');export{d as comp,c as data};
