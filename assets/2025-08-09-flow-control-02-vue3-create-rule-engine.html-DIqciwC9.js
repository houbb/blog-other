import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a,o as n}from"./app-uJE4P3e0.js";const t={};function l(p,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm create vite@latest match-condition-demo -- --template vue</span></span>
<span class="line"><span>cd match-condition-demo</span></span>
<span class="line"><span>  npm install</span></span>
<span class="line"><span>  npm run dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="报错" tabindex="-1"><a class="header-anchor" href="#报错"><span>报错</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ npm run dev</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt; match-condition-demo@0.0.0 dev</span></span>
<span class="line"><span>&gt; vite</span></span>
<span class="line"><span></span></span>
<span class="line"><span>error when starting dev server:</span></span>
<span class="line"><span>TypeError: crypto.hash is not a function</span></span>
<span class="line"><span>    at getHash (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:2789:21)</span></span>
<span class="line"><span>    at getLockfileHash (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:11745:9)</span></span>
<span class="line"><span>    at getDepHash (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:11748:23)</span></span>
<span class="line"><span>    at initDepsOptimizerMetadata (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:11201:53)</span></span>
<span class="line"><span>    at createDepsOptimizer (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:34854:17)</span></span>
<span class="line"><span>    at new DevEnvironment (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:35619:109)</span></span>
<span class="line"><span>    at Object.defaultCreateClientDevEnvironment [as createEnvironment] (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:36038:9)</span></span>
<span class="line"><span>    at _createServer (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js:28464:132)</span></span>
<span class="line"><span>    at async CAC. (file:///D:/vue-demo/match-condition-demo/node_modules/vite/dist/node/cli.js:573:18)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ node -v</span></span>
<span class="line"><span>v20.10.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决方式-降级到-node-20-10-能跑的-vite-版本" tabindex="-1"><a class="header-anchor" href="#解决方式-降级到-node-20-10-能跑的-vite-版本"><span>解决方式 降级到 Node 20.10 能跑的 Vite 版本</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite@5.4.10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> @vitejs/plugin-vue@5.1.4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后清理依赖缓存并重装：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_modules</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="效果" tabindex="-1"><a class="header-anchor" href="#效果"><span>效果</span></a></h2><p><a href="http://localhost:5173/" target="_blank" rel="noopener noreferrer">http://localhost:5173/</a> 可以查看效果</p><h1 id="需求" tabindex="-1"><a class="header-anchor" href="#需求"><span>需求</span></a></h1><p>角色：你是一名经验丰富的前端研发。精通 vue3+elementui，页面交互设计，页面样式设计。</p><p>任务：</p><p>vue3 最简单的项目架子已经通过 <code>npm create vite@latest match-condition-demo -- --template vue</code> 命令创建。</p><p>要求</p><p>1）通过 vue3+element-ui 初始化菜单+每个页面默认简单描述</p><p>2）菜单要求包含icon，支持收缩。在左侧</p><p>3）初始化菜单包含：</p><p>条件列表</p><p>值获取方式</p><p>操作符管理</p><h2 id="要求" tabindex="-1"><a class="header-anchor" href="#要求"><span>要求</span></a></h2><p>封装性：尽可能的组件化+方便后续拓展</p><p>样式要求：页面大气+有科技感+用户体用佳+风格统一</p><p>技术选型：vue3+elementui</p><p>文件返回方式：首先给出文件整体目录，然后按照页面分类，一个个文件分别给出，避免错乱。</p><h1 id="v1-基本菜单" tabindex="-1"><a class="header-anchor" href="#v1-基本菜单"><span>v1-基本菜单</span></a></h1><h2 id="依赖安装" tabindex="-1"><a class="header-anchor" href="#依赖安装"><span>依赖安装</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install element-plus @element-plus/icons-vue</span></span>
<span class="line"><span>npm install vue-router@4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面启动报错" tabindex="-1"><a class="header-anchor" href="#页面启动报错"><span>页面启动报错</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Uncaught SyntaxError: The requested module &#39;/src/router/index.js&#39; does not provide an export named &#39;default&#39; (at main.js:3:8)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="v2-值获取页面" tabindex="-1"><a class="header-anchor" href="#v2-值获取页面"><span>v2-值获取页面</span></a></h1><p>我们来完善一下值获取页面ValueFetchMethod.vue。</p><p>要求：支持列表的查询、列表（包含分页）、新增（通过模态框）、单个数据的删除、详情。</p><p>字段说明：name 编码名称，label 显示标签、是否启用、 创建时间、修改时间、创建人、修改人、</p><p>给出实现后的页面信息，接口暂时全部 mock 实现。</p><h2 id="查询条件" tabindex="-1"><a class="header-anchor" href="#查询条件"><span>查询条件</span></a></h2><p>优化：</p><p>涉及到字段都支持查询，其中时间用范围查询，时间筛选默认折叠起来。</p><p>目前新增点击无效，缺少编辑按钮能力</p><p>修正后重新给</p><h1 id="v3-操作符管理页面" tabindex="-1"><a class="header-anchor" href="#v3-操作符管理页面"><span>v3-操作符管理页面</span></a></h1><p>我们来完善一下操作符管理页面 OperatorManagement.vue</p><p>要求：支持列表的查询、列表（包含分页）、新增（通过模态框）、单个数据的编辑、删除、详情。涉及到字段都支持查询，其中时间用范围查询，时间筛选默认折叠起来。</p><p>字段说明：name 编码名称，label 显示标签、remark 备注、是否启用、 创建时间、修改时间、创建人、修改人</p><p>给出实现后的页面信息，接口暂时全部 mock 实现。</p><p>默认的数据信息如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>IS_NULL(&quot;IS_NULL&quot;, &quot;为NULL&quot;),</span></span>
<span class="line"><span>IS_NOT_NULL(&quot;IS_NOT_NULL&quot;, &quot;不为NULL&quot;),</span></span>
<span class="line"><span>IS_EMPTY(&quot;IS_EMPTY&quot;, &quot;是否为 EMPTY&quot;),</span></span>
<span class="line"><span>IS_NOT_EMPTY(&quot;IS_NOT_EMPTY&quot;, &quot;是否不为 EMPTY&quot;),</span></span>
<span class="line"><span>EQ(&quot;EQ&quot;, &quot;等于&quot;),</span></span>
<span class="line"><span>NEQ(&quot;NEQ&quot;, &quot;不等于&quot;),</span></span>
<span class="line"><span>GT(&quot;GT&quot;, &quot;大于&quot;),</span></span>
<span class="line"><span>LT(&quot;LT&quot;, &quot;小于&quot;),</span></span>
<span class="line"><span>LTE(&quot;LTE&quot;, &quot;小于等于&quot;),</span></span>
<span class="line"><span>GTE(&quot;GTE&quot;, &quot;大于等于&quot;),</span></span>
<span class="line"><span>CONTAINS(&quot;CONTAINS&quot;, &quot;包含&quot;),</span></span>
<span class="line"><span>NOT_CONTAINS(&quot;NOT_CONTAINS&quot;, &quot;不包含&quot;),</span></span>
<span class="line"><span>START_WITH(&quot;START_WITH&quot;, &quot;以...开头&quot;),</span></span>
<span class="line"><span>NOT_START_WITH(&quot;NOT_START_WITH&quot;, &quot;不以...开头&quot;),</span></span>
<span class="line"><span>END_WITH(&quot;END_WITH&quot;, &quot;以...结尾&quot;),</span></span>
<span class="line"><span>NOT_END_WITH(&quot;NOT_END_WITH&quot;, &quot;不以...结尾&quot;),</span></span>
<span class="line"><span>MATCH_REGEX(&quot;MATCH_REGEX&quot;, &quot;匹配正则&quot;),</span></span>
<span class="line"><span>NOT_MATCH_REGEX(&quot;NOT_MATCH_REGEX&quot;, &quot;不匹配正则&quot;),</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="v4-条件列表" tabindex="-1"><a class="header-anchor" href="#v4-条件列表"><span>v4-条件列表</span></a></h1><p>我们来完善一下条件列表页面 ConditionList.vue</p><p>要求：支持列表的查询、列表（包含分页）、单个数据的删除、详情。涉及到字段都支持查询，其中时间用范围查询，时间筛选默认折叠起来。条件的新增、修改比较复杂，跳转到详细的编辑页面</p><p>字段说明：条件名称、条件标签、是否启用、表达式解释、remark 备注、创建时间、修改时间、创建人、修改人</p><p>给出实现后的页面信息，接口暂时全部 mock 实现。</p><p>给出默认的1条数据信息。</p><p>注意：条件的新增、修改比较复杂，跳转到详细的编辑页面。我们页面先留空，先实现条件列表页面。</p><p>给出实现信息</p><hr><h1 id="v5-条件编辑-新增页面-conditionedit-vue" tabindex="-1"><a class="header-anchor" href="#v5-条件编辑-新增页面-conditionedit-vue"><span>v5-条件编辑/新增页面 ConditionEdit.vue</span></a></h1><p>我们来完善一下条件编辑/新增页面 ConditionEdit.vue</p><p>信息加载：新增跳转过来，页面基本信息初始化为空；编辑过来，根据 id 加载数据，渲染页面。</p><p>要求：页面主要分为4个部分</p><p>A 上方基本信息：条件名称（最长64字）、是否启用、remark 备注（最长512字）、条件标签（Tag 标签动态编辑效果，最多5个）</p><p>B. 接下来是条件表达式模块，将其抽成一个组件。</p><p>暂时简单实现，直接让用户输入表达式即可</p><p>C. 条件明细列表部分，初始化为1个（至少保留1个）支持增删+移动，最多20个。</p><p>操作说明：条件名称单独占一行，最右侧是【新增】【删除】【上移】【下移】。【新增】【删除】控制条件明细的增删，至少保留1个，最多20个。【上移】【下移】控制排序位置(order, 从0开始递增)。</p><p>条件明细包含以下基本信息：</p><p>条件编码(code): <code>r-xxx</code>（默认 xxx 从1开始单调递增，用户不可见）</p><p>条件名称(label): 默认显示为<code>条件-xxx</code>，允许用户编辑（xxx 和编码中的 xxx 初始化一样）。</p><p>紧接着是下方的左右值+比较符，在同一行</p><p>左值获取（leftProp）：下拉框，对应我们值获取列表的默认初始值。</p><p>左值(leftValue): input 输入框</p><p>操作符（matchOperator）：下拉框，对应我们操作符列表的默认初始值。</p><p>右值获取（rightProp）：下拉框，对应我们值获取列表的默认初始值。</p><p>右值(rightValue): input 输入框</p><p>操作符（matchOperator）：下拉框，对应我们操作符列表的默认初始值。</p><p>单个条件明细的 json 如下：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;code&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;条件编码&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;label&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;条件名称&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,    </span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;leftProp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;constant&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;leftValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;matchOperator&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;EQ&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;rightProp&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;constant&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;rightValue&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;order&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>条件明细之间，类似 divider 的横线分割。</p><p>D. 接下来是预览验证模块</p><p>左侧是一个 json 输入框，允许用户输入测试 json，点击【验证】给出表达式验证的结果、耗时等基本信息</p><p>验证的真实逻辑后续会放在后端实现，暂时全部 mock 为真即可。</p><p>E. 最下方是操作模块，包含按钮 取消、确认</p><p>取消后直接返回列表页</p><p>确认后输出整体信息到 console，mock 调用保存接口，然后返回列表页</p><h2 id="其他要求" tabindex="-1"><a class="header-anchor" href="#其他要求"><span>其他要求</span></a></h2><p>给出实现后的页面信息，后端接口调用暂时全部 mock 实现。</p><h2 id="优化1" tabindex="-1"><a class="header-anchor" href="#优化1"><span>优化1</span></a></h2><p>整体布局很不错，就是这个感觉</p><p>1）新增标签部分，调整为用 el-tag 实现</p><p>2）条件表达式没看到输入框，修正下</p><p>3）条件明细部分添加限制：条件名称限制最长64，左值最长 128, 左值最长 128</p><p>4）样式优化</p><p>a. 最下方的取消、确认按钮居中显示</p><p>b. 新增、删除、上移、下移 太大了，用默认最小的 button 样式，然后用合适 icon 替代文本</p><p>c. 条件名称 左值获取 右值获取 三个放在一行，剩下的 左值+操作符+右值放在一行。布局合适点，看着要舒服些。</p><p>重新给</p><h2 id="优化2" tabindex="-1"><a class="header-anchor" href="#优化2"><span>优化2</span></a></h2><p>在我下面的代码基础上，做如下优化</p><p>1）我想要如下的标签标记效果，类似于刚才发给你的动态标签</p><ol start="2"><li>条件明细输入框适当长一点，三列刚好占满一行。</li></ol><p>3）上下移动的时候，用户输入的条件名称不要更新掉，保持原来的。（只是改变 order 顺序而已）</p><h1 id="v6-条件表达式可视化" tabindex="-1"><a class="header-anchor" href="#v6-条件表达式可视化"><span>v6-条件表达式可视化</span></a></h1><p>接下来我们对条件表达式抽象为一个组件，进行优化。原来：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  条件表达式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>优化点：</p><h2 id="页面布局" tabindex="-1"><a class="header-anchor" href="#页面布局"><span>页面布局</span></a></h2><p>1）用户手动输入各种条件可能输入错误。让用户可以可视化操作。每个条件明细用好看的按钮表示，显示的是条件名，对应的条件 code 唯一标识。</p><p>2）用户每次在下方增加、或者删除一个条件明细时。可视化的节点对应更新，清除掉所有的关系。</p><p>3）条件明细按钮支持点击选中（高亮颜色改变），再次点击取消选中。可以拖拽，移动可视化的排序位置。</p><p>4）最下方显示出对应的条件表达式，只是显示，暂时禁止编辑。</p><h2 id="功能按钮" tabindex="-1"><a class="header-anchor" href="#功能按钮"><span>功能按钮</span></a></h2><p>下方针对每个条件明细，支持的操作类型有：</p><p>1）关系类型按钮：满足全部 满足任一 自定义 清空关系</p><p>清空关系 去掉所有的节点关系，expression 同步清空</p><p>满足全部 点击后全部条件用 &amp;&amp; 关联，按钮可视化显示为 【条件1】且【条件2】且【条件3】这种形式，实际的 expression 对应变化为 r001 &amp;&amp; r002 &amp;&amp; r003</p><p>满足任一 点击后全部条件用 || 关联，按钮可视化显示为 【条件1】或【条件2】或【条件3】这种形式，实际的 expression 对应变化为 r001 || r002 || r003</p><p>自定义 点击后自定义后，支持【且】【或】【非】三个逻辑关系，最下方显示出来，允许用户选择使用；同理可视化、expression 都按照对应的标准呈现</p><p>你也可以做适当优化，但是整体目的就是一个表达式从手写==》可视化编辑的优化。</p><p>给出完整的实现 vue，以及相关 vue3 代码需要调整的地方</p><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="报错原因" tabindex="-1"><a class="header-anchor" href="#报错原因"><span>报错原因</span></a></h2><p>你这个报错</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>TypeError: crypto.hash is not a function</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>是因为 <strong>Vite 新版本内部用到的 Node API</strong> 和你当前的 Node.js 版本不兼容。<br> 从 Node.js v19 开始，<code>crypto.hash</code> 这个旧 API 已经被移除了，Vite 内部应该用的是 <code>crypto.createHash</code>。</p><p>出现这种问题的常见原因有两种：</p><ol><li><strong>Node 版本太老</strong>（比如 16.x、17.x），不支持 Vite 新版本依赖的特性。</li><li><strong>Node 版本太新</strong>（比如 21.x），Vite 旧版本还在用被废弃的 API。</li></ol><hr><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h3><h4 id="方法-1-升级-node-js-推荐" tabindex="-1"><a class="header-anchor" href="#方法-1-升级-node-js-推荐"><span>方法 1：升级 Node.js（推荐）</span></a></h4><p>如果你 Node 版本比较旧（16.x/17.x/18.x），建议直接升到 LTS 版本：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 推荐安装 Node.js 20 LTS</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">https://nodejs.org/en</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>升级后重新安装依赖：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rm</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -rf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node_modules</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="方法-2-降级-node-js" tabindex="-1"><a class="header-anchor" href="#方法-2-降级-node-js"><span>方法 2：降级 Node.js</span></a></h4><p>如果你 Node 版本很新（&gt;=21.x），但用的 Vite 较老（比如 4.x），可以切回 Node.js 20 LTS：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 用 nvm 切版本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nvm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> use</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 20</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="方法-3-升级-vite" tabindex="-1"><a class="header-anchor" href="#方法-3-升级-vite"><span>方法 3：升级 Vite</span></a></h4><p>如果你不能改 Node 版本，可以升级 Vite 到最新版本（目前 Vite 5.x 已修复对 crypto API 的调用）：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vite@latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h4 id="方法-4-本地临时修复-不推荐长期用" tabindex="-1"><a class="header-anchor" href="#方法-4-本地临时修复-不推荐长期用"><span>方法 4：本地临时修复（不推荐长期用）</span></a></h4><p>找到报错的文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>node_modules/vite/dist/node/chunks/dep-eRCq8YxU.js</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>把 <code>crypto.hash(...)</code> 改成：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">crypto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createHash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;sha256&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">...</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">digest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;hex&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但这属于“硬改依赖”，下次 <code>npm install</code> 就会丢失。</p><hr><p>我建议你先运行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>告诉我你现在的 Node 版本，我可以帮你判断是<strong>升级 Node</strong>还是<strong>升级 Vite</strong>比较合适。</p><p>我猜你可能是 Node 21+ + 旧 Vite 的组合，这种情况我可以给你一个最快 2 分钟修好的方案。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>`,157)]))}const r=i(t,[["render",l]]),o=JSON.parse('{"path":"/posts/FLOW/2025-08-09-flow-control-02-vue3-create-rule-engine.html","title":"流程控制-02-vue3项目创建 条件匹配引擎 match-condition","lang":"zh-CN","frontmatter":{"title":"流程控制-02-vue3项目创建 条件匹配引擎 match-condition","date":"2025-08-09T00:00:00.000Z","categories":["FLOW"],"tags":["flow","vue3","sh"],"published":true,"description":"项目创建 报错 版本 解决方式 降级到 Node 20.10 能跑的 Vite 版本 然后清理依赖缓存并重装： 效果 http://localhost:5173/ 可以查看效果 需求 角色：你是一名经验丰富的前端研发。精通 vue3+elementui，页面交互设计，页面样式设计。 任务： vue3 最简单的项目架子已经通过 npm create vi...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/FLOW/2025-08-09-flow-control-02-vue3-create-rule-engine.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"流程控制-02-vue3项目创建 条件匹配引擎 match-condition"}],["meta",{"property":"og:description","content":"项目创建 报错 版本 解决方式 降级到 Node 20.10 能跑的 Vite 版本 然后清理依赖缓存并重装： 效果 http://localhost:5173/ 可以查看效果 需求 角色：你是一名经验丰富的前端研发。精通 vue3+elementui，页面交互设计，页面样式设计。 任务： vue3 最简单的项目架子已经通过 npm create vi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"flow"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2025-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"流程控制-02-vue3项目创建 条件匹配引擎 match-condition\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":9.74,"words":2921},"filePathRelative":"posts/FLOW/2025-08-09-flow-control-02-vue3-create-rule-engine.md","localizedDate":"2025年8月9日","excerpt":"\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>npm create vite@latest match-condition-demo -- --template vue</span></span>\\n<span class=\\"line\\"><span>cd match-condition-demo</span></span>\\n<span class=\\"line\\"><span>  npm install</span></span>\\n<span class=\\"line\\"><span>  npm run dev</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,o as data};
