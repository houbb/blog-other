import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-CEDSurVN.js";const t={};function l(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="开篇词" tabindex="-1"><a class="header-anchor" href="#开篇词"><span>开篇词</span></a></h1><h2 id="学习目的" tabindex="-1"><a class="header-anchor" href="#学习目的"><span>学习目的</span></a></h2><p>知道 Kotlin 已经有很长时间了，一直没有深入学习过。</p><p>本次趁着有时间，就学习一下。</p><h2 id="本系列学习笔记" tabindex="-1"><a class="header-anchor" href="#本系列学习笔记"><span>本系列学习笔记</span></a></h2><p>主要做记录的作用，便于以后重温查阅。</p><p>本教程主要整理自网络，以及自己的学习源码+心得。</p><h1 id="kotlin" tabindex="-1"><a class="header-anchor" href="#kotlin"><span>Kotlin</span></a></h1><p>Kotlin 是一种在 Java 虚拟机上运行的静态类型编程语言，被称之为 Android 世界的Swift，由 JetBrains 设计开发并开源。</p><p>Kotlin 可以编译成Java字节码，也可以编译成 JavaScript，方便在没有 JVM 的设备上运行。</p><p>在Google I/O 2017中，Google 宣布 Kotlin 成为 Android 官方开发语言。</p><h2 id="为什么选择-kotlin" tabindex="-1"><a class="header-anchor" href="#为什么选择-kotlin"><span>为什么选择 Kotlin？</span></a></h2><p>简洁: 大大减少样板代码的数量。</p><p>安全: 避免空指针异常等整个类的错误。</p><p>互操作性: 充分利用 JVM、Android 和浏览器的现有库。</p><p>工具友好: 可用任何 Java IDE 或者使用命令行构建。</p><h3 id="复用已有库" tabindex="-1"><a class="header-anchor" href="#复用已有库"><span>复用已有库</span></a></h3><p>这个是非常重要的一个特性，新创建一个语言，最好可以复用已有的代码库。</p><h1 id="hello-kotlin" tabindex="-1"><a class="header-anchor" href="#hello-kotlin"><span>Hello Kotlin</span></a></h1><p>此处直接使用 Idea 编辑 Kotlin 开发。</p><h2 id="入门代码" tabindex="-1"><a class="header-anchor" href="#入门代码"><span>入门代码</span></a></h2><div class="language-kotlin line-numbers-mode" data-highlighter="shiki" data-ext="kotlin" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> com.github.houbb.kotlin.note.overview</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fun</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(args: </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello kotlin&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对比的-java" tabindex="-1"><a class="header-anchor" href="#对比的-java"><span>对比的 java</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> com.github.houbb.kotlin.note.overview</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> binbin.hou</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@since</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 1.0.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Hello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;hello java&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h1><p>使用 kotlin 编译：</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kotlinc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.kt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -include-runtime</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>-d: 用来设置编译输出的名称，可以是 class 或 .jar 文件，也可以是目录。</p><p>-include-runtime: 让 .jar 文件包含 Kotlin 运行库，从而可以直接运行。</p><p>如果你想看所有的可用选项，运行:</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> kotlinc</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行应用</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.jar</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hello,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> World!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编译成库" tabindex="-1"><a class="header-anchor" href="#编译成库"><span>编译成库</span></a></h2><p>若需要将生成的 jar 包供其他 Kotlin 程序使用，可无需包含 Kotlin 的运行库：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kotlinc hello.kt -d hello.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于这样生成的 .jar 文件不包含 Kotlin 运行库，所以你应该确保当它被使用时，运行时在你的 classpath 上。</p><p>你也可以使用 kotlin 命令来运行 Kotlin 编译器生成的 .jar 文件</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ kotlin -classpath hello.jar HelloKt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>HelloKt 为编译器为 hello.kt 文件生成的默认类名。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><h2 id="官方" tabindex="-1"><a class="header-anchor" href="#官方"><span>官方</span></a></h2><p><a href="http://www.kotlinlang.org/" target="_blank" rel="noopener noreferrer">官网</a></p><h2 id="参考入门教程" tabindex="-1"><a class="header-anchor" href="#参考入门教程"><span>参考入门教程</span></a></h2><p><a href="https://www.runoob.com/kotlin/kotlin-tutorial.html" target="_blank" rel="noopener noreferrer">Kotlin 教程</a></p><p><a href="https://www.runoob.com/kotlin/kotlin-command-line.html" target="_blank" rel="noopener noreferrer">Kotlin 使用命令行编译</a></p>`,46)]))}const k=s(t,[["render",l]]),d=JSON.parse('{"path":"/posts/Kotlin/2020-05-02-kotlin-01-overview.html","title":"Kotlin-01-Kotlin 入门学习","lang":"zh-CN","frontmatter":{"title":"Kotlin-01-Kotlin 入门学习","date":"2020-05-02T00:00:00.000Z","categories":["Kotlin"],"tags":["kotlin","sh"],"published":true,"description":"开篇词 学习目的 知道 Kotlin 已经有很长时间了，一直没有深入学习过。 本次趁着有时间，就学习一下。 本系列学习笔记 主要做记录的作用，便于以后重温查阅。 本教程主要整理自网络，以及自己的学习源码+心得。 Kotlin Kotlin 是一种在 Java 虚拟机上运行的静态类型编程语言，被称之为 Android 世界的Swift，由 JetBrai...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Kotlin/2020-05-02-kotlin-01-overview.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Kotlin-01-Kotlin 入门学习"}],["meta",{"property":"og:description","content":"开篇词 学习目的 知道 Kotlin 已经有很长时间了，一直没有深入学习过。 本次趁着有时间，就学习一下。 本系列学习笔记 主要做记录的作用，便于以后重温查阅。 本教程主要整理自网络，以及自己的学习源码+心得。 Kotlin Kotlin 是一种在 Java 虚拟机上运行的静态类型编程语言，被称之为 Android 世界的Swift，由 JetBrai..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"kotlin"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2020-05-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kotlin-01-Kotlin 入门学习\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.96,"words":587},"filePathRelative":"posts/Kotlin/2020-05-02-kotlin-01-overview.md","localizedDate":"2020年5月2日","excerpt":"\\n<h2>学习目的</h2>\\n<p>知道 Kotlin 已经有很长时间了，一直没有深入学习过。</p>\\n<p>本次趁着有时间，就学习一下。</p>\\n<h2>本系列学习笔记</h2>\\n<p>主要做记录的作用，便于以后重温查阅。</p>\\n<p>本教程主要整理自网络，以及自己的学习源码+心得。</p>\\n<h1>Kotlin</h1>\\n<p>Kotlin 是一种在 Java 虚拟机上运行的静态类型编程语言，被称之为 Android 世界的Swift，由 JetBrains 设计开发并开源。</p>\\n<p>Kotlin 可以编译成Java字节码，也可以编译成 JavaScript，方便在没有 JVM 的设备上运行。</p>","autoDesc":true}');export{k as comp,d as data};
