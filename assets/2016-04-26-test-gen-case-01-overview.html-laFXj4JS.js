import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as t}from"./app-CEDSurVN.js";const l={};function e(h,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><blockquote><p><a href="https://houbb.github.io/2018/06/24/junit5-01-hello" target="_blank" rel="noopener noreferrer">junit5 系列</a></p></blockquote><blockquote><p><a href="https://houbb.github.io/2021/07/23/junit-performance-junit5" target="_blank" rel="noopener noreferrer">基于 junit5 实现 junitperf 源码分析</a></p></blockquote><p><a href="https://github.com/houbb/data-factory" target="_blank" rel="noopener noreferrer">Auto generate mock data for java test.(便于 Java 测试自动生成对象信息)</a></p><p><a href="https://github.com/houbb/junitperf" target="_blank" rel="noopener noreferrer">Junit performance rely on junit5 and jdk8+.(java 性能测试框架。性能测试。压测。测试报告生成。)</a></p><h1 id="产品小工具" tabindex="-1"><a class="header-anchor" href="#产品小工具"><span>产品小工具</span></a></h1><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明"><span>说明</span></a></h2><p>直接可以用户使用的工具，不涉及枯燥的技术细节。</p><h2 id="gen-jmockit-idea-plugin" tabindex="-1"><a class="header-anchor" href="#gen-jmockit-idea-plugin"><span>gen-jmockit-idea-plugin</span></a></h2><p><a href="https://github.com/houbb/gen-jmockit-idea-plugin" target="_blank" rel="noopener noreferrer">gen-jmockit-idea-plugin</a> 自动生成 jmockit junit 的单元测试用例。</p><h2 id="gen-test-plugin" tabindex="-1"><a class="header-anchor" href="#gen-test-plugin"><span>gen-test-plugin</span></a></h2><p><a href="https://github.com/houbb/gen-test-plugin" target="_blank" rel="noopener noreferrer">gen-test-plugin</a> 自动生成 junit 测试案例的 maven 插件</p><h1 id="junitgenerator" tabindex="-1"><a class="header-anchor" href="#junitgenerator"><span>JUnitGenerator</span></a></h1><p>这个<a href="http://plugins.jetbrains.com/plugin/3064" target="_blank" rel="noopener noreferrer">插件</a>允许在右键单击“Generate...”菜单时，针对一个Java类生成JUnit测试。</p><p>可以使用提供的Velocity模板自定义单元测试的输出代码，以根据源类格式化代码。</p><p>如果在已经存在的地方创建单元测试，用户将被提示选择覆盖或合并操作。</p><p>合并操作允许用户有选择地创建目标文件内容。</p><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/junit/2016-08-30-junit.png" alt="JUnitGenerator" tabindex="0" loading="lazy"><figcaption>JUnitGenerator</figcaption></figure><ul><li>set the output path</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>\${SOURCEPATH}/../../test/java/\${PACKAGE}/\${FILENAME}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>set the junit4 template</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">########################################################################################</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Available</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> variables</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">methodList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> of method composites</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">privateMethodList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> of </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> method composites</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">fieldList</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> - ArrayList of </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> scope</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> field names</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $entryList.className - </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $entryList.packageName - package name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $today - Todays date in MM/dd/yyyy format</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##            MethodComposite variables:</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.name - Method Name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.signature - Full method signature in String form</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods)</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.paramNames - List of Strings representing the method&#39;s parameters&#39; names</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.paramClasses - List of Strings representing the method&#39;s parameters&#39; classes</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## You can configure the output </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> name</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> using &quot;testClass&quot; variable below.</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## Here are some examples:</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## Test$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ClassName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> will produce </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TestSomeClass</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">className</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}Test </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> will produce </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SomeClassTest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">########################################################################################</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">macro</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (cap $strIn)</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toUpperCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">substring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Iterate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> through the list and generate testcase </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> every entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> ($entry in $entryList)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">( $testClass</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${entry.className}Test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> $entry.package</span><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF;">N</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">ame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.Before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.After</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* \${entry.className} Tester.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> houbinbin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@since</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> $today</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> $testClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Before</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">After</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">methodList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * Method: $method.signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> void $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">privateMethodList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * Method: $method.signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> void $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($string in </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">reflectionCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $string</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    #end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>test template with Mockito</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">########################################################################################</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Available</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> variables</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">methodList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> of method composites</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">privateMethodList</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> of </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> method composites</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##         </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$entryList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">fieldList</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> - ArrayList of </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> scope</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> field names</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $entryList.className - </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $entryList.packageName - package name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##         $today - Todays date in MM/dd/yyyy format</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##            MethodComposite variables:</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.name - Method Name</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.signature - Full method signature in String form</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.reflectionCode - list of strings representing commented out reflection code to access method (Private Methods)</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.paramNames - List of Strings representing the method&#39;s parameters&#39; names</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##                $method.paramClasses - List of Strings representing the method&#39;s parameters&#39; classes</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## You can configure the output </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> name</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;"> using &quot;testClass&quot; variable below.</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## Here are some examples:</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E06C75;">## Test$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ClassName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> will produce </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">TestSomeClass</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## \${</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">className</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}Test </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> will produce </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SomeClassTest</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">########################################################################################</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">macro</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (cap $strIn)</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toUpperCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">substring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">macro</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (uncap $strIn)</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">charAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">toLowerCase</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$strIn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">substring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">## </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Iterate</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> through the list and generate testcase </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> every entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> ($entry in $entryList)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">( $testClass</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${entry.className}Test&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">##</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> $entry.package</span><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF;">N</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">ame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.Before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.mockito.InjectMocks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.mockito.MockitoAnnotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* \${entry.className} Tester.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@author</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> houbinbin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@since</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> $today</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">* </span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@version</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> $testClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">InjectMocks</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">className</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">uncap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">className</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Before</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">     MockitoAnnotations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">initMocks</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">methodList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * Method: $method.signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> void $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">privateMethodList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    * Method: $method.signature</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    *</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    @Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> void $</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> throws</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Exception</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    #</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">($string in </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">$method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">reflectionCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    $string</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    #end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">#end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="java-想自动生成测试用例-用哪些开源工具" tabindex="-1"><a class="header-anchor" href="#java-想自动生成测试用例-用哪些开源工具"><span>java 想自动生成测试用例，用哪些开源工具？</span></a></h2><p>在Java中，有许多开源工具可用于自动生成测试用例。以下是一些常用的工具：</p><ol><li><p><strong>JUnit</strong>:</p><ul><li>JUnit是Java中最常见的测试框架之一，用于编写和运行单元测试。虽然它本身不是专门用于生成测试用例的工具，但可以与其他工具结合使用，例如参数化测试，以自动生成更多测试用例。</li></ul></li><li><p><strong>TestNG</strong>:</p><ul><li>TestNG是另一个流行的测试框架，支持更多的灵活性和功能，包括参数化测试和数据提供者，可以用于生成多个测试用例。</li></ul></li><li><p><strong>Pitest</strong>:</p><ul><li>Pitest是一个开源的Mutation Testing工具，它可以通过对源代码进行变异来评估测试用例的质量。它不仅可以帮助您发现代码中的漏洞，还可以生成测试用例来覆盖这些变异。</li></ul></li><li><p><strong>EvoSuite</strong>:</p><ul><li>EvoSuite是专门用于生成单元测试用例的工具。它使用遗传算法和符号执行等技术，自动创建具有高覆盖率的测试用例。</li></ul></li><li><p><strong>QuickCheck</strong> (例如，Java的QuickTheories或其他实现)：</p><ul><li>QuickCheck是一种基于属性的测试框架，它可以生成大量的随机输入以测试代码的属性。QuickTheories是Java中的一个QuickCheck实现，可用于生成各种测试用例。</li></ul></li><li><p><strong>Mockito</strong>:</p><ul><li>Mockito是一个用于编写单元测试中模拟对象的框架。虽然它主要用于模拟，但也可以用于生成一些测试用例。</li></ul></li></ol><p>请注意，以上列举的工具可能需要根据您的具体需求进行适当的组合和调整。选择适合您项目需求的工具，并根据实际情况进行合理的配置和集成。</p><h2 id="evosuite" tabindex="-1"><a class="header-anchor" href="#evosuite"><span>EvoSuite</span></a></h2><p>理解了您的需求，如果您想要编写一个方法来自动生成测试用例，可以考虑使用一些测试自动生成工具，其中一个流行的工具是 EvoSuite。</p><p>EvoSuite 是一个基于遗传算法的测试用例生成器，它可以自动创建具有高覆盖率的测试用例。</p><p>以下是一个简单的示例，演示如何使用 EvoSuite 自动生成测试用例。</p><p>首先，确保 EvoSuite 已经添加到您的项目的依赖中。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> your.</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">.UserProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> your.</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">.UserService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.evosuite.runtime.EvoRunner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.evosuite.runtime.EvoRunnerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.runner.RunWith</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">RunWith</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">EvoRunner</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">EvoRunnerParameters</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">useVFS</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> separateClassLoader</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> EvoSuiteGeneratedTest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        UserService</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userService</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> UserService</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// You may need to provide a real implementation or a mock</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        UserProcessor</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> UserProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(userService);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // EvoSuite will automatically generate test cases</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        userProcessor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">processUser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，我们使用了 EvoSuite 的注解 <code>@RunWith</code> 和 <code>@EvoRunnerParameters</code> 来配置 EvoSuite 的运行参数。</p><p>在测试方法中，我们创建了 <code>UserService</code> 和 <code>UserProcessor</code> 的实例，并调用了 <code>processUser</code> 方法。EvoSuite将自动尝试生成测试用例，以确保代码路径的覆盖率。</p><p>请注意，EvoSuite 需要与您的项目一起使用，因此您可能需要根据项目的实际情况配置 EvoSuite 的依赖和运行参数。</p><p>此外，由于 EvoSuite 的生成是基于遗传算法的，生成的测试用例可能不总是最优或最简洁的，因此需要人工审查和调整。</p><p>确保查阅 EvoSuite 的文档以获取更多详细信息和配置选项：<a href="https://www.evosuite.org/documentation/" target="_blank" rel="noopener noreferrer">EvoSuite Documentation</a>。</p><h2 id="类似的开源工具" tabindex="-1"><a class="header-anchor" href="#类似的开源工具"><span>类似的开源工具</span></a></h2><p>除了 EvoSuite，还有一些其他类似的开源工具，可以帮助自动生成测试用例。以下是其中一些：</p><ol><li><p><strong>Randoop</strong>:</p><ul><li>Randoop是一个生成随机测试用例的工具，可以用于 Java。它会在代码中执行随机操作，生成大量的测试用例，以尽可能覆盖代码路径。</li></ul></li><li><p><strong>JCrasher</strong>:</p><ul><li>JCrasher是一个用于生成随机测试用例的工具，它会在程序中找到方法调用并尝试生成有效的测试输入。</li></ul></li><li><p><strong>Tcases</strong>:</p><ul><li>Tcases 是一个用于生成测试用例的工具，它基于测试用例规范来生成输入。它可以用于 Java 以及其他一些编程语言。</li></ul></li></ol><p>请注意，这些工具的适用性和效果可能因项目和代码的特定性而异。在选择工具时，建议根据项目需求和测试目标进行评估，并可能需要尝试多个工具以找到最适合您项目的工具。</p><h2 id="对比一下上面的工具-包含-evosuite。给出详细的对比表格" tabindex="-1"><a class="header-anchor" href="#对比一下上面的工具-包含-evosuite。给出详细的对比表格"><span>对比一下上面的工具，包含 EvoSuite。给出详细的对比表格</span></a></h2><p>以下是 EvoSuite、Randoop、SymPy、Pex、JCrasher 和 Tcases 这几个工具的一些主要对比方面。</p><p>请注意，每个工具都有其独特的优势和限制，选择工具时需要根据具体项目需求和上下文进行评估。</p><table><thead><tr><th><strong>特性 / 工具</strong></th><th><strong>EvoSuite</strong></th><th><strong>Randoop</strong></th><th><strong>SymPy</strong></th><th><strong>Pex</strong></th><th><strong>JCrasher</strong></th><th><strong>Tcases</strong></th></tr></thead><tbody><tr><td><strong>类型</strong></td><td>遗传算法生成测试用例</td><td>随机测试用例生成</td><td>符号执行生成测试输入</td><td>符号执行生成测试输入</td><td>随机测试用例生成</td><td>基于规范生成测试用例</td></tr><tr><td><strong>语言支持</strong></td><td>Java</td><td>Java</td><td>Java</td><td>.NET</td><td>Java</td><td>多种编程语言，包括 Java</td></tr><tr><td><strong>生成方式</strong></td><td>遗传算法，优化代码覆盖率</td><td>随机操作，最大化代码覆盖</td><td>符号执行，生成路径输入</td><td>动态符号执行，生成输入</td><td>随机测试输入，最大化代码覆盖</td><td>基于规范生成输入</td></tr><tr><td><strong>自动化程度</strong></td><td>高度自动化，遗传算法进行优化</td><td>高度自动化，随机操作</td><td>高度自动化，符号执行</td><td>高度自动化，动态符号执行</td><td>高度自动化，随机操作</td><td>部分自动化，需要定义规范</td></tr><tr><td><strong>代码覆盖率</strong></td><td>高（遗传算法优化）</td><td>中等（随机操作）</td><td>高（符号执行）</td><td>高（动态符号执行）</td><td>中等（随机操作）</td><td>中等（基于规范）</td></tr><tr><td><strong>维护</strong></td><td>活跃开发，社区支持</td><td>不活跃，有限社区支持</td><td>活跃开发，有限社区支持</td><td>不活跃，Microsoft 维护</td><td>不活跃，有限社区支持</td><td>不活跃，有限社区支持</td></tr><tr><td><strong>适用场景</strong></td><td>复杂项目，追求高代码覆盖率</td><td>快速测试，简单项目</td><td>复杂项目，路径条件测试</td><td>.NET 项目，动态测试</td><td>快速测试，简单项目</td><td>基于规范的测试用例生成</td></tr><tr><td><strong>文档和支持</strong></td><td>良好的文档和社区支持</td><td>有限文档，社区支持</td><td>有限文档，有限社区支持</td><td>有文档，Microsoft 支持</td><td>有限文档，有限社区支持</td><td>有文档，有限社区支持</td></tr></tbody></table><p>这个对比表格提供了一些主要方面的比较，但在实际选择时，您可能还需要考虑其他因素，例如工具的易用性、集成性、性能等。</p><p>建议在选择之前详细查阅每个工具的文档和相关资料，以便更好地了解其特性和局限性。</p><h2 id="如果通过模板结合解析java-源码-是不是也能生成最基本的测试用例" tabindex="-1"><a class="header-anchor" href="#如果通过模板结合解析java-源码-是不是也能生成最基本的测试用例"><span>如果通过模板结合解析java 源码，是不是也能生成最基本的测试用例？</span></a></h2><p>是的，通过使用模板和解析Java源码的方式，您可以生成最基本的测试用例。</p><p>这通常涉及使用模板引擎（如FreeMarker、Velocity等）来创建测试用例的基本结构，然后通过解析Java源码，填充模板中的占位符和变量。</p><p>以下是一个简化的示例，说明这个过程：</p><ol><li><strong>创建测试用例模板</strong>：<br> 创建一个包含测试方法结构的模板，其中可能包括输入参数、预期输出等信息。使用模板引擎语法标记占位符。</li></ol><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MyTestClass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testMethodName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // Placeholder for input parameters</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // Invoke the method to be tested</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // Assert the expected output</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p><strong>解析Java源码</strong>：<br> 使用Java编译器API（如Java Compiler Tree API或其他解析工具）来分析源代码。您可以使用工具来遍历类、方法、字段等，并提取必要的信息，例如方法的参数、返回类型等。</p></li><li><p><strong>使用模板引擎填充模板</strong>：<br> 将解析得到的信息填充到测试用例模板中的相应位置。替换模板中的占位符，使其反映源码的结构和信息。</p></li><li><p><strong>保存生成的测试用例</strong>：<br> 将填充后的测试用例保存为Java源文件，以便后续编译和执行。</p></li></ol><p>请注意，这样的自动生成测试用例的方法通常适用于生成基本的单元测试，涉及到方法调用和输出断言。对于更复杂的测试场景，可能需要更智能的生成策略，考虑到不同情况下的输入组合、异常处理等方面。</p><p>此外，要确保生成的测试用例是有效的，可能需要对生成的代码进行一些静态分析和质量控制，以确保生成的测试用例能够正确覆盖源代码的各个路径。</p><h1 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h1><p>不要把实现细节暴露给客户。</p><p>可以改成一开始自己设计的 gen-test 测试用例 maven 生成插件，以及对应的 idea 插件。</p>`,62)]))}const r=i(l,[["render",e]]),d=JSON.parse('{"path":"/posts/tests/2016-04-26-test-gen-case-01-overview.html","title":"test-01-test case generate 单元测试用例代码生成","lang":"zh-CN","frontmatter":{"title":"test-01-test case generate 单元测试用例代码生成","date":"2016-04-26T00:00:00.000Z","categories":["Test"],"tags":["junit","test","generate"],"published":true,"description":"拓展阅读 junit5 系列 基于 junit5 实现 junitperf 源码分析 Auto generate mock data for java test.(便于 Java 测试自动生成对象信息) Junit performance rely on junit5 and jdk8+.(java 性能测试框架。性能测试。压测。测试报告生成。) 产品...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/tests/2016-04-26-test-gen-case-01-overview.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"test-01-test case generate 单元测试用例代码生成"}],["meta",{"property":"og:description","content":"拓展阅读 junit5 系列 基于 junit5 实现 junitperf 源码分析 Auto generate mock data for java test.(便于 Java 测试自动生成对象信息) Junit performance rely on junit5 and jdk8+.(java 性能测试框架。性能测试。压测。测试报告生成。) 产品..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/houbb/resource/master/img/junit/2016-08-30-junit.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"junit"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"generate"}],["meta",{"property":"article:published_time","content":"2016-04-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"test-01-test case generate 单元测试用例代码生成\\",\\"image\\":[\\"https://raw.githubusercontent.com/houbb/resource/master/img/junit/2016-08-30-junit.png\\"],\\"datePublished\\":\\"2016-04-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":9.99,"words":2998},"filePathRelative":"posts/tests/2016-04-26-test-gen-case-01-overview.md","localizedDate":"2016年4月26日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://houbb.github.io/2018/06/24/junit5-01-hello\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">junit5 系列</a></p>\\n</blockquote>\\n<blockquote>\\n<p><a href=\\"https://houbb.github.io/2021/07/23/junit-performance-junit5\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">基于 junit5 实现 junitperf 源码分析</a></p>\\n</blockquote>","autoDesc":true}');export{r as comp,d as data};
