import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as s,o as a}from"./app-CEDSurVN.js";const n={};function l(p,i){return a(),e("div",null,i[0]||(i[0]=[s(`<h1 id="标签和过滤" tabindex="-1"><a class="header-anchor" href="#标签和过滤"><span>标签和过滤</span></a></h1><p>可以通过 <code>@Tag</code> 注释对测试类和方法进行标记。这些标记稍后可用于筛选测试发现和执行。</p><h2 id="语法规则" tabindex="-1"><a class="header-anchor" href="#语法规则"><span>语法规则</span></a></h2><ul><li><p>标签不能为空或 <code>null</code>。</p></li><li><p>trim() 的标记不能包含空格。</p></li><li><p>trim() 的标签不能包含ISO控制字符。</p></li><li><p>trim()的标记不能包含以下任何保留字符:</p></li></ul><ol><li><p><code>,</code>: 逗号</p></li><li><p><code>(</code>: 左括号</p></li><li><p><code>)</code>: 右括号</p></li><li><p><code>&amp;</code>: 与</p></li><li><p><code>|</code>: 竖线</p></li><li><p><code>!</code>: 非</p></li></ol><h2 id="实例" tabindex="-1"><a class="header-anchor" href="#实例"><span>实例</span></a></h2><ul><li>TagDemo.java</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> org.junit.jupiter.api.Test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Tag</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;fast&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Tag</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;model&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TagDemo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Test</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Tag</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;taxes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> testingTaxCalculation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="tag-表达式" tabindex="-1"><a class="header-anchor" href="#tag-表达式"><span>Tag 表达式</span></a></h1><p>标签表达式是具有运算符<code>!</code> <code>&amp;</code>和<code>|</code>的布尔表达式。此外，<code>(</code> 和 <code>)</code> 可以用于调整操作符的优先级。</p><h2 id="操作符号-按优先级的降序排列" tabindex="-1"><a class="header-anchor" href="#操作符号-按优先级的降序排列"><span>操作符号(按优先级的降序排列)</span></a></h2><table><thead><tr><th style="text-align:left;">操作符</th><th style="text-align:left;">意思</th><th style="text-align:left;">结合性</th></tr></thead><tbody><tr><td style="text-align:left;">!</td><td style="text-align:left;">not</td><td style="text-align:left;">右边</td></tr><tr><td style="text-align:left;">&amp;</td><td style="text-align:left;">and</td><td style="text-align:left;">左边</td></tr><tr><td style="text-align:left;">\`</td><td style="text-align:left;">\`</td><td style="text-align:left;">or</td></tr></tbody></table><p>如果您正在跨多个维度标记您的测试，标记表达式将帮助您选择要执行哪些测试。<br> 根据测试类型(例如，micro, integration，端到端)和特性(例如foo, bar, baz)标记以下标记表达式是有用的。</p><ul><li>示例</li></ul><p>| TAG 表达式 | 选中 |<br> | <code>foo</code> | all tests for foo |<br> | <code>bar | baz</code> | all tests for bar plus all tests for baz |<br> | <code>bar &amp; baz</code> | all tests for the interaction between bar and baz |<br> | <code>foo &amp; !end-to-end</code> | all tests for foo, but not the end-to-end tests |<br> | <code>(micro | integration) &amp; (foo | baz)</code> | all micro or integration tests for foo or baz |</p>`,15)]))}const o=t(n,[["render",l]]),h=JSON.parse('{"path":"/posts/test/2018-06-25-junit5-09-tagging-filtering.html","title":"Junit5-08-Tagging and Filtering","lang":"zh-CN","frontmatter":{"title":"Junit5-08-Tagging and Filtering","date":"2018-06-25T00:00:00.000Z","categories":["Test"],"tags":["test","sh"],"published":true,"description":"标签和过滤 可以通过 @Tag 注释对测试类和方法进行标记。这些标记稍后可用于筛选测试发现和执行。 语法规则 标签不能为空或 null。 trim() 的标记不能包含空格。 trim() 的标签不能包含ISO控制字符。 trim()的标记不能包含以下任何保留字符: ,: 逗号 (: 左括号 ): 右括号 &: 与 |: 竖线 !: 非 实例 TagDe...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/test/2018-06-25-junit5-09-tagging-filtering.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Junit5-08-Tagging and Filtering"}],["meta",{"property":"og:description","content":"标签和过滤 可以通过 @Tag 注释对测试类和方法进行标记。这些标记稍后可用于筛选测试发现和执行。 语法规则 标签不能为空或 null。 trim() 的标记不能包含空格。 trim() 的标签不能包含ISO控制字符。 trim()的标记不能包含以下任何保留字符: ,: 逗号 (: 左括号 ): 右括号 &: 与 |: 竖线 !: 非 实例 TagDe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-06-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Junit5-08-Tagging and Filtering\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"posts/test/2018-06-25-junit5-09-tagging-filtering.md","localizedDate":"2018年6月25日","excerpt":"\\n<p>可以通过 <code>@Tag</code> 注释对测试类和方法进行标记。这些标记稍后可用于筛选测试发现和执行。</p>\\n<h2>语法规则</h2>\\n<ul>\\n<li>\\n<p>标签不能为空或 <code>null</code>。</p>\\n</li>\\n<li>\\n<p>trim() 的标记不能包含空格。</p>\\n</li>\\n<li>\\n<p>trim() 的标签不能包含ISO控制字符。</p>\\n</li>\\n<li>\\n<p>trim()的标记不能包含以下任何保留字符:</p>\\n</li>\\n</ul>\\n<ol>\\n<li>\\n<p><code>,</code>: 逗号</p>\\n</li>\\n<li>\\n<p><code>(</code>: 左括号</p>\\n</li>\\n<li>\\n<p><code>)</code>: 右括号</p>\\n</li>\\n<li>\\n<p><code>&amp;</code>: 与</p>\\n</li>\\n<li>\\n<p><code>|</code>: 竖线</p>\\n</li>\\n<li>\\n<p><code>!</code>: 非</p>\\n</li>\\n</ol>","autoDesc":true}');export{o as comp,h as data};
