import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-uJE4P3e0.js";const l={};function h(t,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h1><h3 id="批处理文件中的变量类型" tabindex="-1"><a class="header-anchor" href="#批处理文件中的变量类型"><span>批处理文件中的变量类型</span></a></h3><p>批处理文件中有两种类型的变量。</p><p>一种是为了在调用批处理文件时可以传递的参数，另一种是通过 <code>set</code> 命令进行设置。</p><h4 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数"><span>命令行参数</span></a></h4><p>批处理脚本支持命令行参数的概念，可以在调用批处理文件时向其传递参数。这些参数可以通过变量 %1, %2, %3 等在批处理文件中被调用。</p><p>以下示例展示了一个接受3个命令行参数的批处理文件，并将它们回显到命令行屏幕。</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> %1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> %2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> %3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果上述批处理脚本存储在名为 test.bat 的文件中，我们运行该批处理如下：</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Test.bat </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行批处理文件时，命令提示符中的输出将如下所示。</p><h4 id="命令行参数-1" tabindex="-1"><a class="header-anchor" href="#命令行参数-1"><span>命令行参数</span></a></h4><p>上述命令产生的输出如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1 </span></span>
<span class="line"><span>2 </span></span>
<span class="line"><span>3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们运行该批处理如下：</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Example </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出将与上述相同。然而，第四个参数将被忽略。</p><h4 id="set-命令" tabindex="-1"><a class="header-anchor" href="#set-命令"><span>Set 命令</span></a></h4><p>变量还可以通过 <code>set</code> 命令进行初始化。以下是 set 命令的语法。</p><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h4><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">variable-name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">value</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中，</p><ul><li>variable-name 是你想要设置的变量的名称。</li><li>value 是需要设置的值。</li><li>/A – 如果值需要是数字类型，则使用这个开关。</li></ul><p>以下示例展示了 set 命令的简单用法。</p><h4 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h4><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Hello World </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %message%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码片段中，定义了一个名为 message 的变量，并将其设置为 &quot;Hello World&quot;。</p><p>要显示变量的值，请注意变量需要用 % 符号包围。</p><h4 id="输出" tabindex="-1"><a class="header-anchor" href="#输出"><span>输出</span></a></h4><p>上述命令产生的输出如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Hello World</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="处理数值" tabindex="-1"><a class="header-anchor" href="#处理数值"><span>处理数值</span></a></h4><p>在批处理脚本中，也可以定义一个变量来保存数值。这可以通过使用 /A 开关来完成。</p><p>以下代码展示了如何使用 /A 开关设置数值的简单方法。</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %a% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %b% </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %c%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们首先将两个变量 a 和 b 的值分别设置为 5 和 10。</p><p>我们将这些值相加并存储在变量 c 中。</p><p>最后，我们显示变量 c 的值。</p><p>上述程序的输出将是 15。</p><p>批处理文件中所有算术运算符都是有效的。以下示例展示了算术运算符在批处理文件中的使用。</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %a% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %b% </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %c%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %a% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %b% </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %c%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %b% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %a% </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %c%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SET</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %b% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %a% </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %c%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述命令产生的输出如下。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>15 </span></span>
<span class="line"><span>-5 </span></span>
<span class="line"><span>2 </span></span>
<span class="line"><span>50</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="局部变量与全局变量" tabindex="-1"><a class="header-anchor" href="#局部变量与全局变量"><span>局部变量与全局变量</span></a></h4><p>在任何编程语言中，都有一种将变量标记为具有某种作用域的选项，即它们可以访问的代码部分。通常，具有全局作用域的变量可以从程序的任何地方访问，而局部作用域变量在它们可以访问的范围内有明确的定义。</p><p>DOS脚本也有局部和全局作用域变量的定义。默认情况下，变量对整个命令提示符会话是全局的。调用 SETLOCAL 命令可以使变量局部于脚本的作用域。调用 SETLOCAL 后，任何变量赋值在调用 ENDLOCAL、EXIT 或脚本执行到达文件末尾 (EOF) 时都会恢复。以下示例展示了在脚本中设置局部变量和全局变量时的区别。</p><h4 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h4><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> globalvar </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SETLOCAL</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 13145</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /A var </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> %var% </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %var%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %globalvar%</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ENDLOCAL</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于上述程序的几个关键点。</p><ul><li>‘globalvar’ 被定义为全局作用域，并在整个脚本中可用。</li><li>‘var’ 变量被定义在局部作用域内，因为它被包含在 ‘SETLOCAL’ 和 ‘ENDLOCAL’ 块之间。因此，一旦执行了 ‘ENDLOCAL’ 语句，此变量将被销毁。</li></ul><h4 id="输出-1" tabindex="-1"><a class="header-anchor" href="#输出-1"><span>输出</span></a></h4><p>上述命令产生的输出如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>13150</span></span>
<span class="line"><span>5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>你会注意到命令 <code>echo %var%</code> 不会产生任何结果，因为在执行了 ENDLOCAL 语句之后，‘var’ 变量将不再存在。</p><h4 id="处理环境变量" tabindex="-1"><a class="header-anchor" href="#处理环境变量"><span>处理环境变量</span></a></h4><p>如果你有将在批处理文件之间使用的变量，那么最好使用环境变量。一旦定义了环境变量，就可以通过 % 符号访问它。以下示例展示了如何在系统上查看已定义的 JAVA_HOME。JAVA_HOME 变量是通常被各种应用程序广泛使用的关键组件。</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %JAVA_HOME%</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输出将显示 JAVA_HOME 目录，这将取决于不同的系统。以下是输出的一个示例。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>C:\\Atlassian\\Bitbucket\\4.0.1\\jre</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="详细介绍一下-bat-中的变量" tabindex="-1"><a class="header-anchor" href="#详细介绍一下-bat-中的变量"><span>详细介绍一下 bat 中的变量</span></a></h2><p>在批处理（Batch）文件中，变量是用来存储数据的一种方式。它们允许你存储和操作数据，使得批处理文件更加灵活和强大。以下是一些关于批处理文件中变量的基本概念和使用方法：</p><h3 id="变量的声明和使用" tabindex="-1"><a class="header-anchor" href="#变量的声明和使用"><span>变量的声明和使用</span></a></h3><ul><li><strong>声明变量</strong>：使用 <code>set</code> 命令来声明一个变量。例如，<code>set var=value</code>。</li><li><strong>使用变量</strong>：在变量名前后加上百分号（<code>%</code>）来引用变量的值。例如，<code>%var%</code>。</li></ul><h3 id="变量的范围" tabindex="-1"><a class="header-anchor" href="#变量的范围"><span>变量的范围</span></a></h3><ul><li><strong>局部变量</strong>：在脚本或批处理文件中定义的变量只在该脚本或批处理文件中有效。</li><li><strong>全局变量</strong>：使用 <code>setx</code> 命令定义的变量可以在所有新打开的命令行窗口和程序中使用。</li></ul><h3 id="特殊变量" tabindex="-1"><a class="header-anchor" href="#特殊变量"><span>特殊变量</span></a></h3><ul><li><code>%0</code> 到 <code>%9</code>：这些是特殊变量，分别代表批处理文件的参数。<code>%0</code> 是批处理文件本身的名称，<code>%1</code> 到 <code>%9</code> 是传递给批处理文件的参数。</li></ul><h3 id="延迟变量扩展" tabindex="-1"><a class="header-anchor" href="#延迟变量扩展"><span>延迟变量扩展</span></a></h3><ul><li><strong>启用</strong>：使用 <code>setlocal enabledelayedexpansion</code> 启用延迟变量扩展。</li><li><strong>使用</strong>：在启用了延迟变量扩展后，可以使用 <code>!variable!</code> 来引用变量的值，而不是 <code>%variable%</code>。</li></ul><h3 id="字符串操作" tabindex="-1"><a class="header-anchor" href="#字符串操作"><span>字符串操作</span></a></h3><ul><li><strong>连接</strong>：使用 <code>&amp;</code> 或 <code>^</code> 来连接字符串。</li><li><strong>子字符串</strong>：使用 <code>%variable:substring%</code> 来获取变量中的子字符串。</li></ul><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><ul><li>环境变量是操作系统级别的变量，可以在所有命令行程序和批处理文件中使用。</li></ul><h3 id="示例-2" tabindex="-1"><a class="header-anchor" href="#示例-2"><span>示例</span></a></h3><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> var</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Hello World</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %var%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">setlocal</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> enabledelayedexpansion</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /a </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">counter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">loop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> !counter!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /a </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">counter</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %counter%</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> leq</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> goto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> loop</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">endlocal</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %time%</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> %date%</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">setx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> myvar </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;This is a global variable&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li>在使用变量时，确保变量名不包含空格。</li><li>使用 <code>set</code> 命令可以查看当前批处理文件中定义的所有变量及其值。</li></ul><p>变量是批处理文件中非常有用的工具，可以帮助你创建更复杂和灵活的自动化脚本。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://www.tutorialspoint.com/batch_script/batch_script_variables.htm" target="_blank" rel="noopener noreferrer">https://www.tutorialspoint.com/batch_script/batch_script_variables.htm</a></p>`,81)]))}const d=i(l,[["render",h]]),r=JSON.parse('{"path":"/posts/windows/2016-11-30-windows-bat-06-var.html","title":"windows bat 脚本教程-06-Variables 变量","lang":"zh-CN","frontmatter":{"title":"windows bat 脚本教程-06-Variables 变量","date":"2016-11-30T00:00:00.000Z","categories":["Windows"],"tags":["windows","shell","bat"],"published":true,"description":"变量 批处理文件中的变量类型 批处理文件中有两种类型的变量。 一种是为了在调用批处理文件时可以传递的参数，另一种是通过 set 命令进行设置。 命令行参数 批处理脚本支持命令行参数的概念，可以在调用批处理文件时向其传递参数。这些参数可以通过变量 %1, %2, %3 等在批处理文件中被调用。 以下示例展示了一个接受3个命令行参数的批处理文件，并将它们回...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/windows/2016-11-30-windows-bat-06-var.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"windows bat 脚本教程-06-Variables 变量"}],["meta",{"property":"og:description","content":"变量 批处理文件中的变量类型 批处理文件中有两种类型的变量。 一种是为了在调用批处理文件时可以传递的参数，另一种是通过 set 命令进行设置。 命令行参数 批处理脚本支持命令行参数的概念，可以在调用批处理文件时向其传递参数。这些参数可以通过变量 %1, %2, %3 等在批处理文件中被调用。 以下示例展示了一个接受3个命令行参数的批处理文件，并将它们回..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"windows"}],["meta",{"property":"article:tag","content":"shell"}],["meta",{"property":"article:tag","content":"bat"}],["meta",{"property":"article:published_time","content":"2016-11-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"windows bat 脚本教程-06-Variables 变量\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-11-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":5.69,"words":1707},"filePathRelative":"posts/windows/2016-11-30-windows-bat-06-var.md","localizedDate":"2016年11月30日","excerpt":"\\n<h3>批处理文件中的变量类型</h3>\\n<p>批处理文件中有两种类型的变量。</p>\\n<p>一种是为了在调用批处理文件时可以传递的参数，另一种是通过 <code>set</code> 命令进行设置。</p>\\n<h4>命令行参数</h4>\\n<p>批处理脚本支持命令行参数的概念，可以在调用批处理文件时向其传递参数。这些参数可以通过变量 %1, %2, %3 等在批处理文件中被调用。</p>\\n<p>以下示例展示了一个接受3个命令行参数的批处理文件，并将它们回显到命令行屏幕。</p>\\n<div class=\\"language-bat line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bat\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">@</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">echo</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> off</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">echo</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\"> %1</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">echo</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\"> %2</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">echo</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\"> %3</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
