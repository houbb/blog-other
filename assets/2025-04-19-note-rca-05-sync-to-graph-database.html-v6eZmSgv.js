import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as p,o as n}from"./app-uJE4P3e0.js";const o={};function r(s,e){return n(),t("div",null,e[0]||(e[0]=[p('<h1 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h1><h2 id="场景" tabindex="-1"><a class="header-anchor" href="#场景"><span>场景</span></a></h2><p>我们接收到报警之后，需要把报警信息落库。</p><p>其实有两种思路。</p><p>一种是流，一种是批模式。</p><h2 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点</span></a></h2><h3 id="批" tabindex="-1"><a class="header-anchor" href="#批"><span>批</span></a></h3><p>批模式可以做一些批量的优化操作。</p><p>比如 A2 的 disk 之类的无用异常过滤。</p><p>批模式如果改为 10 秒一次呢？</p><p>有什么问题？</p><p>批模式还可以支持数据的重跑，但是流没有这个能力。</p><p>可以两种模式都保留。</p><h3 id="流" tabindex="-1"><a class="header-anchor" href="#流"><span>流</span></a></h3><p>流模式可以在数据全部落库之后，最后做一下数据的落库处理。</p><p>实时性比较高。</p><p>记录一下更新时间，如果处理过了，就不需要批量在入库了。</p><h2 id="折中" tabindex="-1"><a class="header-anchor" href="#折中"><span>折中</span></a></h2><p>可以两种模式都保留。</p><h1 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h1><p>可以考虑入库 neo4j 的时候，采用记录一下入库的模式，</p><p>同时采用 MERGE 的方式入库，支持多次数据的更新处理。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>',23)]))}const h=a(o,[["render",r]]),d=JSON.parse('{"path":"/posts/Note/2025-04-19-note-rca-05-sync-to-graph-database.html","title":"RCA 根因分析推断-05-alarm sync neo4j 报警数据同步到图数据库","lang":"zh-CN","frontmatter":{"title":"RCA 根因分析推断-05-alarm sync neo4j 报警数据同步到图数据库","date":"2025-04-19T00:00:00.000Z","categories":["Note"],"tags":["note","rca","sh"],"published":true,"description":"思路 场景 我们接收到报警之后，需要把报警信息落库。 其实有两种思路。 一种是流，一种是批模式。 优缺点 批 批模式可以做一些批量的优化操作。 比如 A2 的 disk 之类的无用异常过滤。 批模式如果改为 10 秒一次呢？ 有什么问题？ 批模式还可以支持数据的重跑，但是流没有这个能力。 可以两种模式都保留。 流 流模式可以在数据全部落库之后，最后做一...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/Note/2025-04-19-note-rca-05-sync-to-graph-database.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"RCA 根因分析推断-05-alarm sync neo4j 报警数据同步到图数据库"}],["meta",{"property":"og:description","content":"思路 场景 我们接收到报警之后，需要把报警信息落库。 其实有两种思路。 一种是流，一种是批模式。 优缺点 批 批模式可以做一些批量的优化操作。 比如 A2 的 disk 之类的无用异常过滤。 批模式如果改为 10 秒一次呢？ 有什么问题？ 批模式还可以支持数据的重跑，但是流没有这个能力。 可以两种模式都保留。 流 流模式可以在数据全部落库之后，最后做一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"note"}],["meta",{"property":"article:tag","content":"rca"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2025-04-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RCA 根因分析推断-05-alarm sync neo4j 报警数据同步到图数据库\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-04-19T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":0.9,"words":271},"filePathRelative":"posts/Note/2025-04-19-note-rca-05-sync-to-graph-database.md","localizedDate":"2025年4月19日","excerpt":"\\n<h2>场景</h2>\\n<p>我们接收到报警之后，需要把报警信息落库。</p>\\n<p>其实有两种思路。</p>\\n<p>一种是流，一种是批模式。</p>\\n<h2>优缺点</h2>\\n<h3>批</h3>\\n<p>批模式可以做一些批量的优化操作。</p>\\n<p>比如 A2 的 disk 之类的无用异常过滤。</p>\\n<p>批模式如果改为 10 秒一次呢？</p>\\n<p>有什么问题？</p>\\n<p>批模式还可以支持数据的重跑，但是流没有这个能力。</p>\\n<p>可以两种模式都保留。</p>\\n<h3>流</h3>\\n<p>流模式可以在数据全部落库之后，最后做一下数据的落库处理。</p>\\n<p>实时性比较高。</p>","autoDesc":true}');export{h as comp,d as data};
