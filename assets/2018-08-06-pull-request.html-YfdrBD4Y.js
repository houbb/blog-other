import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a,o as t}from"./app-uJE4P3e0.js";const n={};function l(r,e){return t(),s("div",null,e[0]||(e[0]=[a(`<h1 id="pull-request" tabindex="-1"><a class="header-anchor" href="#pull-request"><span>Pull Request</span></a></h1><h2 id="概念" tabindex="-1"><a class="header-anchor" href="#概念"><span>概念</span></a></h2><p>Pull Request 是一种通知机制。你修改了他人的代码，将你的修改通知原来的作者，希望他合并你的修改，这就是 Pull Request。</p><p>Pull Request 本质上是一种软件的合作方式，是将涉及不同功能的代码，纳入主干的一种流程。这个过程中，还可以进行讨论、审核和修改代码。</p><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程"><span>流程</span></a></h2><p>第一步，你需要把别人的代码，克隆到你自己的仓库，Github 的术语叫做 fork。</p><p>第二步，在你仓库的修改后的分支上，按下 【New pull request】按钮。</p><p>这时，会进入一个新页面，有Base 和 Head 两个选项。Base 是你希望提交变更的目标，Head 是目前包含你的变更的那个分支或仓库。</p><p>第三步，填写说明，帮助别人理解你的提交，然后按下【create pull request】按钮即可。</p><p>最后，PR 创建后，管理者就要决定是否接受该 PR。</p><p>对于非代码变更（比如文档），单单使用 Web 界面就足够了。</p><p>但是，对于代码变更，Web 界面可能不够用，需要命令行验证是否可以运行。</p><h1 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h1><h2 id="fork" tabindex="-1"><a class="header-anchor" href="#fork"><span>Fork</span></a></h2><p>首先 fork 项目，比如</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>http://192.168.3.253/i2_trade.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>fork 之后</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">http://192.168.3.253/bbhou/i2_trade.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="clone" tabindex="-1"><a class="header-anchor" href="#clone"><span>Clone</span></a></h2><p>项目 Clone 到本地</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://192.168.3.253/bbhou/i2_trade.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="添加同步" tabindex="-1"><a class="header-anchor" href="#添加同步"><span>添加同步</span></a></h2><p>为了需要和远程中心仓库更新和同步代码,需要在添加一个原始远程地址;</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upstream</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://192.168.3.253/hy_i2_trade/i2_trade.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git remote remove upstream</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>查看</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ git remote -v</span></span>
<span class="line"><span>origin  http://192.168.3.253/bbhou/i2_trade.git (fetch)</span></span>
<span class="line"><span>origin  http://192.168.3.253/bbhou/i2_trade.git (push)</span></span>
<span class="line"><span>upstream        http://192.168.3.253/hy_i2_trade/i2_trade.git (fetch)</span></span>
<span class="line"><span>upstream        http://192.168.3.253/hy_i2_trade/i2_trade.git (push)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="feach-merge" tabindex="-1"><a class="header-anchor" href="#feach-merge"><span>Feach &amp; Merge</span></a></h2><p>远程代码的更新拉取到本地并且合并</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> fetch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --all</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upstream/master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://help.github.com/articles/about-pull-requests/" target="_blank" rel="noopener noreferrer">https://help.github.com/articles/about-pull-requests/</a></p><p><a href="https://www.zhihu.com/question/21682976" target="_blank" rel="noopener noreferrer">https://www.zhihu.com/question/21682976</a></p><p><a href="http://www.ruanyifeng.com/blog/2017/07/pull_request.html" target="_blank" rel="noopener noreferrer">http://www.ruanyifeng.com/blog/2017/07/pull_request.html</a></p>`,35)]))}const d=i(n,[["render",l]]),o=JSON.parse('{"path":"/posts/devops/2018-08-06-pull-request.html","title":"Pull Request","lang":"zh-CN","frontmatter":{"title":"Pull Request","date":"2018-08-06T00:00:00.000Z","categories":["Devops"],"tags":["devops","git"],"published":true,"description":"Pull Request 概念 Pull Request 是一种通知机制。你修改了他人的代码，将你的修改通知原来的作者，希望他合并你的修改，这就是 Pull Request。 Pull Request 本质上是一种软件的合作方式，是将涉及不同功能的代码，纳入主干的一种流程。这个过程中，还可以进行讨论、审核和修改代码。 流程 第一步，你需要把别人的代码，...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/devops/2018-08-06-pull-request.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Pull Request"}],["meta",{"property":"og:description","content":"Pull Request 概念 Pull Request 是一种通知机制。你修改了他人的代码，将你的修改通知原来的作者，希望他合并你的修改，这就是 Pull Request。 Pull Request 本质上是一种软件的合作方式，是将涉及不同功能的代码，纳入主干的一种流程。这个过程中，还可以进行讨论、审核和修改代码。 流程 第一步，你需要把别人的代码，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2018-08-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pull Request\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-08-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.5,"words":450},"filePathRelative":"posts/devops/2018-08-06-pull-request.md","localizedDate":"2018年8月6日","excerpt":"\\n<h2>概念</h2>\\n<p>Pull Request 是一种通知机制。你修改了他人的代码，将你的修改通知原来的作者，希望他合并你的修改，这就是 Pull Request。</p>\\n<p>Pull Request 本质上是一种软件的合作方式，是将涉及不同功能的代码，纳入主干的一种流程。这个过程中，还可以进行讨论、审核和修改代码。</p>\\n<h2>流程</h2>\\n<p>第一步，你需要把别人的代码，克隆到你自己的仓库，Github 的术语叫做 fork。</p>\\n<p>第二步，在你仓库的修改后的分支上，按下 【New pull request】按钮。</p>\\n<p>这时，会进入一个新页面，有Base 和 Head 两个选项。Base 是你希望提交变更的目标，Head 是目前包含你的变更的那个分支或仓库。</p>","autoDesc":true}');export{d as comp,o as data};
