import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-CEDSurVN.js";const l={};function r(t,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="web3" tabindex="-1"><a class="header-anchor" href="#web3"><span>web3</span></a></h2><p>大家好，我是老马。</p><p>今天我们聊一下未来3到5年值得学习的方向。</p><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h2><p>希望本文对你有所帮助，如果喜欢，欢迎点赞收藏转发一波。</p><p>我是老马，期待与你的下次相遇。</p><hr><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="如何系统学习" tabindex="-1"><a class="header-anchor" href="#如何系统学习"><span>如何系统学习</span></a></h2><p>以下是系统学习云原生技术的路径规划，结合由浅入深的知识体系和实践方法，并附Mermaid流程图说明：</p><hr><h3 id="云原生技术系统学习路径" tabindex="-1"><a class="header-anchor" href="#云原生技术系统学习路径"><span>云原生技术系统学习路径</span></a></h3><h4 id="阶段1-基础认知与工具掌握-1-2个月" tabindex="-1"><a class="header-anchor" href="#阶段1-基础认知与工具掌握-1-2个月"><span>阶段1：基础认知与工具掌握（1-2个月）</span></a></h4><ol><li><p>云计算基础</p><ul><li>理解IaaS/PaaS/SaaS模型（公有云、私有云、混合云）(<a href="https://juejin.cn/post/7317723151935143970" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7317723151935143970</a>)</li><li>学习云服务商核心产品（如AWS EC2、Azure VM、便宜云服务器ECS）</li></ul></li><li><p>容器化技术</p><ul><li>Docker核心技能：</li></ul></li></ol><ul><li>镜像管理（分层结构、多阶段构建）(<a href="https://juejin.cn/post/7322891701236146215" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7322891701236146215</a>)</li><li>容器操作（网络配置、存储卷挂载）</li><li>Docker Compose编排多容器应用(<a href="https://juejin.cn/post/7280069841029799999" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7280069841029799999</a>) <ul><li>实验：部署一个包含Web服务+数据库的容器化应用</li></ul></li></ul><ol start="3"><li>Kubernetes入门 <ul><li>核心概念：Pod、Deployment、Service、Namespace(<a href="https://juejin.cn/post/6844903845311905805" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903845311905805</a>)</li><li>使用Minikube或Kind搭建本地集群</li><li>资源：<a href="https://kubernetes.io/docs/home/" target="_blank" rel="noopener noreferrer">Kubernetes官方文档</a> (<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</li></ul></li></ol><hr><h4 id="阶段2-架构设计与自动化-3-6个月" tabindex="-1"><a class="header-anchor" href="#阶段2-架构设计与自动化-3-6个月"><span>阶段2：架构设计与自动化（3-6个月）</span></a></h4><ol start="4"><li><p>微服务架构</p><ul><li>设计原则：单一职责、服务自治、API优先(<a href="https://juejin.cn/post/7322891701236146215" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7322891701236146215</a>)</li><li>工具实践：Spring Cloud或Go Micro框架</li><li>案例：将单体应用拆分为订单、用户、支付微服务</li></ul></li><li><p>CI/CD流水线</p><ul><li>工具链：Jenkins+ArgoCD/GitLab CI(<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</li><li>实践蓝绿部署、金丝雀发布(<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</li><li>实验：配置自动化构建→测试→部署流程</li></ul></li><li><p>进阶编排与管理</p><ul><li>Helm包管理（Chart模板、依赖管理）</li><li>有状态应用：StatefulSet+分布式存储（如Ceph）(<a href="https://juejin.cn/post/7317723151935143970" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7317723151935143970</a>)</li></ul></li></ol><hr><h4 id="阶段3-高阶优化与扩展-6个月" tabindex="-1"><a class="header-anchor" href="#阶段3-高阶优化与扩展-6个月"><span>阶段3：高阶优化与扩展（6个月+）</span></a></h4><ol start="7"><li>服务网格 <ul><li>Istio核心功能：</li></ul></li></ol><ul><li>流量管理（VirtualService/DestinationRule）</li><li>安全通信（mTLS、JWT认证）(<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>) <ul><li>实验：在K8s集群中部署Istio并实现灰度发布</li></ul></li></ul><ol start="8"><li><p>可观测性体系</p><ul><li>监控：Prometheus+Grafana（指标采集与可视化）</li><li>日志：EFK（Elasticsearch+Fluentd+Kibana）</li><li>追踪：Jaeger或SkyWalking(<a href="https://juejin.cn/post/7317723151935143970" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7317723151935143970</a>)</li></ul></li><li><p>云原生安全</p><ul><li>容器安全（镜像扫描工具Trivy）</li><li>策略管理（OPA/Gatekeeper）</li><li>网络策略（NetworkPolicy配置）</li></ul></li></ol><hr><h4 id="阶段4-生产级实践与前沿探索" tabindex="-1"><a class="header-anchor" href="#阶段4-生产级实践与前沿探索"><span>阶段4：生产级实践与前沿探索</span></a></h4><ol start="10"><li>跨云与混合云方案</li></ol><ul><li>使用Karmada或Cluster API管理多集群</li><li>设计容灾策略（跨区域备份、故障转移）</li></ul><ol start="11"><li>Serverless与边缘计算</li></ol><ul><li>Knative无服务器框架部署函数计算</li><li>KubeEdge实现边缘节点管理</li></ul><hr><h3 id="学习路径mermaid流程图" tabindex="-1"><a class="header-anchor" href="#学习路径mermaid流程图"><span>学习路径Mermaid流程图</span></a></h3><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A[阶段1: 基础] --&gt; B[云计算基础]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A --&gt; C[Docker容器技术]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A --&gt; D[K8s核心概念]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B --&gt; E[IaaS/PaaS/SaaS模型]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    C --&gt; F[镜像/容器操作]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    D --&gt; G[Pod/Deployment/Service]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    H[阶段2: 进阶] --&gt; I[微服务架构]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    H --&gt; J[CI/CD流水线]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    H --&gt; K[Helm包管理]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    I --&gt; L[单一职责/API优先]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    J --&gt; M[Jenkins/ArgoCD]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    N[阶段3: 高阶] --&gt; O[服务网格Istio]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    N --&gt; P[可观测性体系]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    N --&gt; Q[云原生安全]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    O --&gt; R[流量管理/mTLS]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    P --&gt; S[Prometheus/EFK]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    T[阶段4: 生产级] --&gt; U[跨云管理]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    T --&gt; V[Serverless]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    U --&gt; W[Karmada多集群]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    V --&gt; X[Knative函数计算]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="关键资源推荐" tabindex="-1"><a class="header-anchor" href="#关键资源推荐"><span>关键资源推荐</span></a></h3><table><thead><tr><th>技术领域</th><th>官方文档链接</th><th>开源项目资源</th></tr></thead><tbody><tr><td>Docker</td><td><a href="https://docs.docker.com" target="_blank" rel="noopener noreferrer">docs.docker.com</a> (<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</td><td><a href="https://github.com/veggiemonk/awesome-docker" target="_blank" rel="noopener noreferrer">Awesome Docker</a></td></tr><tr><td>Kubernetes</td><td><a href="https://kubernetes.io" target="_blank" rel="noopener noreferrer">kubernetes.io</a> (<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</td><td><a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener noreferrer">Kubernetes GitHub</a></td></tr><tr><td>Istio</td><td><a href="https://istio.io" target="_blank" rel="noopener noreferrer">istio.io</a> (<a href="https://juejin.cn/post/7330372011680022588" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7330372011680022588</a>)</td><td><a href="https://github.com/istio/istio" target="_blank" rel="noopener noreferrer">Istio GitHub</a></td></tr><tr><td>Prometheus</td><td><a href="https://prometheus.io" target="_blank" rel="noopener noreferrer">prometheus.io</a></td><td><a href="https://github.com/prometheus/prometheus" target="_blank" rel="noopener noreferrer">Prometheus GitHub</a></td></tr></tbody></table><hr><h3 id="实践环境搭建建议" tabindex="-1"><a class="header-anchor" href="#实践环境搭建建议"><span>实践环境搭建建议</span></a></h3><ol><li><p>本地开发环境：</p><ul><li>使用Docker Desktop（Mac/Windows）或Podman（Linux）</li><li>Minikube/Kind快速创建K8s集群(<a href="https://juejin.cn/post/6844903845311905805" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/6844903845311905805</a>)</li></ul></li><li><p>云上实验：</p><ul><li>免费层资源：AWS Free Tier、GCP $300赠金</li><li>部署示例：通过Terraform在云上自动创建K8s集群</li></ul></li><li><p>项目案例：</p><ul><li>从简单应用（如Nginx+MySQL）开始，逐步添加Service Mesh、监控等组件</li><li>参考GitHub上的云原生项目（如<a href="https://www.cncf.io/sandbox-projects/" target="_blank" rel="noopener noreferrer">CNCF沙箱项目</a>）</li></ul></li></ol><p>通过此路径，学习者可逐步掌握从基础到生产级的云原生技术体系，同时通过持续实践解决真实场景问题。</p><h2 id="如果系统得学习云原生技术" tabindex="-1"><a class="header-anchor" href="#如果系统得学习云原生技术"><span>如果系统得学习云原生技术</span></a></h2><p>以下是系统学习云原生技术的完整指南，结合核心概念、技术栈、学习路径、资源推荐和实践案例，帮助你从基础到进阶全面掌握这一领域：</p><hr><h3 id="一、云原生技术的定义与核心概念" tabindex="-1"><a class="header-anchor" href="#一、云原生技术的定义与核心概念"><span>一、云原生技术的定义与核心概念</span></a></h3><p>云原生（Cloud Native）是一种基于云计算环境设计和构建应用的架构理念，其核心目标是利用云的弹性、分布式和自动化能力，实现应用的快速开发、高效运维和持续迭代。其核心概念包括：</p><ol><li>容器化：通过Docker等工具实现轻量级虚拟化，确保应用在开发、测试和生产环境的一致性运行。</li><li>微服务架构：将单体应用拆分为独立的小型服务单元，通过API通信，提升灵活性和可维护性。</li><li>DevOps与CI/CD：整合开发与运维流程，实现持续集成、持续交付，缩短软件发布周期。</li><li>自动化运维：使用Kubernetes等编排工具管理容器集群，结合Prometheus、Grafana实现监控与日志自动化。</li><li>不可变基础设施：通过声明式API和基础设施即代码（IaC）确保环境的一致性。</li></ol><hr><h3 id="二、学习云原生技术的前置知识" tabindex="-1"><a class="header-anchor" href="#二、学习云原生技术的前置知识"><span>二、学习云原生技术的前置知识</span></a></h3><h4 id="_1-基础技能" tabindex="-1"><a class="header-anchor" href="#_1-基础技能"><span>1. 基础技能</span></a></h4><ul><li>计算机科学基础：数据结构、算法、操作系统原理。</li><li>Linux操作：熟悉命令行、文件系统、权限管理等。</li><li>编程语言：至少掌握Python、Java或Golang（推荐Golang，因其在云原生工具链中广泛应用）。</li><li>网络基础：IP地址、子网划分、负载均衡等。</li></ul><h4 id="_2-进阶知识" tabindex="-1"><a class="header-anchor" href="#_2-进阶知识"><span>2. 进阶知识</span></a></h4><ul><li>虚拟化技术：了解虚拟机与容器的区别（如Docker与VMWare的对比）。</li><li>云计算基础：IaaS/PaaS/SaaS模型，熟悉AWS、Azure或阿里云等平台的基础服务。</li><li>容器技术：Docker的镜像构建、容器生命周期管理。</li></ul><hr><h3 id="三、云原生核心技术栈与工具链" tabindex="-1"><a class="header-anchor" href="#三、云原生核心技术栈与工具链"><span>三、云原生核心技术栈与工具链</span></a></h3><h4 id="_1-核心工具" tabindex="-1"><a class="header-anchor" href="#_1-核心工具"><span>1. 核心工具</span></a></h4><ul><li>容器引擎：Docker。</li><li>容器编排：Kubernetes（管理Pod、Deployment、Service等核心资源）。</li><li>服务网格：Istio或Linkerd（实现服务间通信治理）。</li><li>CI/CD工具：Jenkins、GitLab CI、Argo CD。</li><li>监控与日志：Prometheus（指标收集）、Grafana（可视化）、ELK Stack（日志分析）。</li></ul><h4 id="_2-进阶技术" tabindex="-1"><a class="header-anchor" href="#_2-进阶技术"><span>2. 进阶技术</span></a></h4><ul><li>云原生数据库：CockroachDB、etcd（分布式存储）。</li><li>无服务器计算：AWS Lambda、Knative（事件驱动架构）。</li><li>安全实践：容器镜像扫描（Trivy）、Kubernetes RBAC策略。</li></ul><hr><h3 id="四、系统学习路径建议" tabindex="-1"><a class="header-anchor" href="#四、系统学习路径建议"><span>四、系统学习路径建议</span></a></h3><h4 id="初级阶段" tabindex="-1"><a class="header-anchor" href="#初级阶段"><span>初级阶段</span></a></h4><ol><li>掌握Docker：学习镜像构建、容器网络与存储（推荐《Docker入门与实战》）。</li><li>Kubernetes基础：部署集群、理解Pod/Service/Deployment概念（参考《Kubernetes权威指南》）。</li><li>微服务入门：使用Spring Cloud或Go Kit构建简单微服务。</li></ol><h4 id="中级阶段" tabindex="-1"><a class="header-anchor" href="#中级阶段"><span>中级阶段</span></a></h4><ol><li>深入Kubernetes：学习Helm包管理、Operator模式、集群扩缩容。</li><li>CI/CD实战：搭建GitLab流水线，实现自动化测试与部署。</li><li>服务网格实践：通过Istio实现流量管理、熔断与金丝雀发布。</li></ol><h4 id="高级阶段" tabindex="-1"><a class="header-anchor" href="#高级阶段"><span>高级阶段</span></a></h4><ol><li>云原生安全：实施容器运行时安全、网络策略（如Calico）。</li><li>混合云管理：使用KubeEdge或Anthos实现跨云部署。</li><li>参与开源项目：贡献CNCF项目（如Prometheus、Envoy）。</li></ol><hr><h3 id="五、推荐学习资源" tabindex="-1"><a class="header-anchor" href="#五、推荐学习资源"><span>五、推荐学习资源</span></a></h3><h4 id="_1-书籍与文档" tabindex="-1"><a class="header-anchor" href="#_1-书籍与文档"><span>1. 书籍与文档</span></a></h4><ul><li>《Kubernetes in Action》：深入解析K8S架构与实践。</li><li>《云原生模式》：Cornelia Davis著，涵盖设计模式与最佳实践。</li><li>官方文档：Kubernetes、Docker、AWS等官方指南。</li></ul><h4 id="_2-在线课程" tabindex="-1"><a class="header-anchor" href="#_2-在线课程"><span>2. 在线课程</span></a></h4><ul><li>CNCF x 阿里云公开课：免费中文课程，覆盖云原生全栈技术。</li><li>Coursera专项课程：如《Cloud Native Fundamentals》。</li></ul><h4 id="_3-实践平台" tabindex="-1"><a class="header-anchor" href="#_3-实践平台"><span>3. 实践平台</span></a></h4><ul><li>Katacoda：交互式Kubernetes实验环境。</li><li>Play with Docker/Kubernetes：免费在线沙箱。</li></ul><hr><h3 id="六、行业应用案例参考" tabindex="-1"><a class="header-anchor" href="#六、行业应用案例参考"><span>六、行业应用案例参考</span></a></h3><ol><li>金融行业：某银行通过Kubernetes实现核心系统容器化，部署时间从数小时缩短至分钟级。</li><li>电商平台：某电商采用微服务架构应对大促流量，故障恢复时间降至分钟级。</li><li>教育出版：高等教育出版社云原生改造项目获“2023年度云原生先锋实践”奖，显著降低开发和运维成本。</li></ol><hr><h3 id="七、能力认证与评估" tabindex="-1"><a class="header-anchor" href="#七、能力认证与评估"><span>七、能力认证与评估</span></a></h3><ol><li>KCNA认证：Linux基金会推出的入门级认证，覆盖Kubernetes基础与云原生生态。</li><li>CKA/CKAD：CNCF官方认证，证明Kubernetes管理与开发能力。</li><li>华为云鲲鹏认证：聚焦云原生与国产化技术栈。</li></ol><hr><h3 id="八、未来趋势与持续学习" tabindex="-1"><a class="header-anchor" href="#八、未来趋势与持续学习"><span>八、未来趋势与持续学习</span></a></h3><ol><li>无服务器与边缘计算：Serverless架构和边缘节点管理（如K3s）。</li><li>AI驱动的云原生：结合Kubeflow实现机器学习流水线。</li><li>GitOps：使用Argo CD实现声明式持续交付。</li></ol><p>通过系统化学习路径、工具链实践和项目实战，结合社区资源与认证考核，可逐步构建全面的云原生技术能力。</p><h2 id="docker-之后呢" tabindex="-1"><a class="header-anchor" href="#docker-之后呢"><span>docker 之后呢</span></a></h2><p>以下是 Docker 之后推荐的学习路径，分阶段从容器编排到云原生全栈技术，帮助你逐步构建完整的技能树：</p><hr><h3 id="一、-容器编排与集群管理-核心进阶" tabindex="-1"><a class="header-anchor" href="#一、-容器编排与集群管理-核心进阶"><span>一、 容器编排与集群管理（核心进阶）</span></a></h3><h4 id="_1-kubernetes-k8s" tabindex="-1"><a class="header-anchor" href="#_1-kubernetes-k8s"><span>1. Kubernetes（K8s）</span></a></h4><ul><li>学习重点：</li><li>核心概念：Pod、Deployment、Service、Ingress、ConfigMap、Secret。</li><li>集群部署：使用 <code>kubeadm</code> 或云托管服务（如阿里云 ACK）。</li><li>资源管理：HPA（自动扩缩容）、Resource Quotas（资源配额）。 <ul><li>实践项目：</li></ul></li><li>部署一个 Spring Boot 微服务到 K8s 集群，通过 Ingress 暴露 API。</li><li>使用 Helm 打包并发布应用（如自定义 Chart）。</li></ul><h4 id="_2-docker-compose-与-swarm-可选" tabindex="-1"><a class="header-anchor" href="#_2-docker-compose-与-swarm-可选"><span>2. Docker Compose 与 Swarm（可选）</span></a></h4><ul><li>适用场景：小型项目或本地开发环境，了解单机多容器编排。</li></ul><hr><h3 id="二、-云原生关键技术栈-横向扩展" tabindex="-1"><a class="header-anchor" href="#二、-云原生关键技术栈-横向扩展"><span>二、 云原生关键技术栈（横向扩展）</span></a></h3><h4 id="_1-服务网格-service-mesh" tabindex="-1"><a class="header-anchor" href="#_1-服务网格-service-mesh"><span>1. 服务网格（Service Mesh）</span></a></h4><ul><li>工具推荐：Istio、Linkerd。</li><li>核心能力：</li><li>流量管理（金丝雀发布、A/B 测试）。</li><li>服务间安全通信（mTLS）。</li><li>可观测性（集成 Prometheus + Grafana）。</li></ul><h4 id="_2-持续集成与持续交付-ci-cd" tabindex="-1"><a class="header-anchor" href="#_2-持续集成与持续交付-ci-cd"><span>2. 持续集成与持续交付（CI/CD）</span></a></h4><ul><li>工具链：</li><li>GitLab CI：定义 <code>.gitlab-ci.yml</code> 流水线，自动化构建镜像并部署到 K8s。</li><li>Argo CD：GitOps 实践，实现声明式应用交付。 <ul><li>实践项目：</li></ul></li><li>为 Spring Boot 项目配置 CI/CD，实现代码提交后自动发布到测试/生产环境。</li></ul><h4 id="_3-监控与日志" tabindex="-1"><a class="header-anchor" href="#_3-监控与日志"><span>3. 监控与日志</span></a></h4><ul><li>核心工具：</li><li>Prometheus：监控容器和服务的指标（如 CPU、内存、HTTP 请求延迟）。</li><li>Loki + Grafana：聚合和可视化容器日志。 <ul><li>实践项目：</li></ul></li><li>在 K8s 集群中部署 Prometheus Operator，监控微服务的健康状态。</li></ul><h4 id="_4-云原生存储与数据库" tabindex="-1"><a class="header-anchor" href="#_4-云原生存储与数据库"><span>4. 云原生存储与数据库</span></a></h4><ul><li>技术选型：</li><li>分布式存储：Ceph、Longhorn（K8s 原生存储方案）。</li><li>云原生数据库：TiDB、CockroachDB（兼容 MySQL 的分布式数据库）。</li></ul><hr><h3 id="三、-生产级安全与优化-深度进阶" tabindex="-1"><a class="header-anchor" href="#三、-生产级安全与优化-深度进阶"><span>三、 生产级安全与优化（深度进阶）</span></a></h3><h4 id="_1-容器安全" tabindex="-1"><a class="header-anchor" href="#_1-容器安全"><span>1. 容器安全</span></a></h4><ul><li>关键实践：</li><li>镜像扫描：使用 Trivy 或 Clair 检测镜像漏洞。</li><li>最小化镜像：基于 <code>distroless</code> 或 <code>alpine</code> 构建无 Shell 的运行时镜像。</li><li>非 Root 用户运行容器：在 Dockerfile 中指定 <code>USER 1001</code>。</li></ul><h4 id="_2-kubernetes-安全" tabindex="-1"><a class="header-anchor" href="#_2-kubernetes-安全"><span>2. Kubernetes 安全</span></a></h4><ul><li>核心内容：</li><li>RBAC（基于角色的访问控制）。</li><li>Network Policies（网络策略，如 Calico）。</li><li>Pod Security Policies（PSP）或 OPA Gatekeeper。</li></ul><h4 id="_3-性能调优" tabindex="-1"><a class="header-anchor" href="#_3-性能调优"><span>3. 性能调优</span></a></h4><ul><li>优化方向：</li><li>容器资源限制（CPU/Memory Requests/Limits）。</li><li>JVM 调优（如 G1 垃圾回收器参数）。</li><li>K8s 集群自动扩缩（Cluster Autoscaler）。</li></ul><hr><h3 id="四、-扩展领域-按需选择" tabindex="-1"><a class="header-anchor" href="#四、-扩展领域-按需选择"><span>四、 扩展领域（按需选择）</span></a></h3><h4 id="_1-serverless-无服务器架构" tabindex="-1"><a class="header-anchor" href="#_1-serverless-无服务器架构"><span>1. Serverless 无服务器架构</span></a></h4><ul><li>平台：AWS Lambda、阿里云函数计算、Knative。</li><li>场景：事件驱动型应用（如文件处理、定时任务）。</li></ul><h4 id="_2-边缘计算" tabindex="-1"><a class="header-anchor" href="#_2-边缘计算"><span>2. 边缘计算</span></a></h4><ul><li>工具：K3s（轻量级 K8s）、KubeEdge。</li><li>场景：物联网（IoT）设备管理、边缘节点应用部署。</li></ul><h4 id="_3-服务可观测性-observability" tabindex="-1"><a class="header-anchor" href="#_3-服务可观测性-observability"><span>3. 服务可观测性（Observability）</span></a></h4><ul><li>工具链：</li><li>链路追踪：Jaeger、SkyWalking。</li><li>日志与指标整合：Elastic Stack（EFK）。</li></ul><hr><h3 id="五、学习资源推荐" tabindex="-1"><a class="header-anchor" href="#五、学习资源推荐"><span>五、学习资源推荐</span></a></h3><h4 id="_1-官方文档" tabindex="-1"><a class="header-anchor" href="#_1-官方文档"><span>1. 官方文档</span></a></h4><ul><li><a href="https://kubernetes.io/docs/home/" target="_blank" rel="noopener noreferrer">Kubernetes 官方文档</a></li><li><a href="https://istio.io/latest/docs/" target="_blank" rel="noopener noreferrer">Istio 入门指南</a></li></ul><h4 id="_2-书籍" tabindex="-1"><a class="header-anchor" href="#_2-书籍"><span>2. 书籍</span></a></h4><ul><li>《Kubernetes in Action》 - 深入浅出讲解 K8s 核心原理。</li><li>《云原生模式》 - 设计模式和最佳实践。</li></ul><h4 id="_3-实验环境" tabindex="-1"><a class="header-anchor" href="#_3-实验环境"><span>3. 实验环境</span></a></h4><ul><li>Katacoda Kubernetes 场景：<a href="https://www.katacoda.com/courses/kubernetes" target="_blank" rel="noopener noreferrer">https://www.katacoda.com/courses/kubernetes </a></li><li>Minikube：本地单节点 K8s 集群。</li></ul><h4 id="_4-认证考试" tabindex="-1"><a class="header-anchor" href="#_4-认证考试"><span>4. 认证考试</span></a></h4><ul><li>CKA（Certified Kubernetes Administrator） ：证明 K8s 运维能力。</li><li>CKAD（Certified Kubernetes Application Developer） ：侧重应用开发与部署。</li></ul><hr><h3 id="六、下一步行动建议" tabindex="-1"><a class="header-anchor" href="#六、下一步行动建议"><span>六、下一步行动建议</span></a></h3><ol><li>从 Kubernetes 开始：在 Minikube 或云平台部署一个集群，尝试运行你的第一个 Pod。</li><li>结合项目实战：将已有的 Spring Boot 应用改造为 Helm Chart，并部署到 K8s。</li><li>加入社区：参与 CNCF（云原生计算基金会）的 Slack 频道或 Meetup，关注 KubeCon 大会。</li></ol><p>通过系统化学习，你将从“容器使用者”进阶为“云原生架构师”，掌握企业级应用的构建、部署与运维全链路能力。</p><h2 id="k8s-之后学习什么" tabindex="-1"><a class="header-anchor" href="#k8s-之后学习什么"><span>k8s 之后学习什么？</span></a></h2><h3 id="一、kubernetes-进阶编排" tabindex="-1"><a class="header-anchor" href="#一、kubernetes-进阶编排"><span>一、Kubernetes 进阶编排</span></a></h3><h4 id="_1-helm-应用包管理" tabindex="-1"><a class="header-anchor" href="#_1-helm-应用包管理"><span>1. Helm：应用包管理</span></a></h4><ul><li><p>核心概念：Chart 模板、Values 注入、Release 版本控制。</p></li><li><p>实战操作：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建 Helm Chart</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">helm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 部署到 K8s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">helm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./my-app</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>场景：一键部署复杂应用（如 WordPress + MySQL）。</p></li></ul><h4 id="_2-configmap-secret-动态配置" tabindex="-1"><a class="header-anchor" href="#_2-configmap-secret-动态配置"><span>2. ConfigMap &amp; Secret 动态配置</span></a></h4><ul><li>热更新：通过 <code>kubectl rollout restart deployment</code> 触发配置更新。</li><li>加密管理：集成 Vault 或 Sealed Secrets。</li></ul><h4 id="_3-持久化存储-statefulset-pv-pvc" tabindex="-1"><a class="header-anchor" href="#_3-持久化存储-statefulset-pv-pvc"><span>3. 持久化存储（StatefulSet + PV/PVC）</span></a></h4><ul><li>示例：部署 Redis 集群并绑定持久卷。</li><li>工具：使用 Rook 或 OpenEBS 管理分布式存储。</li></ul><hr><h3 id="二、服务治理与可观测性" tabindex="-1"><a class="header-anchor" href="#二、服务治理与可观测性"><span>二、服务治理与可观测性</span></a></h3><h4 id="_1-服务网格-istio" tabindex="-1"><a class="header-anchor" href="#_1-服务网格-istio"><span>1. 服务网格（Istio）</span></a></h4><ul><li>核心功能：</li><li>流量管理（金丝雀发布、A/B测试）。</li><li>安全通信（mTLS、JWT验证）。</li><li>监控指标（集成 Prometheus + Grafana）。 <ul><li>快速入门：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">istioctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> profile=demo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">kubectl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> label</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> namespace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> istio-injection=enabled</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h4 id="_2-监控告警体系" tabindex="-1"><a class="header-anchor" href="#_2-监控告警体系"><span>2. 监控告警体系</span></a></h4><ul><li>工具链：</li><li>指标采集：Prometheus Operator。</li><li>日志聚合：Loki + Fluentd。</li><li>可视化：Grafana 仪表盘（导入 ID 315 看板）。 <ul><li>告警规则：<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># PrometheusRule 示例（CPU超限告警）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HighCpuUsage</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  expr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=&quot;idle&quot;}[5m])) * 100) &gt; 80</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">5m</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h4 id="_3-链路追踪-tracing" tabindex="-1"><a class="header-anchor" href="#_3-链路追踪-tracing"><span>3. 链路追踪（Tracing）</span></a></h4><ul><li>工具：Jaeger 或 SkyWalking。</li><li>集成：在代码中注入 OpenTelemetry SDK。</li></ul><hr><h3 id="三、-持续交付与自动化-ci-cd" tabindex="-1"><a class="header-anchor" href="#三、-持续交付与自动化-ci-cd"><span>三、 持续交付与自动化（CI/CD）</span></a></h3><h4 id="_1-gitops-实践-argo-cd" tabindex="-1"><a class="header-anchor" href="#_1-gitops-实践-argo-cd"><span>1. GitOps 实践（Argo CD）</span></a></h4><ul><li>工作流：Git 仓库变更 → 自动同步到集群。</li><li>部署示例：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">argocd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --repo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/user/repo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --path</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> manifests</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --dest-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://kubernetes.default.svc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h4 id="_2-流水线设计-gitlab-ci" tabindex="-1"><a class="header-anchor" href="#_2-流水线设计-gitlab-ci"><span>2. 流水线设计（GitLab CI）</span></a></h4><ul><li>.gitlab-ci.yml 示例：<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">stages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">build</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">deploy</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">build-image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  stage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">build</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker build -t my-registry.com/my-app:$CI_COMMIT_SHA .</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">docker push my-registry.com/my-app:$CI_COMMIT_SHA</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">deploy-k8s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  stage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">deploy</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">kubectl set image deployment/my-app my-app=my-registry.com/my-app:$CI_COMMIT_SHA</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="四、安全与优化" tabindex="-1"><a class="header-anchor" href="#四、安全与优化"><span>四、安全与优化</span></a></h3><h4 id="_1-安全加固" tabindex="-1"><a class="header-anchor" href="#_1-安全加固"><span>1. 安全加固</span></a></h4><ul><li>镜像扫描：Trivy 或 Clair 检测漏洞。</li><li>策略即代码（OPA Gatekeeper）：<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 禁止使用 latest 标签</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">constraints.gatekeeper.sh/v1beta1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">K8sRequiredImageTag</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">require-image-tag</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  match</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    kinds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apiGroups</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        kinds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Pod&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  parameters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    patterns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">allowedRegex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;^.+:.+$&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 必须包含标签</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-性能调优" tabindex="-1"><a class="header-anchor" href="#_2-性能调优"><span>2. 性能调优</span></a></h4><ul><li>资源配额：设置 Requests/Limits 避免 OOM。</li><li>HPA（自动扩缩容）：<div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">autoscaling/v2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">HorizontalPodAutoscaler</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">metadata</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">my-app-hpa</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  scaleTargetRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    apiVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">my-app</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  minReplicas</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  maxReplicas</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  metrics</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    - </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Resource</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">cpu</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Utilization</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">          averageUtilization</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">80</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h3 id="五、-扩展领域-按需选择" tabindex="-1"><a class="header-anchor" href="#五、-扩展领域-按需选择"><span>五、 扩展领域（按需选择）</span></a></h3><h4 id="_1-serverless-架构" tabindex="-1"><a class="header-anchor" href="#_1-serverless-架构"><span>1. Serverless 架构</span></a></h4><ul><li>平台：AWS Lambda、OpenFaaS、Knative。</li><li>场景：事件驱动型任务（图片处理、定时爬虫）。</li></ul><h4 id="_2-边缘计算-edge" tabindex="-1"><a class="header-anchor" href="#_2-边缘计算-edge"><span>2. 边缘计算（Edge）</span></a></h4><ul><li>工具：K3s（轻量级 K8s）、KubeEdge。</li><li>案例：工厂 IoT 设备实时数据处理。</li></ul><h4 id="_3-混合云与多集群管理" tabindex="-1"><a class="header-anchor" href="#_3-混合云与多集群管理"><span>3. 混合云与多集群管理</span></a></h4><ul><li>方案：Rancher、Karmada、Cluster API。</li><li>场景：统一管理公有云 + 私有云集群。</li></ul><hr><h3 id="六、推荐学习资源" tabindex="-1"><a class="header-anchor" href="#六、推荐学习资源"><span>六、推荐学习资源</span></a></h3><h4 id="_1-文档与书籍" tabindex="-1"><a class="header-anchor" href="#_1-文档与书籍"><span>1. 文档与书籍</span></a></h4><ul><li>官方文档：<a href="https://kubernetes.io/docs/home/" target="_blank" rel="noopener noreferrer">Kubernetes</a>、<a href="https://istio.io/latest/docs/" target="_blank" rel="noopener noreferrer">Istio</a>、<a href="https://prometheus.io/docs/introduction/overview/" target="_blank" rel="noopener noreferrer">Prometheus</a>。</li><li>书籍：《Kubernetes in Action》《云原生模式》。</li></ul><h4 id="_2-动手实验平台" tabindex="-1"><a class="header-anchor" href="#_2-动手实验平台"><span>2. 动手实验平台</span></a></h4><ul><li>Katacoda：免费 K8s 场景化实验（<a href="https://www.katacoda.com/courses/kubernetes" target="_blank" rel="noopener noreferrer">https://www.katacoda.com/courses/kubernetes</a>）。</li><li>Killercoda：交互式 K8s 故障排查训练。</li></ul><h4 id="_3-认证体系" tabindex="-1"><a class="header-anchor" href="#_3-认证体系"><span>3. 认证体系</span></a></h4><ul><li>CKA（Kubernetes管理员认证） ：证明集群运维能力。</li><li>CKAD（Kubernetes应用开发者认证） ：侧重应用部署与调试。</li></ul><hr><h3 id="七、下一步行动建议" tabindex="-1"><a class="header-anchor" href="#七、下一步行动建议"><span>七、下一步行动建议</span></a></h3><ol><li>选择一个实战项目：例如搭建博客系统（WordPress + MySQL），并逐步集成监控、CI/CD 和安全策略。</li><li>参与开源社区：贡献 CNCF 项目（如 Argo、Prometheus）或参与 KubeCon 会议。</li><li>考取认证：制定 2-3 个月计划备考 CKA，系统性检验知识掌握度。</li></ol><p>通过分阶段实践与理论结合，你将从“会部署应用”进阶到“设计高可用云原生架构”，成为企业急需的全栈云原生工程师！</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://zhuanlan.zhihu.com/p/27327515233" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/27327515233</a></p>`,182)]))}const d=s(l,[["render",r]]),k=JSON.parse('{"path":"/posts/Learn/2025-03-12-skill-tree-web3-or-ai-20-learn-cloud-native.html","title":"AI-20-cloud native 云原生如何学习？","lang":"zh-CN","frontmatter":{"title":"AI-20-cloud native 云原生如何学习？","date":"2025-03-07T00:00:00.000Z","categories":["Learn"],"tags":["native-cloud","learn","sh"],"published":true,"description":"web3 大家好，我是老马。 今天我们聊一下未来3到5年值得学习的方向。 小结 希望本文对你有所帮助，如果喜欢，欢迎点赞收藏转发一波。 我是老马，期待与你的下次相遇。 chat 如何系统学习 以下是系统学习云原生技术的路径规划，结合由浅入深的知识体系和实践方法，并附Mermaid流程图说明： 云原生技术系统学习路径 阶段1：基础认知与工具掌握（1-2个...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Learn/2025-03-12-skill-tree-web3-or-ai-20-learn-cloud-native.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"AI-20-cloud native 云原生如何学习？"}],["meta",{"property":"og:description","content":"web3 大家好，我是老马。 今天我们聊一下未来3到5年值得学习的方向。 小结 希望本文对你有所帮助，如果喜欢，欢迎点赞收藏转发一波。 我是老马，期待与你的下次相遇。 chat 如何系统学习 以下是系统学习云原生技术的路径规划，结合由浅入深的知识体系和实践方法，并附Mermaid流程图说明： 云原生技术系统学习路径 阶段1：基础认知与工具掌握（1-2个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"native-cloud"}],["meta",{"property":"article:tag","content":"learn"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2025-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AI-20-cloud native 云原生如何学习？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":13.45,"words":4034},"filePathRelative":"posts/Learn/2025-03-12-skill-tree-web3-or-ai-20-learn-cloud-native.md","localizedDate":"2025年3月7日","excerpt":"<h2>web3</h2>\\n<p>大家好，我是老马。</p>\\n<p>今天我们聊一下未来3到5年值得学习的方向。</p>\\n<h2>小结</h2>\\n<p>希望本文对你有所帮助，如果喜欢，欢迎点赞收藏转发一波。</p>\\n<p>我是老马，期待与你的下次相遇。</p>\\n<hr>\\n<h1>chat</h1>\\n<h2>如何系统学习</h2>\\n<p>以下是系统学习云原生技术的路径规划，结合由浅入深的知识体系和实践方法，并附Mermaid流程图说明：</p>\\n<hr>\\n<h3>云原生技术系统学习路径</h3>\\n<h4>阶段1：基础认知与工具掌握（1-2个月）</h4>\\n<ol>\\n<li>\\n<p>云计算基础</p>\\n<ul>\\n<li>理解IaaS/PaaS/SaaS模型（公有云、私有云、混合云）(<a href=\\"https://juejin.cn/post/7317723151935143970\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://juejin.cn/post/7317723151935143970</a>)</li>\\n<li>学习云服务商核心产品（如AWS EC2、Azure VM、便宜云服务器ECS）</li>\\n</ul>\\n</li>\\n<li>\\n<p>容器化技术</p>\\n<ul>\\n<li>Docker核心技能：</li>\\n</ul>\\n</li>\\n</ol>","autoDesc":true}');export{d as comp,k as data};
