import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as t}from"./app-uJE4P3e0.js";const h={};function l(e,i){return t(),a("div",null,i[0]||(i[0]=[n(`<h3 id="_4-1-if-语句" tabindex="-1"><a class="header-anchor" href="#_4-1-if-语句"><span>4.1. if 语句</span></a></h3><p><code>if</code> 语句是最为人们熟知的语句类型。例如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">input</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请输入一个整数：&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF;">\` 定义，位于参数列表和冒号之间，表示 \`</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF;">\` 语句的结束。以下示例有一个必需参数，一个可选参数，以及返回值的注释：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#FFFFFF;">\`\`\`py</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">ham</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> eggs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;eggs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) -&gt; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Annotations:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, f.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__annotations__</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Arguments:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, ham, eggs)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ham </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39; and &#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> eggs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;spam&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Annotations: {</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ham&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;return&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: , </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;eggs&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Arguments: spam eggs</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;spam and eggs&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-9-插曲-编码风格" tabindex="-1"><a class="header-anchor" href="#_4-9-插曲-编码风格"><span>4.9. 插曲：编码风格</span></a></h1><p>既然你即将编写更长、更复杂的 Python 代码，现在是讨论编码风格的好时机。大多数语言都可以以不同的风格编写（或更简洁、格式化）；有些更易读。让其他人轻松阅读你的代码总是一个好主意，采用良好的编码风格对此有很大帮助。</p><p>对于 Python，PEP 8 已经成为大多数项目遵循的风格指南；它推广了一种非常易读且赏心悦目的编码风格。每个 Python 开发者都应该在某个时候阅读它；以下是为你提取的最重要的点：</p><ul><li>使用 4 个空格的缩进，不使用制表符。</li><li>将行包装起来，使其不超过 79 个字符。</li><li>使用空白行来分隔函数和类，以及函数内的较大代码块。</li><li>在可能的情况下，将注释放在它们自己的行上。</li><li>使用文档字符串。</li><li>在操作符和逗号后面使用空格，但不直接在括号结构内部使用：<code>a = f(1, 2) + g(3, 4)</code>。</li><li>为类和函数命名保持一致；约定是使用大驼峰命名法（UpperCamelCase）来命名类，使用小写并使用下划线（lowercase_with_underscores）来命名函数和方法。始终使用 <code>self</code> 作为第一个方法参数的名称。</li><li>如果代码旨在在国际环境中使用，请不要使用高级编码。Python 的默认、UTF-8，或者甚至纯 ASCII 都是最佳选择。</li><li>同样，如果有任何可能的话，不要在标识符中使用非 ASCII 字符，因为有人可能会用不同的语言阅读或维护代码。</li></ul><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://docs.python.org/3.12/tutorial/controlflow.html" target="_blank" rel="noopener noreferrer">https://docs.python.org/3.12/tutorial/controlflow.html</a></p>`,9)]))}const r=s(h,[["render",l]]),d=JSON.parse(`{"path":"/posts/Lang/2018-02-16-python-learn-v3.12.3-doc-04-control-flow.html","title":"Python v3.12.3 学习-04-流程控制","lang":"zh-CN","frontmatter":{"title":"Python v3.12.3 学习-04-流程控制","date":"2018-02-14T00:00:00.000Z","categories":["Lang"],"tags":["python","lang","why-learn","sh"],"published":true,"description":"4.1. if 语句 if 语句是最为人们熟知的语句类型。例如： 4.9. 插曲：编码风格 既然你即将编写更长、更复杂的 Python 代码，现在是讨论编码风格的好时机。大多数语言都可以以不同的风格编写（或更简洁、格式化）；有些更易读。让其他人轻松阅读你的代码总是一个好主意，采用良好的编码风格对此有很大帮助。 对于 Python，PEP 8 已经成为大...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/Lang/2018-02-16-python-learn-v3.12.3-doc-04-control-flow.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Python v3.12.3 学习-04-流程控制"}],["meta",{"property":"og:description","content":"4.1. if 语句 if 语句是最为人们熟知的语句类型。例如： 4.9. 插曲：编码风格 既然你即将编写更长、更复杂的 Python 代码，现在是讨论编码风格的好时机。大多数语言都可以以不同的风格编写（或更简洁、格式化）；有些更易读。让其他人轻松阅读你的代码总是一个好主意，采用良好的编码风格对此有很大帮助。 对于 Python，PEP 8 已经成为大..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"why-learn"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python v3.12.3 学习-04-流程控制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":13.44,"words":4031},"filePathRelative":"posts/Lang/2018-02-16-python-learn-v3.12.3-doc-04-control-flow.md","localizedDate":"2018年2月14日","excerpt":"<h3>4.1. if 语句</h3>\\n<p><code>if</code> 语句是最为人们熟知的语句类型。例如：</p>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">=</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> int</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">input</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"请输入一个整数：\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">))</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">if</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#000000;--shiki-dark:#FFFFFF\\">\` 定义，位于参数列表和冒号之间，表示 \`</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">def</span><span style=\\"--shiki-light:#000000;--shiki-dark:#FFFFFF\\">\` 语句的结束。以下示例有一个必需参数，一个可选参数，以及返回值的注释：</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#000000;--shiki-dark:#FFFFFF\\">\`\`\`py</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">def</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> f</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\\">ham</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> str</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span><span style=\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\\"> eggs</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> str</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'eggs'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) -&gt; </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">str</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">    print</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"Annotations:\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, f.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">__annotations__</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">    print</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"Arguments:\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, ham, eggs)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> ham </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">+</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ' and '</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> +</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> eggs</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\">f</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'spam'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">Annotations: {</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'ham'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: , </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'return'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: , </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'eggs'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">: }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">Arguments: spam eggs</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'spam and eggs'</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,d as data};
