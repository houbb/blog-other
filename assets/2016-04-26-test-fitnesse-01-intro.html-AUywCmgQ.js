import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as i}from"./app-CEDSurVN.js";const t={};function l(r,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2018/06/24/junit5-01-hello" target="_blank" rel="noopener noreferrer">junit5 系列教程</a></p><p><a href="https://houbb.github.io/2021/07/23/junit-performance-junit5" target="_blank" rel="noopener noreferrer">基于 junit5 实现 junitperf 源码分析</a></p><p><a href="https://github.com/houbb/data-factory" target="_blank" rel="noopener noreferrer">Auto generate mock data for java test.(便于 Java 测试自动生成对象信息)</a></p><p><a href="https://github.com/houbb/junitperf" target="_blank" rel="noopener noreferrer">Junit performance rely on junit5 and jdk8+.(java 性能测试框架。压测+测试报告生成。)</a></p><h1 id="fitnesse" tabindex="-1"><a class="header-anchor" href="#fitnesse"><span>Fitnesse</span></a></h1><p>完全集成的独立维基和验收测试框架</p><blockquote><p><a href="http://fitnesse.org/" target="_blank" rel="noopener noreferrer">fitnesse</a></p></blockquote><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>FitNesse 是一款用于指定和验证应用程序验收标准（需求）的工具。它充当了软件交付过程中不同利益相关者（专业领域）之间的桥梁。</p><p>其维基服务器使软件文档化变得简单。其测试执行功能允许您验证文档与软件之间的一致性，确保文档保持最新，并且软件不会出现回归问题。</p><p>为了使其正常工作，测试应该与业务代表一起在业务层面上定义。它们基本上是业务需求，以一种易于所有利益相关者理解的方式展示。当您的需求明确无误时，它们可以与您的应用程序自动验证。</p><p>为了使所有利益相关者都能轻松与FitNesse交互，需求可以通过Web浏览器创建和编辑。它就是一个维基！通过编写规范（也称为验收测试），您可以在团队（编程人员和非编程人员）中建立共同的理解。这在交付正确的系统方面非常有帮助。规范可以使用维基语法或富文本编辑器编写，因此不需要了解维基语法。</p><p>因为规范实际上可以执行，FitNesse提供了一种方法，即使对于非编程人员也可以演示应用程序是否按设计工作。这可以防止导致项目需求死亡的问题。FitNesse 的目标是在用户界面级别的下面运行，演示在给定应用程序的各种输入情况下，正确的结果被计算出来。在某种程度上，您可以将其视为应用程序的替代用户界面。</p><p>被说服了吗？在我们的两分钟示例中更深入了解FitNesse的工作原理。</p><p>如果您尚未这样做，请下载并安装FitNesse在您的计算机上。然后学习如何使用FitNesse维基编写验收测试。</p><h1 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world"><span>Hello World</span></a></h1><blockquote><p><a href="http://blog.csdn.net/funi16/article/details/8985280" target="_blank" rel="noopener noreferrer">intro-demo 简体中文</a></p></blockquote><ul><li><p><a href="http://fitnesse.org/FitNesseDownload" target="_blank" rel="noopener noreferrer">下载</a> <code>fitnesse-standalone.jar</code></p></li><li><p>启动</p></li></ul><p>在7979端口启动fitnesse</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>D:\\Tools\\fitnesse&gt;java -jar fitnesse-standalone.jar -p 7979</span></span>
<span class="line"><span>十一月 10, 2016 3:36:46 下午 fitnesse.ConfigurationParameter loadProperties</span></span>
<span class="line"><span>信息: 未找到配置文件 (D:\\Tools\\fitnesse\\plugins.properties)</span></span>
<span class="line"><span>正在引导 FitNesse，完全集成的独立维基和验收测试框架。</span></span>
<span class="line"><span>根页面: fitnesse.wiki.fs.WikiFilePage: FitNesseRoot</span></span>
<span class="line"><span>日志记录器: 无</span></span>
<span class="line"><span>认证器: fitnesse.authentication.PromiscuousAuthenticator</span></span>
<span class="line"><span>页面工厂: fitnesse.html.template.PageFactory</span></span>
<span class="line"><span>页面主题: bootstrap</span></span>
<span class="line"><span>正在解包 FitNesse 资源的新版本。请耐心等待...</span></span>
<span class="line"><span>**********************************************************</span></span>
<span class="line"><span>文件已更新为新版本。</span></span>
<span class="line"><span>请查看发布说明</span></span>
<span class="line"><span>http://localhost:7979/FitNesse.ReleaseNotes</span></span>
<span class="line"><span>以了解新功能和修复。</span></span>
<span class="line"><span>**********************************************************</span></span>
<span class="line"><span>在端口 7979 上启动 FitNesse</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>访问</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>localhost:7979</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/tools/fitnesse/2016-11-10-fitnesse-index.png" alt="index" tabindex="0" loading="lazy"><figcaption>index</figcaption></figure><ul><li>编辑页面</li></ul><p>根据提示，直接点击【编辑】，然后在末尾添加页面名称，如【MyFirstPage】，然后保存。页面名称遵循<strong>WikiWord</strong>的命名规则。</p><p>返回页面即可看到添加的页面。</p><h1 id="mac-上测试" tabindex="-1"><a class="header-anchor" href="#mac-上测试"><span>MAC 上测试</span></a></h1><h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>houbinbindeMacBook-Pro:fitnesse houbinbin$ ls</span></span>
<span class="line"><span>fitnesse-standalone.jar</span></span>
<span class="line"><span>houbinbindeMacBook-Pro:fitnesse houbinbin$ pwd</span></span>
<span class="line"><span>/Users/houbinbin/it/tools/fitnesse</span></span>
<span class="line"><span>houbinbindeMacBook-Pro:fitnesse houbinbin$ java -jar fitnesse-standalone.jar -p 7979</span></span>
<span class="line"><span>十一月 10, 2016 10:17:24 下午 fitnesse.ConfigurationParameter loadProperties</span></span>
<span class="line"><span>信息: 未找到配置文件 (/Users/houbinbin/IT/tools/fitnesse/plugins.properties)</span></span>
<span class="line"><span>正在引导 FitNesse，完全集成的独立维基和验收测试框架。</span></span>
<span class="line"><span>根页面: fitnesse.wiki.fs.WikiFilePage: FitNesseRoot</span></span>
<span class="line"><span>日志记录器: 无</span></span>
<span class="line"><span>认证器: fitnesse.authentication.PromiscuousAuthenticator</span></span>
<span class="line"><span>页面工厂: fitnesse.html.template.PageFactory</span></span>
<span class="line"><span>页面主题: bootstrap</span></span>
<span class="line"><span>正在解包 FitNesse 资源的新版本。请耐心等待...</span></span>
<span class="line"><span>**********************************************************</span></span>
<span class="line"><span>文件已更新为新版本。</span></span>
<span class="line"><span>请查看发布说明</span></span>
<span class="line"><span>http://localhost:7979/FitNesse.ReleaseNotes</span></span>
<span class="line"><span>以了解新功能和修复。</span></span>
<span class="line"><span>**********************************************************</span></span>
<span class="line"><span>在端口 7979 上启动 FitNesse</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加页面-myfirstpage" tabindex="-1"><a class="header-anchor" href="#添加页面-myfirstpage"><span>添加页面 <code>MyFirstPage</code></span></a></h2><p>1、在 <strong>tools/properties</strong> 中设置页面类型为 <strong>test</strong></p><p>2、编辑页面，添加以下内容：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>!define TEST_SYSTEM {slim}</span></span>
<span class="line"><span>!path /Users/houbinbin/IT/tools/fitnesse/fitnesse-standalone.jar</span></span>
<span class="line"><span>!path /Users/houbinbin/it/tools/fitnesse/</span></span>
<span class="line"><span>!|HelloWorld|</span></span>
<span class="line"><span>|sayHello?|</span></span>
<span class="line"><span>|Hello|</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>内容解释：</p><p>Line 1: 使用FitNesse的slim模块，也就是使用网页的形式描述测试用例</p><p>Line 2: <code>fitnesse-standalone.jar</code> jar文件路径。</p><p>Line 3: <code>HelloWorld.class</code> class文件存放路径。</p><ul><li>HelloWorld.java</li></ul><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloWorld</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sayHello</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过命令编译后获得</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$   javac HelloWorld.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Line 4: 引入HelloWorld类</p><p>Line 5: 方法名称,带有<code>?</code>说明此方法为返回值,Line 6 为对应的返回值。如果只是<code>age</code>,则会调用对应<code>setAge()</code> 方法,下一行为设置的值。</p><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><p>点击页面【测试】,结果如下</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>测试页面: 1 正确，0 错误，0 忽略，0 异常     断言: 1 正确，0 错误，0 忽略，0 异常 (0.530 秒)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,47)]))}const d=e(t,[["render",l]]),c=JSON.parse('{"path":"/posts/tests/2016-04-26-test-fitnesse-01-intro.html","title":"Fitnesse 01-入门介绍 独立维基和验收测试框架","lang":"zh-CN","frontmatter":{"title":"Fitnesse 01-入门介绍 独立维基和验收测试框架","date":"2016-11-07T00:00:00.000Z","categories":["Test"],"tags":["test","integration-test"],"published":true,"description":"拓展阅读 junit5 系列教程 基于 junit5 实现 junitperf 源码分析 Auto generate mock data for java test.(便于 Java 测试自动生成对象信息) Junit performance rely on junit5 and jdk8+.(java 性能测试框架。压测+测试报告生成。) Fitne...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/tests/2016-04-26-test-fitnesse-01-intro.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Fitnesse 01-入门介绍 独立维基和验收测试框架"}],["meta",{"property":"og:description","content":"拓展阅读 junit5 系列教程 基于 junit5 实现 junitperf 源码分析 Auto generate mock data for java test.(便于 Java 测试自动生成对象信息) Junit performance rely on junit5 and jdk8+.(java 性能测试框架。压测+测试报告生成。) Fitne..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/houbb/resource/master/img/tools/fitnesse/2016-11-10-fitnesse-index.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"integration-test"}],["meta",{"property":"article:published_time","content":"2016-11-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Fitnesse 01-入门介绍 独立维基和验收测试框架\\",\\"image\\":[\\"https://raw.githubusercontent.com/houbb/resource/master/img/tools/fitnesse/2016-11-10-fitnesse-index.png\\"],\\"datePublished\\":\\"2016-11-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":4.05,"words":1215},"filePathRelative":"posts/tests/2016-04-26-test-fitnesse-01-intro.md","localizedDate":"2016年11月7日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2018/06/24/junit5-01-hello\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">junit5 系列教程</a></p>\\n<p><a href=\\"https://houbb.github.io/2021/07/23/junit-performance-junit5\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">基于 junit5 实现 junitperf 源码分析</a></p>\\n<p><a href=\\"https://github.com/houbb/data-factory\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Auto generate mock data for java test.(便于 Java 测试自动生成对象信息)</a></p>","autoDesc":true}');export{d as comp,c as data};
