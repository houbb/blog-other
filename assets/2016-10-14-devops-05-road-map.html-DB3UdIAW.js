import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as o,o as a}from"./app-uJE4P3e0.js";const n="",s={};function l(p,e){return a(),t("div",null,e[0]||(e[0]=[o('<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2016/10/14/devops-01-overview" target="_blank" rel="noopener noreferrer">Devops-01-devops 是什么？</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-02-jpom" target="_blank" rel="noopener noreferrer">Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-sonarqube-01-intro" target="_blank" rel="noopener noreferrer">代码质量管理 SonarQube-01-入门介绍</a></p><p><a href="https://houbb.github.io/2016/10/14/project-manage-jira-01-intro" target="_blank" rel="noopener noreferrer">项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件</a></p><p><a href="https://houbb.github.io/2016/10/14/project-manage-phabricator-01-overview" target="_blank" rel="noopener noreferrer">项目管理平台-01-Phabricator 入门介绍 一套集成的强大工具，帮助公司构建更高质量的软件</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-jenkins-01-intro" target="_blank" rel="noopener noreferrer">持续集成平台 01 jenkins 入门介绍</a></p><p><a href="https://houbb.github.io/2016/10/14/devops-jenkins-02-plugin" target="_blank" rel="noopener noreferrer">持续集成平台 02 jenkins plugin 插件</a></p><h1 id="devops" tabindex="-1"><a class="header-anchor" href="#devops"><span>DevOps</span></a></h1><p>1、PLAN 开发团队根据客户的目标指定开发计划</p><p>2、CODE 根据&quot;PLAN(开发计划)&quot; 开始编写代码，需要将不同版本(&quot;稳定&quot;/&quot;最新&quot;)的代码存储在一个库中</p><p>3、Build 代码编写完成后，需要将代码构建打包并且运行</p><p>4、Test 成功构建项目后，需要测试代码是否存在BUG或者错误</p><p>5、DEPLOY 代码经过&quot;手动调试&quot;和&quot;自动化测试&quot;后，认为可以部署了，选一个稳定版本部署</p><p>6、OPERATE 运维团队将代码部署到生产环境中</p><p>7、MONITOR 项目部署上线后，需要持续的监控产品</p><p>8、INTEGRATE 然后将监控阶段收到的反馈发送回PLAN阶段，整体反复的流程就是DEVOPS的核心(ci/cd)</p><h1 id="devops-路线图-2024" tabindex="-1"><a class="header-anchor" href="#devops-路线图-2024"><span>DevOps 路线图 2024</span></a></h1><p>这是成为 DevOps 工程师的逐步指南，附带相关学习资源的链接。</p><p>如果你想了解更多关于 DevOps 的内容，务必订阅 <strong><a href="https://newsletter.techworld-with-milan.com/" target="_blank" rel="noopener noreferrer">我的新闻通讯</a></strong>。</p><h2 id="支持我的工作" tabindex="-1"><a class="header-anchor" href="#支持我的工作"><span>支持我的工作</span></a></h2><p>如果你觉得这个资源库对你有帮助，可以通过 Patreon 支持我：</p><figure><a href="https://www.patreon.com/techworld_with_milan" target="_blank" rel="noopener noreferrer"><img src="'+n+'" alt="Patreon" tabindex="0" loading="lazy"></a><figcaption>Patreon</figcaption></figure><h2 id="免责声明" tabindex="-1"><a class="header-anchor" href="#免责声明"><span>免责声明</span></a></h2><blockquote><p>这个路线图的目的是让你了解 DevOps 的整体发展方向。如果你不确定接下来应该学什么，它将为你提供一些指引，而不是鼓励你选择当前的流行或趋势工具。你应该理解为什么某个工具在某些情况下比其他工具更适用，并且记住，流行和趋势不总是意味着最适合该工作的工具。</p></blockquote><h2 id="给个星星" tabindex="-1"><a class="header-anchor" href="#给个星星"><span>给个星星！⭐</span></a></h2><p>如果你喜欢或者正在使用这个项目来学习或开始你的解决方案，请给它点个星星，谢谢！</p><figure><img src="https://github.com/milanm/DevOps-Roadmap/blob/master/DevOps Roadmap.png?raw=true" alt="DevOps 路线图" tabindex="0" loading="lazy"><figcaption>DevOps 路线图</figcaption></figure><h2 id="pdf-版本" tabindex="-1"><a class="header-anchor" href="#pdf-版本"><span>PDF 版本</span></a></h2><p>下载 <a href="https://github.com/milanm/DevOps-Roadmap/blob/master/DevOps%20Roadmap.pdf" target="_blank" rel="noopener noreferrer">PDF 版本</a>。</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li><a href="#learning-resources-for-devops-engineers-mostly-free">DevOps 工程师学习资源（大多免费）</a><ul><li><a href="#1-git">1. GIT</a></li><li><a href="#2-learn-one-programming-language">2. 学习一门编程语言</a></li><li><a href="#3-learn-linux--scripting">3. 学习 Linux 与脚本编程</a></li><li><a href="#4-learn-networking--security">4. 学习网络与安全</a></li><li><a href="#5-learn-server-management">5. 学习服务器管理</a></li><li><a href="#6-learn-containers">6. 学习容器</a></li><li><a href="#7-learn-container-orchestration">7. 学习容器编排</a></li><li><a href="#8-learn-infrastructure-as-a-code">8. 学习基础设施即代码</a></li><li><a href="#9-learn-cicd">9. 学习 CI/CD</a></li><li><a href="#10-learn-monitoring--observability">10. 学习监控与可观察性</a></li><li><a href="#11-learn-one-cloud-provider">11. 学习一种云服务提供商</a></li><li><a href="#12-learn-software-engineering-practices">12. 学习软件工程实践</a></li></ul></li><li><a href="#additional-resources">其他资源</a><ul><li><a href="#tools">工具</a></li><li><a href="#books">书籍</a></li></ul></li></ul><h2 id="devops-工程师学习资源-大多免费" tabindex="-1"><a class="header-anchor" href="#devops-工程师学习资源-大多免费"><span>DevOps 工程师学习资源（大多免费）</span></a></h2><h3 id="_1-git" tabindex="-1"><a class="header-anchor" href="#_1-git"><span>1. GIT</span></a></h3><p>你所有的资源（文件）将保存在 Git 仓库中。这些文件不仅是 <strong>应用程序代码</strong>，也是 <strong>基础设施即代码</strong>。</p><p><strong>Git</strong> 是一个免费的源代码管理工具，用于追踪源代码中的更改，允许多个开发者协同工作进行非线性开发。</p><p>最受欢迎的两个 Git 平台是 <strong>GitLab</strong> 和 <strong>GitHub</strong>。</p><p>你需要学习 Git 命令，比如 <code>git clone</code>、<code>git branch</code>、<code>git merge</code>，以及如何通过拉取请求协作开发项目。</p><p>学习资源：</p><ul><li><a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener noreferrer">Pro Git 书籍</a> 免费</li><li><a href="https://www.atlassian.com/git" target="_blank" rel="noopener noreferrer">Atlassian 学习 Git</a> 免费</li><li><a href="https://learngitbranching.js.org/" target="_blank" rel="noopener noreferrer">Learn Git Branching</a> 免费</li><li><a href="https://www.codecademy.com/learn/learn-git" target="_blank" rel="noopener noreferrer">CodeAcademy 学习 Git &amp; GitHub</a> 免费</li><li><a href="https://gitexplorer.com/" target="_blank" rel="noopener noreferrer">Git Command Explorer</a> 免费</li><li><a href="https://gitimmersion.com/index.html" target="_blank" rel="noopener noreferrer">Git Immersion</a> 免费</li><li><a href="http://marklodato.github.io/visual-git-guide/index-en.html" target="_blank" rel="noopener noreferrer">A Visual Git Reference</a> 免费</li></ul><h3 id="_2-学习一门编程语言" tabindex="-1"><a class="header-anchor" href="#_2-学习一门编程语言"><span>2. 学习一门编程语言</span></a></h3><p>作为一名工程师，建议至少掌握一种编程语言，用于编写 <strong>自动化脚本</strong>。</p><p>一些适合 DevOps 的流行编程语言包括 <strong>Python、Go 和 JavaScript</strong>。</p><p>Python 是一门多范式语言。作为一种解释型语言，代码在编写后会立即执行，其语法允许以不同方式编写代码。</p><p><strong>Python</strong> 常常被推荐作为新手程序员的第一门语言，因为它注重可读性、一致性和易用性。</p><p>在这里，你需要学习编程语言的基本概念，如语法、if/else 语句、循环、数据结构等。</p><p>学习资源：</p><ul><li><a href="https://automatetheboringstuff.com/" target="_blank" rel="noopener noreferrer">《自动化无聊的事情》书籍</a> 免费</li><li><a href="https://ehmatthes.github.io/pcc/" target="_blank" rel="noopener noreferrer">《Python 编程快速入门》</a> 免费</li><li><a href="https://javascript.info/" target="_blank" rel="noopener noreferrer">《现代 JavaScript 教程》</a> 免费</li><li><a href="https://www.youtube.com/watch?v=hdI2bqOjy3c" target="_blank" rel="noopener noreferrer">《JavaScript 初学者快速教程》</a> 免费</li><li><a href="https://eloquentjavascript.net/" target="_blank" rel="noopener noreferrer">《高效 JavaScript》第三版</a>，Marjin Haverbeke 免费书籍</li><li><a href="https://gobyexample.com/" target="_blank" rel="noopener noreferrer">Go 示例教程</a> 免费</li></ul><h3 id="_3-学习-linux-与脚本编程" tabindex="-1"><a class="header-anchor" href="#_3-学习-linux-与脚本编程"><span>3. 学习 Linux 与脚本编程</span></a></h3><p>操作系统作为计算机用户与硬件之间的桥梁，旨在提供一个用户可以方便有效地运行程序的环境。</p><p>由于大多数服务器使用 <strong>Linux 操作系统</strong>，你需要熟悉 Linux 及其命令行界面（CLI）。</p><p>一个易于入门的发行版是 <strong>Ubuntu</strong>。</p><p>此外，你还需要学习 <strong>脚本编程</strong>，以便自动化开发和运维任务。</p><p>在这里，你可以学习特定于操作系统的语言，如 <strong>Bash 或 Powershell</strong>，也可以选择跨平台的语言，如 Python 或 Go。</p><p>学习资源：</p><ul><li><a href="https://www.tutorialspoint.com/operating_system/os_overview.htm" target="_blank" rel="noopener noreferrer">操作系统概述</a> 免费</li><li><a href="https://www.shellscript.sh/" target="_blank" rel="noopener noreferrer">Shell 脚本教程</a> 免费</li><li><a href="https://www.guru99.com/powershell-tutorial.html" target="_blank" rel="noopener noreferrer">PowerShell 初学者教程：学习 PowerShell 脚本编程</a> 免费</li><li><a href="https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html" target="_blank" rel="noopener noreferrer">Bash 参考手册</a> 免费</li><li><a href="https://itsfoss.com/getting-started-with-ubuntu/" target="_blank" rel="noopener noreferrer">终极指南：开始使用 Ubuntu</a> 免费</li><li><a href="https://docs.freebsd.org/en/books/handbook/" target="_blank" rel="noopener noreferrer">FreeBSD 手册</a> 免费</li><li><a href="https://www.freecodecamp.org/news/the-linux-commands-handbook/" target="_blank" rel="noopener noreferrer">Linux 命令手册</a> 免费</li></ul><h3 id="_4-学习网络与安全" tabindex="-1"><a class="header-anchor" href="#_4-学习网络与安全"><span>4. 学习网络与安全</span></a></h3><p><strong>网络协议</strong> 是一套确定数据如何在同一网络中不同设备之间传输的规则。它使连接的设备能够相互通信，而不管它们的内部流程、结构或设计有何不同。</p><p>在这一部分，你需要了解网络是如何工作的，如何配置 <strong>防火墙</strong>，理解 <strong>DNS</strong> 的工作原理，<strong>OSI 模型</strong>，IP 地址，端口等。</p><p>学习资源：</p><ul><li><a href="https://www.cloudflare.com/en-gb/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener noreferrer">OSI 模型解释</a> 免费</li><li><a href="https://www.amazon.com/Computer-Networking-Top-Down-Approach-7th/dp/0133594149" target="_blank" rel="noopener noreferrer">计算机网络：自顶向下的方法</a> 书籍 <a href="https://www.youtube.com/playlist?list=PLByK_3hwzY3Tysh-SY9MKZhMm9wIfNOas" target="_blank" rel="noopener noreferrer">视频内容</a> 视频</li><li><a href="https://www.pluralsight.com/courses/tcpip-networking-it-pros" target="_blank" rel="noopener noreferrer">TCP/IP 和网络基础知识：为 IT 专业人员</a> Pluralsight 课程</li><li><a href="https://www.udemy.com/course/devsecops/" target="_blank" rel="noopener noreferrer">DevSecOps：掌握 CI/CD 安全 | DevOps 流水线</a> Udemy 课程</li><li><a href="https://www.amazon.com/Hands-Security-DevOps-continuous-deployment/dp/1788995503" target="_blank" rel="noopener noreferrer">在 DevOps 中的安全实践：确保持续的安全性、部署和交付</a> 书籍</li><li><a href="https://www.amazon.com/Securing-DevOps-Security-Julien-Vehent/dp/1617294136/" target="_blank" rel="noopener noreferrer">Securing DevOps: 安全云</a> 书籍</li></ul><h3 id="_5-学习服务器管理" tabindex="-1"><a class="header-anchor" href="#_5-学习服务器管理"><span>5. 学习服务器管理</span></a></h3><p>服务器管理包括所有必需的基础设施监控和维护，确保服务器能够可靠运行并保持最佳性能。<strong>有效的服务器管理策略</strong>的主要目标是：</p><ul><li>最小化服务器的慢响应和停机时间，同时最大化可靠性。</li><li>构建安全的服务器环境。</li><li>随着时间推移，根据组织的需求扩展服务器及相关操作。</li></ul><p>在这一部分，你需要了解 <strong>正向代理与反向代理</strong>、<strong>缓存服务器</strong>，以及如何操作 <strong>Web 服务器</strong>，如 Nginx、Apache 或 IIS。</p><p>学习资源：</p><ul><li><a href="https://www.cloudflare.com/en-gb/learning/cdn/glossary/reverse-proxy/" target="_blank" rel="noopener noreferrer">什么是反向代理？</a> 免费</li><li><a href="https://networkencyclopedia.com/cache-server/" target="_blank" rel="noopener noreferrer">缓存服务器</a> 免费</li><li><a href="https://oxylabs.io/blog/reverse-proxy-vs-forward-proxy" target="_blank" rel="noopener noreferrer">正向代理与反向代理：区别</a> 免费</li><li><a href="https://www.cloudflare.com/en-gb/learning/performance/what-is-load-balancing/" target="_blank" rel="noopener noreferrer">什么是负载均衡？</a> 免费</li><li><a href="https://www.checkpoint.com/cyber-hub/network-security/what-is-firewall/" target="_blank" rel="noopener noreferrer">什么是防火墙？</a> 免费</li><li><a href="https://www.freecodecamp.org/news/the-nginx-handbook/" target="_blank" rel="noopener noreferrer">NGINX 手册</a> 免费</li><li><a href="https://www.twaino.com/en/blog/website-creation/apache-server-2/" target="_blank" rel="noopener noreferrer">学习 Apache 服务器</a> 免费</li><li><a href="https://www.dnsstuff.com/windows-iis-server-tools" target="_blank" rel="noopener noreferrer">学习 IIS</a> 免费</li></ul><h3 id="_6-学习容器" tabindex="-1"><a class="header-anchor" href="#_6-学习容器"><span>6. 学习容器</span></a></h3><p><strong>容器</strong> 是一种标准的软件单元，打包了代码及其所有依赖，使得应用程序可以在不同的计算环境中快速、可靠地运行。</p><p><strong>Docker</strong> 是目前最流行的容器技术。</p><p>Docker 容器镜像是一个轻量级、独立的可执行软件包，包含了运行应用程序所需的一切：代码、运行时、系统工具、系统库和设置。</p><p>你需要了解如何运行容器，Docker 网络、卷、Dockerfile 以及如何使用 Docker-Compose 启动多个容器。</p><p>学习资源：</p><ul><li><a href="https://cloud.google.com/learn/what-are-containers" target="_blank" rel="noopener noreferrer">什么是容器？</a> 免费</li><li><a href="https://iximiuz.com/en/posts/container-learning-path/" target="_blank" rel="noopener noreferrer">从基础开始学习容器</a> 免费</li><li><a href="https://www.youtube.com/watch?v=3c-iBn73dDE" target="_blank" rel="noopener noreferrer">Docker 初学者教程 by TechWorld with Nana</a> 免费</li><li><a href="https://www.udemy.com/course/docker-mastery/" target="_blank" rel="noopener noreferrer">Docker 精通：从 Docker Captain 学 Kubernetes + Swarm</a> Udemy 课程</li><li><a href="https://www.redhat.com/en/topics/microservices/what-is-a-service-mesh" target="_blank" rel="noopener noreferrer">什么是服务网格？</a> 免费</li><li><a href="https://devopswithkubernetes.com/" target="_blank" rel="noopener noreferrer">使用 Kubernetes 进行 DevOps</a> 免费</li></ul><h3 id="_7-学习容器编排" tabindex="-1"><a class="header-anchor" href="#_7-学习容器编排"><span>7. 学习容器编排</span></a></h3><p>容器编排 <strong>自动化</strong> 容器的部署、管理、扩展和网络配置。</p><p>容器编排可用于任何使用容器的环境。它可以帮助你在不同的环境中部署相同的应用程序，而无需重新设计它。而且，容器中的微服务使得编排服务变得更容易，包括存储、网络和安全。</p><p>你需要了解 <strong>Kubernetes</strong> 的工作原理，以及如何管理 Kubernetes 集群并在其上部署应用程序。</p><p>学习资源：</p><ul><li><a href="https://www.youtube.com/watch?v=s_o8dwzRlu4" target="_blank" rel="noopener noreferrer">Kubernetes 初学者速成课程 by TechWorld with Nana</a> 免费</li><li><a href="https://thenewstack.io/primer-how-kubernetes-came-to-be-what-it-is-and-why-you-should-care/" target="_blank" rel="noopener noreferrer">Kubernetes 起源、发展及重要性</a> 文章</li><li><a href="https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/" target="_blank" rel="noopener noreferrer">认证 Kubernetes 管理员（CKA）与练习测试</a> Udemy 课程</li><li><a href="https://kodekloud.com/learning-path-kubernetes/" target="_blank" rel="noopener noreferrer">从零到精通 Kubernetes 课程 by KodeKloud</a> 课程</li><li><a href="https://gateway-api.sigs.k8s.io" target="_blank" rel="noopener noreferrer">了解何时使用集群服务、Ingress 或 API 网关</a> 免费</li><li><a href="https://linkerd.io/2.12/features/" target="_blank" rel="noopener noreferrer">了解服务网格解决的难题（使用抽象 smi-spec.io）</a> 免费</li><li><a href="https://cert-manager.io/docs/" target="_blank" rel="noopener noreferrer">学习如何自动化 TLS</a> 和 <a href="https://github.com/kubernetes-sigs/external-dns" target="_blank" rel="noopener noreferrer">DNS</a> 免费</li><li><a href="https://www.amazon.com/_/dp/1491935677?tag=oreilly20-20" target="_blank" rel="noopener noreferrer">Kubernetes 从入门到精通</a> 书籍</li><li><a href="https://azure.microsoft.com/en-us/resources/kubernetes-learning-path/" target="_blank" rel="noopener noreferrer">Kubernetes 学习路径 - 从零到英雄，微软 50 天学习计划</a> 免费</li></ul><h3 id="_8-学习基础设施即代码-iac" tabindex="-1"><a class="header-anchor" href="#_8-学习基础设施即代码-iac"><span>8. 学习基础设施即代码（IaC）</span></a></h3><p><strong>IaC</strong>，即基础设施即代码，指的是使用技术和工具来定义基础设施，通常采用 YAML 或 JSON 等标记语言。基础设施即代码使工程师能够自动化环境的设置和拆除，通过按需提供黄金复制环境，加速并降低部署风险。</p><p><strong>Terraform</strong> 是最流行的基础设施配置工具，还有其他工具，如 Ansible、Chef、Puppet 和 Vagrant。</p><p>你需要了解如何进行 <strong>基础设施配置</strong> 和 <strong>配置管理</strong>。</p><p>学习资源：</p><ul><li><a href="https://thenewstack.io/guis-cli-apis-learn-basic-terms-of-infrastructure-as-code/" target="_blank" rel="noopener noreferrer">GUI、CLI、API：学习基础设施即代码的基本术语</a> 免费</li><li><a href="https://learn.hashicorp.com/terraform" target="_blank" rel="noopener noreferrer">官方 Terraform 教程</a> 免费</li><li><a href="https://blog.gruntwork.io/a-comprehensive-guide-to-terraform-b3d32832baca" target="_blank" rel="noopener noreferrer">Terraform 综合指南</a> 免费</li><li><a href="https://medium.com/google-cloud/automate-terraform-documentation-like-a-pro-ed3e19998808" target="_blank" rel="noopener noreferrer">像专业人士一样自动化 Terraform 文档！</a> 免费</li><li><a href="https://thomasthornton.cloud/2022/06/02/writing-reusable-terraform-modules/" target="_blank" rel="noopener noreferrer">编写可复用的 Terraform 模块</a> 免费</li><li><a href="https://www.redhat.com/en/topics/microservices/what-is-istio" target="_blank" rel="noopener noreferrer">什么是 Istio？</a> 免费</li><li><a href="https://puppet.com/docs/puppet/latest/puppet_overview.html" target="_blank" rel="noopener noreferrer">Puppet 概览</a> 免费</li><li><a href="https://training.puppet.com/" target="_blank" rel="noopener noreferrer">Puppet 课程</a> 免费和付费</li><li><a href="https://docs.ansible.com/ansible/latest/getting_started/" target="_blank" rel="noopener noreferrer">Ansible 入门</a> 免费</li><li><a href="https://www.redhat.com/en/topics/automation/learning-ansible-tutorial" target="_blank" rel="noopener noreferrer">学习 Ansible 基础</a></li><li><a href="https://www.ansible.com/resources/get-started" target="_blank" rel="noopener noreferrer">开始使用 Red Hat Ansible</a> 免费和付费</li><li><a href="https://www.udemy.com/course/mastering-ansible/" target="_blank" rel="noopener noreferrer">精通 Ansible</a> Udemy 课程</li><li><a href="https://learn.chef.io/" target="_blank" rel="noopener noreferrer">学习 Chef</a> 免费</li></ul><h3 id="_9-学习-ci-cd" tabindex="-1"><a class="header-anchor" href="#_9-学习-ci-cd"><span>9. 学习 CI/CD</span></a></h3><p><strong>持续集成/持续部署 (CI/CD)</strong> 是一种通过将 <strong>自动化</strong> 引入到应用程序开发的各个阶段，从而频繁地向客户交付应用程序的方法。CI/CD 是解决集成新代码可能对开发和运维团队造成问题的解决方案。</p><p>CI/CD 引入了持续的自动化和 <strong>持续的</strong> 监控，贯穿于应用程序的整个生命周期，从集成和测试阶段到交付和部署阶段。这些连接的实践通常被称为 &quot;<strong>CI/CD 管道</strong>&quot;，并由开发和运维团队支持。</p><p>CI/CD 管道包含 <strong>不同阶段</strong>，例如：<strong>构建、测试和部署</strong>，但可能还包括更多的活动：</p><ul><li>从版本控制中检查代码并进行构建</li><li>设置不同类型的批准阶段</li><li>管理环境变量</li><li>重启服务</li><li>执行测试</li><li>以及更多...</li></ul><p>你需要了解如何设置 CI/CD 服务器，集成代码并自动触发管道，以及构建和包管理工具。</p><p>一些 <strong>流行的 CI/CD 工具</strong> 包括 Jenkins、TeamCity、CircleCI、Bamboo、GitLab 和 Azure DevOps。</p><p>学习资源：</p><ul><li><a href="https://martinfowler.com/articles/continuousIntegration.html" target="_blank" rel="noopener noreferrer">持续集成</a> 免费</li><li><a href="https://semaphoreci.com/blog/cicd-pipeline" target="_blank" rel="noopener noreferrer">CI/CD 管道：温和的入门介绍</a> 免费</li><li><a href="https://docs.gitlab.com/ee/tutorials/" target="_blank" rel="noopener noreferrer">GitLab 教程</a> 免费</li><li><a href="https://docs.gitlab.com/ee/ci/quick_start/" target="_blank" rel="noopener noreferrer">开始使用 GitLab CI/CD</a> 免费</li><li><a href="https://www.udemy.com/course/jenkins-from-zero-to-hero" target="_blank" rel="noopener noreferrer">Jenkins，从零到英雄：成为 DevOps Jenkins 大师</a> Udemy 课程</li><li><a href="https://learn.microsoft.com/en-us/users/githubtraining/collections/n5p4a5z7keznp5" target="_blank" rel="noopener noreferrer">学习 GitHub Actions</a> 免费</li><li><a href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">GitHub Actions 的工作流语法</a> 免费</li><li><a href="https://milan.milanovic.org/post/ci-cd-with-azure-devops-yaml/" target="_blank" rel="noopener noreferrer">学习 Azure DevOps</a> 免费</li><li><a href="https://dev.to/jphi_baconnais/series/12928" target="_blank" rel="noopener noreferrer">GitLab Cheatsheets</a> 免费</li></ul><h3 id="_10-学习监控与可观察性" tabindex="-1"><a class="header-anchor" href="#_10-学习监控与可观察性"><span>10. 学习监控与可观察性</span></a></h3><p>监控涉及从规划、开发、集成与测试、部署到运营的整个开发过程。它提供了对生产环境中应用程序、服务和基础设施状态的完整和 <strong>实时的视图</strong>。</p><p>当我们的软件处于 <strong>生产环境</strong> 中时，尤其需要跟踪我们基础设施和应用程序中的各种问题。</p><p>最流行的两种工具是 <strong>Prometheus</strong> 和 <strong>Grafana</strong>。</p><p>你需要了解如何设置监控并可视化数据。</p><p>学习资源：</p><ul><li><a href="https://devopscube.com/what-is-observability/" target="_blank" rel="noopener noreferrer">什么是可观察性？全面的初学者指南</a> 免费</li><li><a href="https://thenewstack.io/the-hows-whys-and-whats-of-monitoring-microservices/" target="_blank" rel="noopener noreferrer">监控微服务的方式、原因和背景</a> 免费</li><li><a href="https://www.atlassian.com/devops/devops-tools/devops-monitoring" target="_blank" rel="noopener noreferrer">DevOps 监控</a> 免费</li><li><a href="https://thenewstack.io/applying-basic-vs-advanced-monitoring-techniques/" target="_blank" rel="noopener noreferrer">应用基本与高级监控技术</a> 免费</li><li><a href="https://prometheus.io/docs/tutorials/getting_started/" target="_blank" rel="noopener noreferrer">学习 Prometheus</a> 免费</li><li><a href="https://grafana.com/tutorials/" target="_blank" rel="noopener noreferrer">学习 Grafana</a> 免费</li><li><a href="https://www.elastic.co/guide/index.html" target="_blank" rel="noopener noreferrer">Elastic Stack</a> 免费</li></ul><h3 id="_11-学习一个云服务提供商" tabindex="-1"><a class="header-anchor" href="#_11-学习一个云服务提供商"><span>11. 学习一个云服务提供商</span></a></h3><p>云服务提供商提供了一层 API 用于抽象基础设施，并根据安全性和计费边界进行资源配置。</p><p>虽然云服务运行在数据中心的服务器上，但通过巧妙的抽象，使得与单一 &quot;平台&quot; 或大型应用程序的交互成为可能。</p><p>通过云服务提供商快速配置、管理和保护资源的能力，是现代 DevOps 成功和复杂性的关键。</p><p>目前市场上最流行的云服务提供商是 <strong>AWS</strong>、<strong>Azure</strong> 和 <strong>Google Cloud</strong>。</p><p>你需要了解如何管理用户与管理、网络、虚拟服务器等。</p><p>学习资源：</p><ul><li><a href="https://learn.microsoft.com/en-us/certifications/exams/az-900" target="_blank" rel="noopener noreferrer">考试 AZ-900：微软 Azure 基础</a> 免费</li><li><a href="https://www.youtube.com/watch?v=NKEFWyqJ5XA" target="_blank" rel="noopener noreferrer">微软 Azure 基础认证课程（AZ-900）</a> 免费</li><li><a href="https://www.youtube.com/watch?v=NPEsD6n9A_I&amp;list=PLGjZwEtPN7j-Q59JYso3L4_yoCjj2syrM" target="_blank" rel="noopener noreferrer">AZ-900 | 微软 Azure 基础全课程、免费练习测试、网站与学习指南</a> 免费</li><li><a href="https://www.udemy.com/course/aws-certified-cloud-practitioner-new" target="_blank" rel="noopener noreferrer">终极 AWS 认证云从业者 - 2022</a> Udemy</li><li><a href="https://acloudguru.com/learning-paths/aws-developer" target="_blank" rel="noopener noreferrer">AWS 开发者 by A Cloud Guru</a> 学习路径</li></ul><h3 id="_12-学习软件工程实践" tabindex="-1"><a class="header-anchor" href="#_12-学习软件工程实践"><span>12. 学习软件工程实践</span></a></h3><p>作为一名 DevOps 工程师，你可能会与其他开发人员一起工作在敏捷环境中，例如 <strong>Scrum</strong>。</p><p>因此，了解 <strong>SDLC</strong> 的不同部分，以及其中使用的工具非常重要。</p><p>此外，了解 <strong>自动化测试</strong> 的工作原理也是一个好主意，因为你需要在 CI/CD 中设置它。</p><p>你需要了解 <strong>Scrum</strong>、<strong>SDLC</strong> 的所有阶段，以及 <strong>自动化测试</strong> 的工作原理等。</p><p>学习资源：</p><ul><li><a href="https://www.atlassian.com/agile/scrum" target="_blank" rel="noopener noreferrer">什么是 Scrum？</a> 免费</li><li><a href="https://www.scrum.org/resources/ways-learn-about-scrum" target="_blank" rel="noopener noreferrer">了解 Scrum 的方式</a> 免费</li><li><a href="https://www.guru99.com/software-development-life-cycle-tutorial.html" target="_blank" rel="noopener noreferrer">软件开发生命周期（SDLC）阶段与模型</a> 免费</li><li><a href="https://university.atlassian.com/student/page/1117976-the-beginner-s-guide-to-agile-in-jira-course-description?sid_i=8" target="_blank" rel="noopener noreferrer">Jira 中的敏捷初学者指南：课程介绍</a> 免费</li><li><a href="https://www.scaledagileframework.com/" target="_blank" rel="noopener noreferrer">学习 SAFe</a> 免费</li><li><a href="https://blog.testproject.io/2020/03/26/automation-testing-for-beginners-ultimate-guide/" target="_blank" rel="noopener noreferrer">学习自动化测试</a> 免费</li><li><a href="https://page.gitlab.com/resources-ebook-beginners-guide-devops.html" target="_blank" rel="noopener noreferrer">GitLab - DevOps 初学者指南</a> 免费</li><li><a href="https://www.scaler.com/blog/software-development-life-cycle/#common-sdlc-models" target="_blank" rel="noopener noreferrer">常见 SDLC 模型</a> 免费</li></ul><h2 id="额外资源" tabindex="-1"><a class="header-anchor" href="#额外资源"><span>额外资源</span></a></h2><h3 id="工具" tabindex="-1"><a class="header-anchor" href="#工具"><span>工具</span></a></h3><ul><li><strong>工作跟踪</strong>：<strong><a href="https://asana.com/" target="_blank" rel="noopener noreferrer">Asana</a></strong>，<strong><a href="https://monday.com/" target="_blank" rel="noopener noreferrer">Monday</a></strong>，<strong><a href="https://www.atlassian.com/software/jira" target="_blank" rel="noopener noreferrer">Jira</a></strong>，<strong><a href="https://trello.com/" target="_blank" rel="noopener noreferrer">Trello</a></strong>，<strong><a href="https://azure.microsoft.com/en-au/products/devops/boards/" target="_blank" rel="noopener noreferrer">Azure Boards</a></strong>。</li><li><strong>源代码控制</strong>：<strong><a href="https://git-scm.com/" target="_blank" rel="noopener noreferrer">Git</a></strong>，<strong><a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a></strong>，<strong><a href="https://about.gitlab.com/" target="_blank" rel="noopener noreferrer">GitLab</a></strong>，<strong><a href="https://bitbucket.org/" target="_blank" rel="noopener noreferrer">BitBucket</a></strong>，<strong><a href="https://azure.microsoft.com/en-us/products/devops" target="_blank" rel="noopener noreferrer">Azure DevOps</a></strong>。</li><li><strong>CI/CD</strong>：<strong><a href="https://www.jenkins.io/" target="_blank" rel="noopener noreferrer">Jenkins</a></strong>，<strong><a href="https://www.jetbrains.com/teamcity/" target="_blank" rel="noopener noreferrer">Team City</a></strong>，<strong><a href="https://github.com/features/actions" target="_blank" rel="noopener noreferrer">Github Actions</a></strong>，<strong><a href="https://www.travis-ci.com/" target="_blank" rel="noopener noreferrer">Travis CI</a></strong>，<strong><a href="https://www.atlassian.com/software/bamboo" target="_blank" rel="noopener noreferrer">Bamboo</a></strong>，<strong><a href="https://circleci.com/" target="_blank" rel="noopener noreferrer">Circle CI</a></strong>，<strong><a href="https://azure.microsoft.com/en-us/products/devops/pipelines/" target="_blank" rel="noopener noreferrer">Azure Pipelines</a></strong>，<strong><a href="https://octopus.com/" target="_blank" rel="noopener noreferrer">Octopus Deploy</a></strong>，<strong><a href="https://www.harness.io/" target="_blank" rel="noopener noreferrer">Harness</a></strong>，<strong><a href="https://www.cloudbees.com/products/codeship" target="_blank" rel="noopener noreferrer">CloudBees CodeShip</a></strong>。</li><li><strong>源代码分析</strong>：<strong><a href="https://www.sonarsource.com/products/sonarqube/" target="_blank" rel="noopener noreferrer">SonarQube</a></strong>，<strong><a href="https://www.veracode.com/" target="_blank" rel="noopener noreferrer">Veracode</a></strong>。</li><li><strong>构件管理</strong>：<strong><a href="https://jfrog.com/artifactory/" target="_blank" rel="noopener noreferrer">Artifactory</a></strong>，<strong><a href="https://docs.docker.com/registry/" target="_blank" rel="noopener noreferrer">Docker 容器注册</a></strong>，<strong><a href="https://www.npmjs.com/" target="_blank" rel="noopener noreferrer">npm</a></strong>，<strong><a href="https://yarnpkg.com/" target="_blank" rel="noopener noreferrer">Yarn</a></strong>，<strong><a href="https://www.nuget.org/" target="_blank" rel="noopener noreferrer">NuGet</a></strong>。</li><li><strong>配置管理</strong>：<strong><a href="https://www.terraform.io/" target="_blank" rel="noopener noreferrer">Terraform</a></strong>，<strong><a href="https://www.ansible.com/" target="_blank" rel="noopener noreferrer">Ansible</a></strong>，<strong><a href="https://www.puppet.com/" target="_blank" rel="noopener noreferrer">Puppet</a></strong>，<strong><a href="https://www.chef.io/" target="_blank" rel="noopener noreferrer">Chef</a></strong>。</li><li><strong>容器编排</strong>：<strong><a href="https://www.docker.com/" target="_blank" rel="noopener noreferrer">Docker</a></strong>，<strong><a href="https://kubernetes.io/" target="_blank" rel="noopener noreferrer">Kubernetes</a></strong>，<strong><a href="https://www.redhat.com/en/technologies/cloud-computing/openshift" target="_blank" rel="noopener noreferrer">Red Hat OpenShift</a></strong>。</li><li><strong>监控</strong>：<strong><a href="https://prometheus.io/" target="_blank" rel="noopener noreferrer">Prometheus</a></strong>，<strong><a href="https://grafana.com/" target="_blank" rel="noopener noreferrer">Grafana</a></strong>，<strong><a href="https://www.splunk.com/" target="_blank" rel="noopener noreferrer">Splunk</a></strong>，<strong><a href="https://www.dynatrace.com/" target="_blank" rel="noopener noreferrer">Dynatrace</a></strong>，<strong><a href="https://www.elastic.co/kibana/" target="_blank" rel="noopener noreferrer">Kibana</a></strong>。</li></ul><figure><img src="https://github.com/milanm/DevOps-Roadmap/blob/master/devops tools.png?raw=true" alt="DevOps 路线图" tabindex="0" loading="lazy"><figcaption>DevOps 路线图</figcaption></figure><h3 id="书籍" tabindex="-1"><a class="header-anchor" href="#书籍"><span>书籍</span></a></h3><ul><li><p><strong><a href="https://amzn.to/3IJPv0h" target="_blank" rel="noopener noreferrer">DevOps 手册：如何在技术组织中创建世界级的敏捷性、可靠性和安全性</a></strong>，Gene Kim, Patrick Debois, John Willis, Jez Humble</p><p>本书介绍了产品开发、质量保证、IT 运维和信息安全。对于新接触 DevOps 或想深入了解 DevOps 各个组成部分如何协同工作的人来说，是一本很好的读物。</p></li><li><p><strong><a href="https://amzn.to/3XRShoA" target="_blank" rel="noopener noreferrer">Accelerate: 精益软件与 DevOps 科学：构建与扩展高性能技术组织</a></strong>，Nicole Forsgren, Jez Humble, Gene Kim</p><p>本书介绍了如何衡量软件交付性能的发现和科学。对于向高层管理推广 DevOps，是一本极好的工具书。</p></li><li><p><strong><a href="https://amzn.to/3XRShoA" target="_blank" rel="noopener noreferrer">持续交付：通过构建、测试和部署自动化实现可靠的软件发布</a></strong>，Jez Humble, David Farley</p><p>本书介绍了自动化架构管理和数据迁移的概念。许多后来成为标准的部署流水线概念均来自这本书。涵盖了配置即代码、构建与部署自动化以及高效的测试技术等内容。</p></li><li><p><strong><a href="https://amzn.to/3Zb83fl" target="_blank" rel="noopener noreferrer">团队拓扑：为快速流动组织业务和技术团队</a></strong>，Matthew Skelton, Manuel Pais</p><p>本书讨论了如何组织团队，以便能够快速将价值传递给客户。它提供了四种基本的团队拓扑：流线型团队、赋能团队、复杂子系统团队和平台团队，可以根据不同的组织背景进行组合和调整。</p></li><li><p><strong><a href="https://amzn.to/3Za5aLH" target="_blank" rel="noopener noreferrer">有效的 DevOps：在大规模范围内构建协作、亲和力和工具文化</a></strong>，Jennifer Davis, Ryn Daniels</p><p>本书提供了有效的团队协调方法，展示了如何打破信息孤岛、监控关系，并修复团队之间和团队内部可能出现的误解。</p></li><li><p><strong><a href="https://amzn.to/3Z6VSQG" target="_blank" rel="noopener noreferrer">凤凰计划：关于 IT、DevOps 和帮助您的业务获胜的小说</a></strong>，Gene Kim, Kevin Behr, George Spafford</p><p>这是一本关于工作效率和沟通的经典小说。IT 工作就像是制造工厂的工作，必须建立系统来简化工作流程。它是一本值得一读的书。</p></li><li><p><strong><a href="https://sre.google/books/" target="_blank" rel="noopener noreferrer">站点可靠性工程</a></strong>，Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Richard Murphy</p><p>本书解释了 Google 开发、部署和监控的整个生命周期，以及如何管理世界上最大的软件系统（即 SRE）。任何自认为偏向 DevOps 中 &quot;Ops&quot; 方面的人员，或想加强 Dev 和 Ops 团队之间联系的人都应该阅读这本书。</p></li></ul><h2 id="devops-作为汉堡包-daab" tabindex="-1"><a class="header-anchor" href="#devops-作为汉堡包-daab"><span>DevOps 作为汉堡包（DaaB）</span></a></h2><p>我们甚至可以将这个路线图展示为一个汉堡包：)</p><figure><img src="https://github.com/milanm/DevOps-Roadmap/blob/master/DevOpsBurger.jpg?raw=true" alt="DevOps 作为汉堡包" tabindex="0" loading="lazy"><figcaption>DevOps 作为汉堡包</figcaption></figure><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>如果您认为路线图可以改进，请提交 PR 进行更新，并提交任何问题。同时，我会继续改进此路线图，您可能希望将此仓库收藏，以便以后访问。</p><h2 id="贡献" tabindex="-1"><a class="header-anchor" href="#贡献"><span>贡献</span></a></h2><ul><li>提交带有改进的 Pull Request</li><li>在问题中讨论想法</li><li>扩散消息</li></ul><h2 id="许可证" tabindex="-1"><a class="header-anchor" href="#许可证"><span>许可证</span></a></h2><figure><a href="https://opensource.org/licenses/Apache-2.0" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg" alt="许可证" tabindex="0" loading="lazy"></a><figcaption>许可证</figcaption></figure><h2 id="作者" tabindex="-1"><a class="header-anchor" href="#作者"><span>作者</span></a></h2><ul><li><a href="https://milan.milanovic.org" target="_blank" rel="noopener noreferrer">Dr. Milan Milanović</a> - 3MD 首席技术官</li><li><a href="https://romanoroth.com" target="_blank" rel="noopener noreferrer">Romano Roth</a> - Zühlke 首席 DevOps 专家</li></ul>',134)]))}const g=r(s,[["render",l]]),c=JSON.parse('{"path":"/posts/devops/2016-10-14-devops-05-road-map.html","title":"Devops-05-Devops roadMap","lang":"zh-CN","frontmatter":{"title":"Devops-05-Devops roadMap","date":"2016-10-14T00:00:00.000Z","categories":["Devops"],"tags":["devops","ci","sh"],"published":true,"description":"拓展阅读 Devops-01-devops 是什么？ Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件 代码质量管理 SonarQube-01-入门介绍 项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件 项目管理平台-01-Phabricator 入门介...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/devops/2016-10-14-devops-05-road-map.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Devops-05-Devops roadMap"}],["meta",{"property":"og:description","content":"拓展阅读 Devops-01-devops 是什么？ Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件 代码质量管理 SonarQube-01-入门介绍 项目管理平台-01-jira 入门介绍 缺陷跟踪管理系统，为针对缺陷管理、任务追踪和项目管理的商业性应用软件 项目管理平台-01-Phabricator 入门介..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/milanm/DevOps-Roadmap/blob/master/DevOps%20Roadmap.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"ci"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2016-10-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Devops-05-Devops roadMap\\",\\"image\\":[\\"https://github.com/milanm/DevOps-Roadmap/blob/master/DevOps%20Roadmap.png?raw=true\\",\\"https://github.com/milanm/DevOps-Roadmap/blob/master/devops%20tools.png?raw=true\\",\\"https://github.com/milanm/DevOps-Roadmap/blob/master/DevOpsBurger.jpg?raw=true\\",\\"https://img.shields.io/badge/License-Apache_2.0-blue.svg\\"],\\"datePublished\\":\\"2016-10-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":17.28,"words":5183},"filePathRelative":"posts/devops/2016-10-14-devops-05-road-map.md","localizedDate":"2016年10月14日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-01-overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Devops-01-devops 是什么？</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-02-jpom\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Devops-02-Jpom 简而轻的低侵入式在线构建、自动部署、日常运维、项目监控软件</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/10/14/devops-sonarqube-01-intro\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">代码质量管理 SonarQube-01-入门介绍</a></p>","autoDesc":true}');export{g as comp,c as data};
