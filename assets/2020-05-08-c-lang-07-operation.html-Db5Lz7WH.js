import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as d,o as a}from"./app-CEDSurVN.js";const n={};function i(s,t){return a(),l("div",null,t[0]||(t[0]=[d('<h1 id="c-运算符" tabindex="-1"><a class="header-anchor" href="#c-运算符"><span>C 运算符</span></a></h1><p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。</p><p>C 语言内置了丰富的运算符，并提供了以下类型的运算符：</p><ul><li><p>算术运算符</p></li><li><p>关系运算符</p></li><li><p>逻辑运算符</p></li><li><p>位运算符</p></li><li><p>赋值运算符</p></li><li><p>杂项运算符</p></li></ul><p>本章将逐一介绍算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符和其他运算符。</p><h1 id="算术运算符" tabindex="-1"><a class="header-anchor" href="#算术运算符"><span>算术运算符</span></a></h1><p>下表显示了 C 语言支持的所有算术运算符。</p><p>假设变量 A 的值为 10，变量 B 的值为 20，则：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">+</td><td style="text-align:left;">把两个操作数相加</td><td style="text-align:left;">A + B 将得到 30</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">从第一个操作数中减去第二个操作数</td><td style="text-align:left;">A - B 将得到 -10</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">把两个操作数相乘</td><td style="text-align:left;">A * B 将得到 200</td></tr><tr><td style="text-align:left;">/</td><td style="text-align:left;">分子除以分母</td><td style="text-align:left;">B / A 将得到 2</td></tr><tr><td style="text-align:left;">%</td><td style="text-align:left;">取模运算符，整除后的余数</td><td style="text-align:left;">B % A 将得到 0</td></tr><tr><td style="text-align:left;">++</td><td style="text-align:left;">自增运算符，整数值增加 1</td><td style="text-align:left;">A++ 将得到 11</td></tr><tr><td style="text-align:left;">--</td><td style="text-align:left;">自减运算符，整数值减少 1</td><td style="text-align:left;">A-- 将得到 9</td></tr></tbody></table><h1 id="关系运算符" tabindex="-1"><a class="header-anchor" href="#关系运算符"><span>关系运算符</span></a></h1><p>下表显示了 C 语言支持的所有关系运算符。假设变量 A 的值为 10，变量 B 的值为 20，则：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">==</td><td style="text-align:left;">检查两个操作数的值是否相等，如果相等则条件为真。</td><td style="text-align:left;">(A == B) 为假。</td></tr><tr><td style="text-align:left;">!=</td><td style="text-align:left;">检查两个操作数的值是否相等，如果不相等则条件为真。</td><td style="text-align:left;">(A != B) 为真。</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;">检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td><td style="text-align:left;">(A &gt; B) 为假。</td></tr><tr><td style="text-align:left;">=</td><td style="text-align:left;">检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td><td style="text-align:left;">(A &gt;= B) 为假。</td></tr><tr><td style="text-align:left;">&gt;</td><td style="text-align:left;"></td><td style="text-align:left;"></td></tr></tbody></table><p>二进制右移运算符。将一个数的各二进制位全部右移若干位，正数左补0，负数左补1，右边丢弃。</p><p>A &gt;&gt; 2 将得到 15，即为 0000 1111</p><h1 id="赋值运算符" tabindex="-1"><a class="header-anchor" href="#赋值运算符"><span>赋值运算符</span></a></h1><p>下表列出了 C 语言支持的赋值运算符：</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">=</td><td style="text-align:left;">简单的赋值运算符，把右边操作数的值赋给左边操作数</td><td style="text-align:left;">C = A + B 将把 A + B 的值赋给 C</td></tr><tr><td style="text-align:left;">+=</td><td style="text-align:left;">加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td><td style="text-align:left;">C += A 相当于 C = C + A</td></tr><tr><td style="text-align:left;">-=</td><td style="text-align:left;">减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td><td style="text-align:left;">C -= A 相当于 C = C - A</td></tr><tr><td style="text-align:left;">*=</td><td style="text-align:left;">乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td><td style="text-align:left;">C *= A 相当于 C = C * A</td></tr><tr><td style="text-align:left;">/=</td><td style="text-align:left;">除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td><td style="text-align:left;">C /= A 相当于 C = C / A</td></tr><tr><td style="text-align:left;">%=</td><td style="text-align:left;">求模且赋值运算符，求两个操作数的模赋值给左边操作数</td><td style="text-align:left;">C %= A 相当于 C = C % A</td></tr><tr><td style="text-align:left;">&gt;=</td><td style="text-align:left;">右移且赋值运算符</td><td style="text-align:left;">C &gt;&gt;= 2 等同于 C = C &gt;&gt; 2</td></tr><tr><td style="text-align:left;">&amp;=</td><td style="text-align:left;">按位与且赋值运算符</td><td style="text-align:left;">C &amp;= 2 等同于 C = C &amp; 2</td></tr><tr><td style="text-align:left;">^=</td><td style="text-align:left;">按位异或且赋值运算符</td><td style="text-align:left;">C ^= 2 等同于 C = C ^ 2</td></tr><tr><td style="text-align:left;">`</td><td style="text-align:left;">=`</td><td style="text-align:left;">按位或且赋值运算符</td></tr></tbody></table><h1 id="杂项运算符-sizeof-三元" tabindex="-1"><a class="header-anchor" href="#杂项运算符-sizeof-三元"><span>杂项运算符 sizeof &amp; 三元</span></a></h1><p>下表列出了 C 语言支持的其他一些重要的运算符，包括 sizeof 和 ? :。</p><table><thead><tr><th style="text-align:left;">运算符</th><th style="text-align:left;">描述</th><th style="text-align:left;">实例</th></tr></thead><tbody><tr><td style="text-align:left;">sizeof()</td><td style="text-align:left;">返回变量的大小。</td><td style="text-align:left;">sizeof(a) 将返回 4，其中 a 是整数。</td></tr><tr><td style="text-align:left;">&amp;</td><td style="text-align:left;">返回变量的地址。</td><td style="text-align:left;"><code>&amp;a;</code> 将给出变量的实际地址。</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">指向一个变量。</td><td style="text-align:left;">*a; 将指向一个变量。</td></tr><tr><td style="text-align:left;">? :</td><td style="text-align:left;">条件表达式</td><td style="text-align:left;">如果条件为真 ? 则值为 X : 否则值为 Y</td></tr></tbody></table><h1 id="c-中的运算符优先级" tabindex="-1"><a class="header-anchor" href="#c-中的运算符优先级"><span>C 中的运算符优先级</span></a></h1><p>运算符的优先级确定表达式中项的组合。</p><p>这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级。</p><p>例如，乘除运算符具有比加减运算符更高的优先级。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><p>例如 x = 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。</p><p>下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。</p><p>ps: 优先级不用去记忆，你可以使用 <code>()</code> 来进行处理，查表即可。</p><p>在表达式中，较高优先级的运算符会优先被计算。</p><table><thead><tr><th style="text-align:left;">类别</th><th style="text-align:left;">运算符</th><th style="text-align:left;">结合性</th></tr></thead><tbody><tr><td style="text-align:left;">后缀</td><td style="text-align:left;">() [] -&gt; . ++ - -</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">一元</td><td style="text-align:left;">+ - ! ~ ++ - - (type)* &amp; sizeof</td><td style="text-align:left;">从右到左</td></tr><tr><td style="text-align:left;">乘除</td><td style="text-align:left;">* / %</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">加减</td><td style="text-align:left;">+ -</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">移位</td><td style="text-align:left;">&gt;</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">关系</td><td style="text-align:left;">&gt;=</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">相等</td><td style="text-align:left;">== !=</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">位与 AND</td><td style="text-align:left;">&amp;</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">位异或 XOR</td><td style="text-align:left;">^</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">位或 OR</td><td style="text-align:left;">`</td><td style="text-align:left;">`</td></tr><tr><td style="text-align:left;">逻辑与 AND</td><td style="text-align:left;">&amp;&amp;</td><td style="text-align:left;">从左到右</td></tr><tr><td style="text-align:left;">逻辑或 OR</td><td style="text-align:left;">`</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">条件</td><td style="text-align:left;">?:</td><td style="text-align:left;">从右到左</td></tr><tr><td style="text-align:left;">赋值</td><td style="text-align:left;">`= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^=</td><td style="text-align:left;">=`</td></tr><tr><td style="text-align:left;">逗号</td><td style="text-align:left;">,</td><td style="text-align:left;">从左到右</td></tr></tbody></table>',30)]))}const f=e(n,[["render",i]]),y=JSON.parse('{"path":"/posts/C/2020-05-08-c-lang-07-operation.html","title":"C语言学习笔记-07-运算符","lang":"zh-CN","frontmatter":{"title":"C语言学习笔记-07-运算符","date":"2020-05-08T00:00:00.000Z","categories":["C"],"tags":["c","lang","sf"],"published":true,"description":"C 运算符 运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。 C 语言内置了丰富的运算符，并提供了以下类型的运算符： 算术运算符 关系运算符 逻辑运算符 位运算符 赋值运算符 杂项运算符 本章将逐一介绍算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符和其他运算符。 算术运算符 下表显示了 C 语言支持的所有算术运算符。 假设变量 A 的值...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/C/2020-05-08-c-lang-07-operation.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"C语言学习笔记-07-运算符"}],["meta",{"property":"og:description","content":"C 运算符 运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。 C 语言内置了丰富的运算符，并提供了以下类型的运算符： 算术运算符 关系运算符 逻辑运算符 位运算符 赋值运算符 杂项运算符 本章将逐一介绍算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符和其他运算符。 算术运算符 下表显示了 C 语言支持的所有算术运算符。 假设变量 A 的值..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"c"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"sf"}],["meta",{"property":"article:published_time","content":"2020-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C语言学习笔记-07-运算符\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":6.28,"words":1883},"filePathRelative":"posts/C/2020-05-08-c-lang-07-operation.md","localizedDate":"2020年5月8日","excerpt":"\\n<p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。</p>\\n<p>C 语言内置了丰富的运算符，并提供了以下类型的运算符：</p>\\n<ul>\\n<li>\\n<p>算术运算符</p>\\n</li>\\n<li>\\n<p>关系运算符</p>\\n</li>\\n<li>\\n<p>逻辑运算符</p>\\n</li>\\n<li>\\n<p>位运算符</p>\\n</li>\\n<li>\\n<p>赋值运算符</p>\\n</li>\\n<li>\\n<p>杂项运算符</p>\\n</li>\\n</ul>\\n<p>本章将逐一介绍算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符和其他运算符。</p>\\n<h1>算术运算符</h1>\\n<p>下表显示了 C 语言支持的所有算术运算符。</p>","autoDesc":true}');export{f as comp,y as data};
