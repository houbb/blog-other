import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as i,o as a}from"./app-CEDSurVN.js";const l={};function p(t,s){return a(),e("div",null,s[0]||(s[0]=[i(`<h1 id="uml" tabindex="-1"><a class="header-anchor" href="#uml"><span>UML</span></a></h1><p>统一建模语言（UML）是一种标准的建模语言，用于可视化、指定、构造和文档化软件系统的各个方面。</p><blockquote><p><a href="http://www.uml.org.cn" target="_blank" rel="noopener noreferrer">UML 中文版</a></p></blockquote><h1 id="常见的图" tabindex="-1"><a class="header-anchor" href="#常见的图"><span>常见的图</span></a></h1><h2 id="用例图-usecase" tabindex="-1"><a class="header-anchor" href="#用例图-usecase"><span>用例图（UseCase）</span></a></h2><p>使用ASCII字符画出用例图是一种简单的方式来表示系统的功能需求和用户交互。</p><p>下面是一个简单的用例图示例，它展示了一个在线图书馆系统的几个关键用例：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+-------------------+               +------------------------+</span></span>
<span class="line"><span>|    用户 (User)     |               |   在线图书馆系统        |</span></span>
<span class="line"><span>|                   |               |   (Online Library System)|</span></span>
<span class="line"><span>+-------------------+               +------------------------+</span></span>
<span class="line"><span>     | 搜索图书       |               | 登录系统               |</span></span>
<span class="line"><span>     |----------------&gt;|               ||               ||               ||               ||               | |   选择商品 (Select) |</span></span>
<span class="line"><span>+-------------------+     +-------------------+</span></span>
<span class="line"><span>         |                            |</span></span>
<span class="line"><span>         V                            V</span></span>
<span class="line"><span>+-------------------+     +-------------------+</span></span>
<span class="line"><span>|   登录账户 (Login) |     |   添加到购物车 (Add) |</span></span>
<span class="line"><span>+-------------------+     +-------------------+</span></span>
<span class="line"><span>         |                            |</span></span>
<span class="line"><span>         V                            V</span></span>
<span class="line"><span>+-------------------+     +-------------------+</span></span>
<span class="line"><span>|   确认订单 (Confirm)| --&gt; |   选择支付方式 (Pay) |</span></span>
<span class="line"><span>+-------------------+     +-------------------+</span></span>
<span class="line"><span>         |                            |</span></span>
<span class="line"><span>         +------------+------------+</span></span>
<span class="line"><span>                      |</span></span>
<span class="line"><span>                      V</span></span>
<span class="line"><span>             +-------------------+</span></span>
<span class="line"><span>             |   订单完成 (Order Complete) |</span></span>
<span class="line"><span>             +-------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中：</p><ol><li><p>流程开始于“开始”节点，表示购物流程的启动。</p></li><li><p>用户首先需要“选择商品”，然后可以选择“登录账户”以便进行后续操作。</p></li><li><p>登录后，用户可以选择“添加到购物车”商品，或者直接“确认订单”。</p></li><li><p>在“确认订单”节点，用户需要选择一种“支付方式”来完成支付。</p></li><li><p>支付完成后，流程到达“订单完成”节点，表示购物流程结束。</p></li></ol><p>活动图使用不同的形状来表示不同类型的节点：</p><ul><li><p>圆角矩形（如“选择商品”、“登录账户”等）表示活动的执行。</p></li><li><p>箭头表示流程的流向。</p></li><li><p>菱形（如“确认订单”）表示决策节点，通常包含条件逻辑。</p></li><li><p>并行条（在本例中未展示）表示活动可以同时进行。</p></li><li><p>结束节点（如“订单完成”）表示流程的结束。</p></li></ul><h2 id="序列图-sequence" tabindex="-1"><a class="header-anchor" href="#序列图-sequence"><span>序列图（Sequence）</span></a></h2><p>它展示了一个简单的客户端-服务器通信场景：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>+----------------+     +----------------+     +---------------+</span></span>
<span class="line"><span>|   客户端 (Client) | --&gt; | 服务器 (Server) | --&gt; | 数据库 (DB)   |</span></span>
<span class="line"><span>+----------------+     +----------------+     +---------------+</span></span>
<span class="line"><span>         | 请求数据       |               |               |</span></span>
<span class="line"><span>         |-----------------&gt;| 处理请求       |               |</span></span>
<span class="line"><span>         |                 || 查询数据       |</span></span>
<span class="line"><span>         |                 |               |</span></span>
<span class="line"><span>    下载-&gt;定义:</span></span>
<span class="line"><span>    定义-&gt;使用:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener noreferrer">js-sequence-diagrams</a> 能够帮助你将文本转换成UML序列图。</p><p>而 <a href="http://flowchart.js.org/" target="_blank" rel="noopener noreferrer">flowchart</a> 则是另一个工具。</p><ul><li><p>下载</p><p><code>js-sequence-diagrams</code> 依赖于 <a href="https://github.com/DmitryBaranovskiy/raphael" target="_blank" rel="noopener noreferrer">Raphaël</a> 和 <a href="http://underscorejs.org/" target="_blank" rel="noopener noreferrer">Underscore.js</a>。</p></li><li><p>定义</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    标题: UML 测试</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    A-&gt;B: 正常线条</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    B--&gt;C: 虚线</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    C-&gt;&gt;D: 开放箭头</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    D--&gt;&gt;A: 虚线开放箭头</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>使用</p><ol><li>导入js文件</li></ol><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>在jQuery中定义这个：</li></ol><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UML, uml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sequenceDiagram</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">theme</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hand&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后你可以看到：</p><pre><code>标题: UML 测试
A-&gt;B: 正常线条
B--&gt;C: 虚线
C-&gt;&gt;D: 开放箭头
D--&gt;&gt;A: 虚线开放箭头
</code></pre></li></ul>`,18)]))}const c=n(l,[["render",p]]),h=JSON.parse('{"path":"/posts/Design/2017-01-02-design-tool-03-uml-intro.html","title":"UML-架构图入门介绍 starUML","lang":"zh-CN","frontmatter":{"title":"UML-架构图入门介绍 starUML","date":"2017-01-02T00:00:00.000Z","categories":["Design"],"tags":["design","uml","tool"],"published":true,"description":"UML 统一建模语言（UML）是一种标准的建模语言，用于可视化、指定、构造和文档化软件系统的各个方面。 UML 中文版 常见的图 用例图（UseCase） 使用ASCII字符画出用例图是一种简单的方式来表示系统的功能需求和用户交互。 下面是一个简单的用例图示例，它展示了一个在线图书馆系统的几个关键用例： 在这个例子中： 流程开始于“开始”节点，表示购物...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Design/2017-01-02-design-tool-03-uml-intro.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"UML-架构图入门介绍 starUML"}],["meta",{"property":"og:description","content":"UML 统一建模语言（UML）是一种标准的建模语言，用于可视化、指定、构造和文档化软件系统的各个方面。 UML 中文版 常见的图 用例图（UseCase） 使用ASCII字符画出用例图是一种简单的方式来表示系统的功能需求和用户交互。 下面是一个简单的用例图示例，它展示了一个在线图书馆系统的几个关键用例： 在这个例子中： 流程开始于“开始”节点，表示购物..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"design"}],["meta",{"property":"article:tag","content":"uml"}],["meta",{"property":"article:tag","content":"tool"}],["meta",{"property":"article:published_time","content":"2017-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML-架构图入门介绍 starUML\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-01-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":8.8,"words":2641},"filePathRelative":"posts/Design/2017-01-02-design-tool-03-uml-intro.md","localizedDate":"2017年1月2日","excerpt":"\\n<p>统一建模语言（UML）是一种标准的建模语言，用于可视化、指定、构造和文档化软件系统的各个方面。</p>\\n<blockquote>\\n<p><a href=\\"http://www.uml.org.cn\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">UML 中文版</a></p>\\n</blockquote>\\n<h1>常见的图</h1>\\n<h2>用例图（UseCase）</h2>\\n<p>使用ASCII字符画出用例图是一种简单的方式来表示系统的功能需求和用户交互。</p>\\n<p>下面是一个简单的用例图示例，它展示了一个在线图书馆系统的几个关键用例：</p>","autoDesc":true}');export{c as comp,h as data};
