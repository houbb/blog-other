import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-CEDSurVN.js";const h={};function l(t,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="定时执行" tabindex="-1"><a class="header-anchor" href="#定时执行"><span>定时执行</span></a></h1><p>我们经常需要定时执行一个任务。</p><p>在 python 中很多方式实现定时执行。</p><h2 id="python-官方库" tabindex="-1"><a class="header-anchor" href="#python-官方库"><span>python 官方库</span></a></h2><p>time 定时执行</p><p>shed 定时执行</p><p>threading里的timer,实现非阻塞型</p><h2 id="开源框架" tabindex="-1"><a class="header-anchor" href="#开源框架"><span>开源框架</span></a></h2><p>看了一下对开发者比较友好的框架。</p><p><a href="https://schedule.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer">schedule</a></p><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><p>windows、linux 系统自带的定时执行。</p><h1 id="time" tabindex="-1"><a class="header-anchor" href="#time"><span>time</span></a></h1><h2 id="入门例子" tabindex="-1"><a class="header-anchor" href="#入门例子"><span>入门例子</span></a></h2><ul><li>例子</li></ul><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">     print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>输出内容</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1</span></span>
<span class="line"><span>2</span></span>
<span class="line"><span>3</span></span>
<span class="line"><span>4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h2><p>这个例子虽然规定了多久执行一次，但是如果我想固定循环执行，就很不方便。</p><h1 id="sche" tabindex="-1"><a class="header-anchor" href="#sche"><span>sche</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>sched模块定义了一个实现通用事件调度程序的类：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sched.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">timefunc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time.monotonic, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">delayfunc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">time.sleep)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>scheduler类定义了调度事件的通用接口。</p><p>它需要两个函数来实际处理“外部世界” - timefunc应该可以在没有参数的情况下调用，并返回一个数字（“时间”，以任何单位表示）。</p><p>如果time.monotonic不可用，则timefunc默认为time.time。</p><p>delayfunc函数应该可以用一个参数调用，与timefunc的输出兼容，并且应该延迟那么多时间单位。</p><p>在每个事件运行后，还将使用参数0调用delayfunc，以允许其他线程有机会在多线程应用程序中运行。</p><h2 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h2><ul><li><a href="http://sche-test.py" target="_blank" rel="noopener noreferrer">sche-test.py</a></li></ul><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sched</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">s </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> sched.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">scheduler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(time.time, time.sleep)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> print_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;default&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;From print_time&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), a)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> print_some_times</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">enter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, print_time)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">enter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, print_time, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">argument</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;positional&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">enter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, print_time, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;keyword&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    s.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">print_some_times</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试日志</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>1555307543.8377874</span></span>
<span class="line"><span>From print_time 1555307548.8392546 keyword</span></span>
<span class="line"><span>From print_time 1555307548.8392546 positional</span></span>
<span class="line"><span>From print_time 1555307553.8393369 default</span></span>
<span class="line"><span>1555307553.8403316</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="缺点-1" tabindex="-1"><a class="header-anchor" href="#缺点-1"><span>缺点</span></a></h2><p>任务指定时候会阻塞主线程。</p><h1 id="threading-timer" tabindex="-1"><a class="header-anchor" href="#threading-timer"><span>threading.timer</span></a></h1><h2 id="简介-1" tabindex="-1"><a class="header-anchor" href="#简介-1"><span>简介</span></a></h2><p>此类表示仅在经过一定时间后才应运行的操作 - 计时器。 Timer是Thread的子类，因此也可以作为创建自定义线程的示例。</p><p>与线程一样，通过调用start()方法启动计时器。 通过调用cancel()方法可以停止计时器（在其动作开始之前）。</p><p>计时器在执行其操作之前等待的时间间隔可能与用户指定的时间间隔不完全相同。</p><ul><li>接口说明</li></ul><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">threading.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(interval, function, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建一个定时器，在经过间隔秒后，将使用参数args和关键字参数kwargs运行函数。</p><p>如果args为None（默认值），则将使用空列表。</p><p>如果kwargs为None（默认值），则将使用空的dict。</p><h2 id="例子-1" tabindex="-1"><a class="header-anchor" href="#例子-1"><span>例子</span></a></h2><ul><li><a href="http://timer-test.py" target="_blank" rel="noopener noreferrer">timer-test.py</a></li></ul><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># utf-8</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> threading </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Timer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> print_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">in_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;current time: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;; in time: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> in_time)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># timer run</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Start: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, print_time, {time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()}).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">Timer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, print_time, {time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()}).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;End: &quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试日志</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Start:  1555308384.7972178</span></span>
<span class="line"><span>End:  1555308384.8102322</span></span>
<span class="line"><span>current time:  1555308386.8022282 ; in time: 1555308384.798218</span></span>
<span class="line"><span>current time:  1555308388.8112411 ; in time: 1555308384.8012347</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可见，并没有阻塞主线程。</p><h2 id="缺点-2" tabindex="-1"><a class="header-anchor" href="#缺点-2"><span>缺点</span></a></h2><p>代码编写不是很利于人读写。</p><p>也没有达到指定时间定时执行的效果。</p><h1 id="schedule" tabindex="-1"><a class="header-anchor" href="#schedule"><span>schedule</span></a></h1><h2 id="简介-2" tabindex="-1"><a class="header-anchor" href="#简介-2"><span>简介</span></a></h2><p>用于定期作业的进程内调度程序，使用构建器模式进行配置。</p><p>Schedule允许您使用简单，人性化的语法以预定的时间间隔定期运行Python函数（或任何其他可调用函数）。</p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><h3 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>install</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip install schedule</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="demo" tabindex="-1"><a class="header-anchor" href="#demo"><span>demo</span></a></h3><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> schedule</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> schedule</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> job</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;I&#39;m working...&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).minutes.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().hour.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().day.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">at</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10:30&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().monday.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().wednesday.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">at</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;13:15&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">every</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().minute.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">at</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;:17&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(job)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">while</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    schedule.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">run_pending</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    time.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">sleep</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2018/02/14/python-41-time-41" target="_blank" rel="noopener noreferrer">time-时间暂定</a></p><h2 id="个人理解" tabindex="-1"><a class="header-anchor" href="#个人理解"><span>个人理解</span></a></h2><p>python 相对应的生态也比较完整，使用起来的方便程度也非常的好。</p><p>从某种角度来说，java 的定时库设计的并不友好，可以模仿类似的思想。</p><p>借鉴 api，开发一套对应的框架。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://www.cnblogs.com/xqnq2007/p/7930159.html" target="_blank" rel="noopener noreferrer">python定时执行方法</a></p><h2 id="sched" tabindex="-1"><a class="header-anchor" href="#sched"><span>sched</span></a></h2><p><a href="https://docs.python.org/3/library/sched.html" target="_blank" rel="noopener noreferrer">sched — Event scheduler</a></p><h2 id="timer" tabindex="-1"><a class="header-anchor" href="#timer"><span>timer</span></a></h2><p><a href="https://docs.python.org/3/library/threading.html#timer-objects" target="_blank" rel="noopener noreferrer">threading-timer</a></p><h2 id="开源框架-1" tabindex="-1"><a class="header-anchor" href="#开源框架-1"><span>开源框架</span></a></h2><p><a href="https://schedule.readthedocs.io/en/stable/" target="_blank" rel="noopener noreferrer">schedule</a></p>`,78)]))}const r=s(h,[["render",l]]),d=JSON.parse('{"path":"/posts/Lang/2018-02-15-python-43-schedule-43.html","title":"Python-43-schedule 定时执行","lang":"zh-CN","frontmatter":{"title":"Python-43-schedule 定时执行","date":"2018-02-14T00:00:00.000Z","categories":["Lang"],"tags":["python","python3","schedule","lang","sh"],"published":true,"description":"定时执行 我们经常需要定时执行一个任务。 在 python 中很多方式实现定时执行。 python 官方库 time 定时执行 shed 定时执行 threading里的timer,实现非阻塞型 开源框架 看了一下对开发者比较友好的框架。 schedule 其他 windows、linux 系统自带的定时执行。 time 入门例子 例子 输出内容 缺点...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Lang/2018-02-15-python-43-schedule-43.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Python-43-schedule 定时执行"}],["meta",{"property":"og:description","content":"定时执行 我们经常需要定时执行一个任务。 在 python 中很多方式实现定时执行。 python 官方库 time 定时执行 shed 定时执行 threading里的timer,实现非阻塞型 开源框架 看了一下对开发者比较友好的框架。 schedule 其他 windows、linux 系统自带的定时执行。 time 入门例子 例子 输出内容 缺点..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"python3"}],["meta",{"property":"article:tag","content":"schedule"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python-43-schedule 定时执行\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.22,"words":967},"filePathRelative":"posts/Lang/2018-02-15-python-43-schedule-43.md","localizedDate":"2018年2月14日","excerpt":"\\n<p>我们经常需要定时执行一个任务。</p>\\n<p>在 python 中很多方式实现定时执行。</p>\\n<h2>python 官方库</h2>\\n<p>time 定时执行</p>\\n<p>shed 定时执行</p>\\n<p>threading里的timer,实现非阻塞型</p>\\n<h2>开源框架</h2>\\n<p>看了一下对开发者比较友好的框架。</p>\\n<p><a href=\\"https://schedule.readthedocs.io/en/stable/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">schedule</a></p>\\n<h2>其他</h2>","autoDesc":true}');export{r as comp,d as data};
