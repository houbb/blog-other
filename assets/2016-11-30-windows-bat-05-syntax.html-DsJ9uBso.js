import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as t,o as a}from"./app-CEDSurVN.js";const l={};function n(o,i){return a(),e("div",null,i[0]||(i[0]=[t(`<p>通常，批处理文件的第一行通常包含以下命令。</p><h1 id="echo-命令" tabindex="-1"><a class="header-anchor" href="#echo-命令"><span>ECHO 命令</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>@echo off</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>默认情况下，批处理文件在运行时会显示其命令。这个第一个命令的目的是关闭此显示。命令 &quot;echo off&quot; 关闭整个脚本的显示，除了 &quot;echo off&quot; 命令本身。</p><p>前面的 &quot;at&quot; 符号 &quot;@&quot; 使该命令也适用于自身。</p><h1 id="文档-documentation" tabindex="-1"><a class="header-anchor" href="#文档-documentation"><span>文档 Documentation</span></a></h1><p>批处理文件通常还包含以 &quot;Rem&quot; 命令开头的行。这是一种输入注释和文档的方法。计算机会忽略 Rem 后面的任何内容。</p><p>对于复杂程度逐渐增加的批处理文件，这通常是一个好主意以添加注释。</p><h1 id="第一个批处理脚本程序" tabindex="-1"><a class="header-anchor" href="#第一个批处理脚本程序"><span>第一个批处理脚本程序</span></a></h1><p>让我们构建我们的简单的第一个批处理脚本程序。打开记事本并输入以下代码行。将文件保存为 “List.cmd”。</p><p>代码的功能如下 −</p><p>使用 echo off 命令确保在执行代码时不显示命令。</p><p>Rem 命令用于添加注释以说明这个批处理文件具体做了什么。</p><p>dir 命令用于获取位置 C:\\Program Files 的内容。</p><p>‘&gt;’ 命令用于将输出重定向到文件 C:\\lists.txt。</p><p>最后，echo 命令用于告知用户操作已完成。</p><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> off</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">Rem</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 这是用于列出目录 Program Files 中所有文件的操作</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">dir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;C:\\Program Files&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; C:\\lists.txt </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;程序已完成&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行以上命令时，C:\\Program Files 中文件的名称将被发送到文件 C:\\Lists.txt，并且在命令提示符中将显示消息 “程序已完成”。</p><h1 id="chat" tabindex="-1"><a class="header-anchor" href="#chat"><span>chat</span></a></h1><h2 id="介绍一下-bat-的基本语法" tabindex="-1"><a class="header-anchor" href="#介绍一下-bat-的基本语法"><span>介绍一下 bat 的基本语法</span></a></h2><p>批处理（Batch）文件是一种在Windows操作系统中自动执行一系列命令的脚本文件。</p><p>它们通常用于自动化重复性的任务。以下是批处理文件的一些基本语法和概念：</p><ol><li><p><strong>注释</strong>：</p><ul><li>以 <code>::</code> 或 <code>REM</code> 开头的行被视为注释，不会被执行。</li></ul><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">:: 这是一个注释</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">REM</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 这也是一个注释</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>命令回显</strong>：</p><ul><li><code>@echo off</code> 关闭命令的回显，使得批处理执行时不会显示每一条命令。</li><li><code>@echo on</code> 打开命令回显，显示执行的命令。</li></ul></li><li><p><strong>变量</strong>：</p><ul><li>使用 <code>set</code> 命令定义变量，如 <code>set var=somevalue</code>。</li><li>使用 <code>%var%</code> 引用变量的值。</li></ul></li><li><p><strong>条件语句</strong>：</p><ul><li><code>if</code> 语句用于执行条件性命令。</li><li>示例：<code>if &quot;%var%&quot;==&quot;value&quot; (echo var is value)</code></li></ul></li><li><p><strong>循环</strong>：</p><ul><li><code>for</code> 循环遍历集合或执行循环体多次。</li><li>示例：<div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> %%i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (*.txt) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    echo</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> %%i</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>函数</strong>：</p><ul><li>批处理没有真正的函数，但可以使用 <code>goto</code> 标签和 <code>call</code> 命令模拟函数行为。</li></ul></li><li><p><strong>标签（Goto Labels）</strong>：</p><ul><li>使用 <code>:label</code> 定义标签，然后用 <code>goto label</code> 跳转到该标签。</li></ul></li><li><p><strong>重定向</strong>：</p><ul><li><code>&gt;</code> 将命令的输出重定向到文件。</li><li><code>&gt;&gt;</code> 将输出追加到现有文件。</li></ul><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">dir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; list.txt</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">echo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Hello World &gt;&gt; output.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>管道</strong>：</p><ul><li><code>|</code> 将一个命令的输出作为另一个命令的输入。</li></ul><div class="language-bat line-numbers-mode" data-highlighter="shiki" data-ext="bat" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">dir</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">find</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;example&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>错误处理</strong>：</p><ul><li>使用 <code>errorlevel</code> 检查命令是否成功执行。</li></ul></li><li><p><strong>延迟变量扩展</strong>：</p><ul><li>在某些情况下，使用 <code>!var!</code> 代替 <code>%var%</code> 可以解决变量扩展的问题。</li></ul></li><li><p><strong>批处理参数</strong>：</p><ul><li><code>%1</code>、<code>%2</code>、... 表示批处理参数，类似于位置参数。</li></ul></li><li><p><strong>结束本地化变量</strong>：</p><ul><li>使用 <code>endlocal</code> 结束 <code>setlocal</code> 的作用域，通常与 <code>setlocal</code> 配对使用。</li></ul></li><li><p><strong>执行外部程序</strong>：</p><ul><li>可以直接在批处理文件中调用外部程序，如 <code>notepad.exe</code>。</li></ul></li><li><p><strong>批处理文件扩展名</strong>：</p><ul><li>默认的批处理文件扩展名是 <code>.bat</code> 或 <code>.cmd</code>。</li></ul></li><li><p><strong>退出批处理</strong>：</p><ul><li>使用 <code>exit</code> 退出批处理文件的执行。</li></ul></li></ol><p>这些是批处理文件的一些基本语法元素。编写批处理文件时，可以结合使用这些元素来创建复杂的自动化脚本。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://www.tutorialspoint.com/batch_script/batch_script_syntax.htm" target="_blank" rel="noopener noreferrer">https://www.tutorialspoint.com/batch_script/batch_script_syntax.htm</a></p>`,26)]))}const d=s(l,[["render",n]]),p=JSON.parse('{"path":"/posts/windows/2016-11-30-windows-bat-05-syntax.html","title":"windows bat 脚本教程-05-syntax 语法","lang":"zh-CN","frontmatter":{"title":"windows bat 脚本教程-05-syntax 语法","date":"2016-11-30T00:00:00.000Z","categories":["Windows"],"tags":["windows","shell","bat"],"published":true,"description":"通常，批处理文件的第一行通常包含以下命令。 ECHO 命令 默认情况下，批处理文件在运行时会显示其命令。这个第一个命令的目的是关闭此显示。命令 \\"echo off\\" 关闭整个脚本的显示，除了 \\"echo off\\" 命令本身。 前面的 \\"at\\" 符号 \\"@\\" 使该命令也适用于自身。 文档 Documentation 批处理文件通常还包含以 \\"Rem\\" 命...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/windows/2016-11-30-windows-bat-05-syntax.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"windows bat 脚本教程-05-syntax 语法"}],["meta",{"property":"og:description","content":"通常，批处理文件的第一行通常包含以下命令。 ECHO 命令 默认情况下，批处理文件在运行时会显示其命令。这个第一个命令的目的是关闭此显示。命令 \\"echo off\\" 关闭整个脚本的显示，除了 \\"echo off\\" 命令本身。 前面的 \\"at\\" 符号 \\"@\\" 使该命令也适用于自身。 文档 Documentation 批处理文件通常还包含以 \\"Rem\\" 命..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"windows"}],["meta",{"property":"article:tag","content":"shell"}],["meta",{"property":"article:tag","content":"bat"}],["meta",{"property":"article:published_time","content":"2016-11-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"windows bat 脚本教程-05-syntax 语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-11-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.3,"words":990},"filePathRelative":"posts/windows/2016-11-30-windows-bat-05-syntax.md","localizedDate":"2016年11月30日","excerpt":"<p>通常，批处理文件的第一行通常包含以下命令。</p>\\n<h1>ECHO 命令</h1>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>@echo off</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,p as data};
