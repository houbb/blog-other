import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as n,o}from"./app-uJE4P3e0.js";const a={};function r(s,t){return o(),i("div",null,t[0]||(t[0]=[n('<h1 id="条件测试" tabindex="-1"><a class="header-anchor" href="#条件测试"><span>条件测试</span></a></h1><p>ExecutionCondition 定义用于编程、条件测试执行的扩展API。</p><p>执行条件对每个容器(例如，测试类)进行评估，以确定它包含的所有测试是否应该基于提供的ExtensionContext执行。<br> 类似地，对每个测试执行条件进行评估，以确定是否应该基于提供的ExtensionContext执行给定的测试方法。</p><p>当注册了多个执行条件扩展时，一旦其中一个条件返回为禁用状态，就会禁用容器或测试。因此，不能保证对条件进行评估，因为另一个扩展可能已经导致容器或测试被禁用。换句话说，评估工作类似于短路布尔或运算符。</p><p>具体示例请参见 <a href="https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/DisabledCondition.java" target="_blank" rel="noopener noreferrer">DisabledCondition</a>和@Disabled的源代码。</p><h2 id="去活化条件-deactivating-conditions" tabindex="-1"><a class="header-anchor" href="#去活化条件-deactivating-conditions"><span>去活化条件(Deactivating Conditions)</span></a></h2><p>有时，运行测试套件而没有激活某些条件是有用的。例如，您可能希望运行测试，即使这些测试是用@禁用的，以便查看它们是否仍然被破坏。<br> 为此，只需为 <code>junit.jupiter.conditions.deactivate</code> 配置参数提供一个模式，以指定应该停用哪些条件(例如:对于当前的测试运行，不进行计算。该模式可以作为一个JVM系统属性提供，在LauncherDiscoveryRequest中作为配置参数传递给启动器，或者通过JUnit平台配置文件(参见配置参数获取详细信息)。</p><p>例如，要停用JUnit的 <code>@Disabled</code> 条件，可以使用以下系统属性启动JVM。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>-Djunit.jupiter.conditions.deactivate=org.junit.*DisabledCondition</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="正则匹配语法" tabindex="-1"><a class="header-anchor" href="#正则匹配语法"><span>正则匹配语法</span></a></h3><p>如果 <code>junit.jupiter.conditions.deactivate</code> 模式仅由星号(<code>*</code>)组成，则所有条件都将被禁用。</p><p>否则，模式将用于匹配每个已注册条件的全限定类名(FQCN)。</p><p>模式中的任何点(<code>.</code>)将与FQCN中的点(<code>.</code>)或美元符号(<code>$</code>)匹配。<br> 任何星号(<code>*</code>)都将与FQCN中的一个或多个字符匹配。模式中的所有其他字符将与FQCN进行一对一匹配。</p><blockquote><p>示例</p></blockquote><ul><li><p><code>*</code>: 所有情况下禁用</p></li><li><p><code>org.junit.*</code>: 禁用 <strong>org.junit</strong> 基本包和它的任何子包。</p></li><li><p><code>*.MyCondition</code>: 使简单类名正好为MyCondition的所有条件失效。</p></li><li><p><code>*System*</code>: 使简单类名包含System的所有条件失效</p></li><li><p><code>org.example.MyCondition</code>: 停用FQCN为org.example.MyCondition的条件。</p></li></ul>',15)]))}const c=e(a,[["render",r]]),l=JSON.parse('{"path":"/posts/test/2018-06-25-junit5-20-ex-condition-test.html","title":"Junit5-20-Ex Condition Test","lang":"zh-CN","frontmatter":{"title":"Junit5-20-Ex Condition Test","date":"2018-06-26T00:00:00.000Z","categories":["Test"],"tags":["test","sh"],"published":true,"description":"条件测试 ExecutionCondition 定义用于编程、条件测试执行的扩展API。 执行条件对每个容器(例如，测试类)进行评估，以确定它包含的所有测试是否应该基于提供的ExtensionContext执行。 类似地，对每个测试执行条件进行评估，以确定是否应该基于提供的ExtensionContext执行给定的测试方法。 当注册了多个执行条件扩展时...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/test/2018-06-25-junit5-20-ex-condition-test.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Junit5-20-Ex Condition Test"}],["meta",{"property":"og:description","content":"条件测试 ExecutionCondition 定义用于编程、条件测试执行的扩展API。 执行条件对每个容器(例如，测试类)进行评估，以确定它包含的所有测试是否应该基于提供的ExtensionContext执行。 类似地，对每个测试执行条件进行评估，以确定是否应该基于提供的ExtensionContext执行给定的测试方法。 当注册了多个执行条件扩展时..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-06-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Junit5-20-Ex Condition Test\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-06-26T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.96,"words":589},"filePathRelative":"posts/test/2018-06-25-junit5-20-ex-condition-test.md","localizedDate":"2018年6月26日","excerpt":"\\n<p>ExecutionCondition 定义用于编程、条件测试执行的扩展API。</p>\\n<p>执行条件对每个容器(例如，测试类)进行评估，以确定它包含的所有测试是否应该基于提供的ExtensionContext执行。<br>\\n类似地，对每个测试执行条件进行评估，以确定是否应该基于提供的ExtensionContext执行给定的测试方法。</p>\\n<p>当注册了多个执行条件扩展时，一旦其中一个条件返回为禁用状态，就会禁用容器或测试。因此，不能保证对条件进行评估，因为另一个扩展可能已经导致容器或测试被禁用。换句话说，评估工作类似于短路布尔或运算符。</p>\\n<p>具体示例请参见 <a href=\\"https://github.com/junit-team/junit5/blob/r5.2.0/junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/DisabledCondition.java\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DisabledCondition</a>和@Disabled的源代码。</p>","autoDesc":true}');export{c as comp,l as data};
