import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as s,o as a}from"./app-CEDSurVN.js";const l={};function n(d,t){return a(),e("div",null,t[0]||(t[0]=[s(`<h1 id="c-的令牌-tokens" tabindex="-1"><a class="header-anchor" href="#c-的令牌-tokens"><span>C 的令牌（Tokens）</span></a></h1><p>C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。</p><p>例如，下面的 C 语句包括五个令牌：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, World! </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这五个令牌分别是：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">printf</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, World! </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ps: 感觉这个翻译的比较生硬。估计是想表达几个组成部分吧。</p><h1 id="分号" tabindex="-1"><a class="header-anchor" href="#分号"><span>分号 ;</span></a></h1><p>在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。</p><p>它表明一个逻辑实体的结束。</p><p>例如，下面是两个不同的语句：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello, World! </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h1><p>C 语言有两种注释方式：</p><h2 id="单行注释" tabindex="-1"><a class="header-anchor" href="#单行注释"><span>单行注释</span></a></h2><p>以 <code>//</code> 开始的单行注释，这种注释可以单独占一行。</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 单行注释 */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 多行注释</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>/* */</code> 这种格式的注释可以单行或多行。</p><p>您不能在注释内嵌套注释，注释也不能出现在字符串或字符值中。</p><h1 id="标识符" tabindex="-1"><a class="header-anchor" href="#标识符"><span>标识符</span></a></h1><p>C 标识符是用来标识变量、函数，或任何其他用户自定义项目的名称。</p><p>一个标识符以字母 A-Z 或 a-z 或下划线 <code>_</code> 开始，后跟零个或多个字母、下划线和数字（0-9）。</p><p>C 标识符内不允许出现标点字符，比如 @、$ 和 %。</p><p>C 是区分大小写的编程语言。</p><p>因此，在 C 中，Manpower 和 manpower 是两个不同的标识符。</p><p>下面列出几个有效的标识符：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>mohd       zara    abc   move_name  a_123</span></span>
<span class="line"><span>myname50   _temp   j     a23b9      retVal</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>ps: 建议使用英文命名，有时候也可以使用拼音。</p><h1 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h1><p>下表列出了 C 中的保留字。</p><p>这些保留字不能作为常量名、变量名或其他标识符名称。</p><table><thead><tr><th style="text-align:left;">关键字</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;">auto</td><td style="text-align:left;">声明自动变量</td></tr><tr><td style="text-align:left;">break</td><td style="text-align:left;">跳出当前循环</td></tr><tr><td style="text-align:left;">case</td><td style="text-align:left;">开关语句分支</td></tr><tr><td style="text-align:left;">char</td><td style="text-align:left;">声明字符型变量或函数返回值类型</td></tr><tr><td style="text-align:left;">const</td><td style="text-align:left;">定义常量，如果一个变量被 const 修饰，那么它的值就不能再被改变</td></tr><tr><td style="text-align:left;">continue</td><td style="text-align:left;">结束当前循环，开始下一轮循环</td></tr><tr><td style="text-align:left;">default</td><td style="text-align:left;">开关语句中的&quot;其它&quot;分支</td></tr><tr><td style="text-align:left;">do</td><td style="text-align:left;">循环语句的循环体</td></tr><tr><td style="text-align:left;">double</td><td style="text-align:left;">声明双精度浮点型变量或函数返回值类型</td></tr><tr><td style="text-align:left;">else</td><td style="text-align:left;">条件语句否定分支（与 if 连用）</td></tr><tr><td style="text-align:left;">enum</td><td style="text-align:left;">声明枚举类型</td></tr><tr><td style="text-align:left;">extern</td><td style="text-align:left;">声明变量或函数是在其它文件或本文件的其他位置定义</td></tr><tr><td style="text-align:left;">float</td><td style="text-align:left;">声明浮点型变量或函数返回值类型</td></tr><tr><td style="text-align:left;">for</td><td style="text-align:left;">一种循环语句</td></tr><tr><td style="text-align:left;">goto</td><td style="text-align:left;">无条件跳转语句</td></tr><tr><td style="text-align:left;">if</td><td style="text-align:left;">条件语句</td></tr><tr><td style="text-align:left;">int</td><td style="text-align:left;">声明整型变量或函数</td></tr><tr><td style="text-align:left;">long</td><td style="text-align:left;">声明长整型变量或函数返回值类型</td></tr><tr><td style="text-align:left;">register</td><td style="text-align:left;">声明寄存器变量</td></tr><tr><td style="text-align:left;">return</td><td style="text-align:left;">子程序返回语句（可以带参数，也可不带参数）</td></tr><tr><td style="text-align:left;">short</td><td style="text-align:left;">声明短整型变量或函数</td></tr><tr><td style="text-align:left;">signed</td><td style="text-align:left;">声明有符号类型变量或函数</td></tr><tr><td style="text-align:left;">sizeof</td><td style="text-align:left;">计算数据类型或变量长度（即所占字节数）</td></tr><tr><td style="text-align:left;">static</td><td style="text-align:left;">声明静态变量</td></tr><tr><td style="text-align:left;">struct</td><td style="text-align:left;">声明结构体类型</td></tr><tr><td style="text-align:left;">switch</td><td style="text-align:left;">用于开关语句</td></tr><tr><td style="text-align:left;">typedef</td><td style="text-align:left;">用以给数据类型取别名</td></tr><tr><td style="text-align:left;">unsigned</td><td style="text-align:left;">声明无符号类型变量或函数</td></tr><tr><td style="text-align:left;">union</td><td style="text-align:left;">声明共用体类型</td></tr><tr><td style="text-align:left;">void</td><td style="text-align:left;">声明函数无返回值或无参数，声明无类型指针</td></tr><tr><td style="text-align:left;">volatile</td><td style="text-align:left;">说明变量在程序执行中可被隐含地改变</td></tr><tr><td style="text-align:left;">while</td><td style="text-align:left;">循环语句的循环条件</td></tr></tbody></table><h2 id="c99-新增关键字" tabindex="-1"><a class="header-anchor" href="#c99-新增关键字"><span>C99 新增关键字</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>_Bool	_Complex	_Imaginary	inline	restrict</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="c11-新增关键字" tabindex="-1"><a class="header-anchor" href="#c11-新增关键字"><span>C11 新增关键字</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>_Alignas	_Alignof	_Atomic	  _Generic	_Noreturn</span></span>
<span class="line"><span>_Static_assert	_Thread_local</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>ps: 无力吐槽，这几个关键字毫无美感可言。和以前的关键字毫无统一性。</p><h1 id="c-中的空格" tabindex="-1"><a class="header-anchor" href="#c-中的空格"><span>C 中的空格</span></a></h1><p>只包含空格的行，被称为空白行，可能带有注释，C 编译器会完全忽略它。</p><p>在 C 中，空格用于描述空白符、制表符、换行符和注释。</p><p>空格分隔语句的各个部分，让编译器能识别语句中的某个元素（比如 int）在哪里结束，下一个元素在哪里开始。</p><p>因此，在下面的语句中：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在这里，int 和 age 之间必须至少有一个空格字符（通常是一个空白符），这样编译器才能够区分它们。另一方面，在下面的语句中：</p><div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">fruit </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> apples </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> oranges;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   // 获取水果的总数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>fruit 和 =，或者 = 和 apples 之间的空格字符不是必需的，但是<strong>为了增强可读性，您可以根据需要适当增加一些空格。</strong></p><h1 id="在线工具" tabindex="-1"><a class="header-anchor" href="#在线工具"><span>在线工具</span></a></h1><p><a href="https://www.runoob.com/try/runcode.php?filename=helloworld&amp;type=c" target="_blank" rel="noopener noreferrer">在线工具</a></p>`,48)]))}const p=i(l,[["render",n]]),c=JSON.parse('{"path":"/posts/C/2020-05-08-c-lang-02-basic.html","title":"C 语言入门-02-基础语法","lang":"zh-CN","frontmatter":{"title":"C 语言入门-02-基础语法","date":"2020-05-08T00:00:00.000Z","categories":["C"],"tags":["c","lang","sh"],"published":true,"description":"C 的令牌（Tokens） C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。 例如，下面的 C 语句包括五个令牌： 这五个令牌分别是： ps: 感觉这个翻译的比较生硬。估计是想表达几个组成部分吧。 分号 ; 在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。 它表明一个逻辑实体的结束。 例如，下面是两...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/C/2020-05-08-c-lang-02-basic.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"C 语言入门-02-基础语法"}],["meta",{"property":"og:description","content":"C 的令牌（Tokens） C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。 例如，下面的 C 语句包括五个令牌： 这五个令牌分别是： ps: 感觉这个翻译的比较生硬。估计是想表达几个组成部分吧。 分号 ; 在 C 程序中，分号是语句结束符。也就是说，每个语句必须以分号结束。 它表明一个逻辑实体的结束。 例如，下面是两..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"c"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2020-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C 语言入门-02-基础语法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.85,"words":1155},"filePathRelative":"posts/C/2020-05-08-c-lang-02-basic.md","localizedDate":"2020年5月8日","excerpt":"\\n<p>C 程序由各种令牌组成，令牌可以是关键字、标识符、常量、字符串值，或者是一个符号。</p>\\n<p>例如，下面的 C 语句包括五个令牌：</p>\\n<div class=\\"language-c line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"c\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">printf</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"Hello, World! </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\\\n</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,c as data};
