import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a,b as e,d as s,e as h,w as o,r,o as p}from"./app-uJE4P3e0.js";const g={};function d(k,i){const t=r("RouteLink");return p(),l("div",null,[i[4]||(i[4]=a(`<h1 id="开源地址" tabindex="-1"><a class="header-anchor" href="#开源地址"><span>开源地址</span></a></h1><p><a href="https://github.com/iszhouhua/blog" target="_blank" rel="noopener noreferrer">https://github.com/iszhouhua/blog</a></p><h1 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h1><p>基于<a href="https://github.com/spring-projects/spring-boot" target="_blank" rel="noopener noreferrer">SpringBoot</a></p><p>搭建的开源个人博客系统，前台界面基于Hexo主题<a href="https://github.com/ZEROKISEKI/hexo-theme-gal" target="_blank" rel="noopener noreferrer">hexo-theme-gal</a></p><p>进行修改，管理后台界面基于<a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener noreferrer">vue-element-admin</a>进行修改。</p><p>技术栈：SpringBoot、Thymeleaf、MySQL、MyBatis-Plus、Lombok、Gson、caffeine、validation、Bootstrap、jQuery、FontAwesome、Jsoup……</p><p>博客运行效果示例：<a href="https://www.iszhouhua.com" target="_blank" rel="noopener noreferrer">https://www.iszhouhua.com</a></p><h2 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h2><p>对于不想自己配置代码运行环境（Java和Node）的同学，可以使用此方式一键运行，部署属于自己的博客。</p><p>请先参照 <a href="src/main/resources/application.yml">⚙️配置文件</a> 相关说明，配置好你自己的 <code>application.yml</code> 文件，然后使用以下命令启动 docker：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 拉取镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iszhouhua/blog:latest</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 运行镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> blog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8080:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/logs:/app/logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/upload:/app/upload</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/application.yml:/config/application.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> iszhouhua/blog:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果镜像拉取不下来，可以从阿里云镜像仓库中进行拉取，将<code>iszhouhua/blog</code>改为<code>registry.cn-shenzhen.aliyuncs.com/iszhouhua/blog</code>即可</p><p>注意：在 Windows 终端下需要将配置文件路径 <code>$(pwd)</code> 替换为绝对路径。</p><p>挂载目录的解释见<a href="#docker%E9%83%A8%E7%BD%B2">docker部署</a></p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><ol><li>下载本项目，并使用IDE打开</li><li>在mysql中新建数据库<code>blog</code><blockquote><p>现在运行项目会自动运行SQL脚本建表和插入初始数据</p></blockquote></li><li>修改<code>application-dev.yml</code>中的数据库配置信息</li><li>运行<code>BlogApplication.java</code>，启动项目</li><li>浏览器访问<code>http://127.0.0.1:8080/</code><blockquote><p>使用 Idea，Eclipse 等IDE运行需要安装Lombok插件，JDK版本要求1.8+</p></blockquote></li></ol><h3 id="管理管理" tabindex="-1"><a class="header-anchor" href="#管理管理"><span>管理管理</span></a></h3>`,18)),e("p",null,[i[1]||(i[1]=s("管理后台采用前后端分离的方式实现，源码位于")),i[2]||(i[2]=e("a",{href:"vue"},"vue",-1)),i[3]||(i[3]=s("文件夹下，如何运行方式见")),h(t,{to:"/posts/blogs/vue/"},{default:o(()=>i[0]||(i[0]=[s("vue/README.md")])),_:1})]),i[5]||(i[5]=a(`<p>部署</p><h3 id="jar部署" tabindex="-1"><a class="header-anchor" href="#jar部署"><span>jar部署</span></a></h3><p>配置好<code>application-prod.yml</code>中的配置信息，然后打包：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将打包好的<code>blog.jar</code>和<code>blog.sh</code>放到同一文件夹下，执行命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使脚本具有执行权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chmod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +x</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./blog.sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动项目</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./blog.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 或者直接使用sh命令运行脚本</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> blog.sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tomcat部署" tabindex="-1"><a class="header-anchor" href="#tomcat部署"><span>tomcat部署</span></a></h3><p>修改<code>application.yml</code>中<code>spring.profiles.active</code>为<code>prod</code>，并配置好<code>application-prod.yml</code>中的配置信息。</p><p>直接修改<code>pom.xml</code>中的打包方式为war后进行打包，或直接运行命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> war:war</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dmaven.test.skip=true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后将打包好的<code>blog.war</code>丢进tomcat中运行即可！</p><h3 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署"><span>docker部署</span></a></h3><p>配置好<code>application-prod.yml</code>中的配置信息，然后执行<code>build-docker.sh</code>：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># docker打包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build-docker.sh</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 新建挂载目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> logs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> upload</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 运行项目</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> blog</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 8080:8080</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/logs:/app/logs</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/upload:/app/upload</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> $(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">pwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/application.yml:/config/application.yml</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> blog</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>-v $(pwd)/application.yml:/config/application.yml: 挂载配置文件，<code>$(pwd)/application.yml</code>为你的配置文件所在目录</li><li>-v $(pwd)/logs:/app/logs: 挂载日志文件，不关心日志可不进行挂载</li><li>-v $(pwd)/upload:/app/upload 上传图片挂载，非本地存储无需挂载</li></ul><blockquote><p>注：build-docker.sh脚本会自动将vue代码也编译进docker镜像中，无需单独处理vue的内容</p></blockquote><h2 id="界面展示" tabindex="-1"><a class="header-anchor" href="#界面展示"><span>界面展示</span></a></h2><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508093436.png?raw=true" alt="1557279251039" tabindex="0" loading="lazy"><figcaption>1557279251039</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508095012.png?raw=true" alt="20190508095012" tabindex="0" loading="lazy"><figcaption>20190508095012</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508095714.png?raw=true" alt="20190508095714" tabindex="0" loading="lazy"><figcaption>20190508095714</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101138.png?raw=true" alt="20190508101138" tabindex="0" loading="lazy"><figcaption>20190508101138</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101254.png?raw=true" alt="20190508101254" tabindex="0" loading="lazy"><figcaption>20190508101254</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101400.png?raw=true" alt="20190508101400" tabindex="0" loading="lazy"><figcaption>20190508101400</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101440.png?raw=true" alt="20190508101440" tabindex="0" loading="lazy"><figcaption>20190508101440</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101544.png?raw=true" alt="20190508101544" tabindex="0" loading="lazy"><figcaption>20190508101544</figcaption></figure><figure><img src="https://github.com/iszhouhua/blog/raw/master/images/20190508101622.png?raw=true" alt="20190508101622" tabindex="0" loading="lazy"><figcaption>20190508101622</figcaption></figure><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://github.com/saysky/ForestBlog/blob/master/README.md" target="_blank" rel="noopener noreferrer">https://github.com/saysky/ForestBlog/blob/master/README.md</a></p>`,28))])}const m=n(g,[["render",d]]),b=JSON.parse('{"path":"/posts/blogs/2016-04-13-blog-opensource-04-blog.html","title":"blog opensource 开源博客-04-Blog 基于SpringBoot搭建的开源个人博客系统，模板引擎使用thymeleaf。项目后台部分采用前后端分离模式开发。前台使用 vue 和 element完成。","lang":"zh-CN","frontmatter":{"title":"blog opensource 开源博客-04-Blog 基于SpringBoot搭建的开源个人博客系统，模板引擎使用thymeleaf。项目后台部分采用前后端分离模式开发。前台使用 vue 和 element完成。","date":"2016-04-13T00:00:00.000Z","categories":["Blogs"],"tags":["hexo","blog","blog-engine","opensource"],"published":true,"description":"开源地址 https://github.com/iszhouhua/blog 简介 基于SpringBoot 搭建的开源个人博客系统，前台界面基于Hexo主题hexo-theme-gal 进行修改，管理后台界面基于vue-element-admin进行修改。 技术栈：SpringBoot、Thymeleaf、MySQL、MyBatis-Plus、Lom...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/blogs/2016-04-13-blog-opensource-04-blog.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"blog opensource 开源博客-04-Blog 基于SpringBoot搭建的开源个人博客系统，模板引擎使用thymeleaf。项目后台部分采用前后端分离模式开发。前台使用 vue 和 element完成。"}],["meta",{"property":"og:description","content":"开源地址 https://github.com/iszhouhua/blog 简介 基于SpringBoot 搭建的开源个人博客系统，前台界面基于Hexo主题hexo-theme-gal 进行修改，管理后台界面基于vue-element-admin进行修改。 技术栈：SpringBoot、Thymeleaf、MySQL、MyBatis-Plus、Lom..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://github.com/iszhouhua/blog/raw/master/images/20190508093436.png?raw=true"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"hexo"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"blog-engine"}],["meta",{"property":"article:tag","content":"opensource"}],["meta",{"property":"article:published_time","content":"2016-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"blog opensource 开源博客-04-Blog 基于SpringBoot搭建的开源个人博客系统，模板引擎使用thymeleaf。项目后台部分采用前后端分离模式开发。前台使用 vue 和 element完成。\\",\\"image\\":[\\"https://github.com/iszhouhua/blog/raw/master/images/20190508093436.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508095012.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508095714.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101138.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101254.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101400.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101440.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101544.png?raw=true\\",\\"https://github.com/iszhouhua/blog/raw/master/images/20190508101622.png?raw=true\\"],\\"datePublished\\":\\"2016-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":2.81,"words":843},"filePathRelative":"posts/blogs/2016-04-13-blog-opensource-04-blog.md","localizedDate":"2016年4月13日","excerpt":"\\n<p><a href=\\"https://github.com/iszhouhua/blog\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/iszhouhua/blog</a></p>\\n<h1>简介</h1>\\n<p>基于<a href=\\"https://github.com/spring-projects/spring-boot\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SpringBoot</a></p>\\n<p>搭建的开源个人博客系统，前台界面基于Hexo主题<a href=\\"https://github.com/ZEROKISEKI/hexo-theme-gal\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">hexo-theme-gal</a></p>","autoDesc":true}');export{m as comp,b as data};
