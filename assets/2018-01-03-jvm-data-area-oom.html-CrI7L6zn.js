import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as n}from"./app-uJE4P3e0.js";const o={};function i(p,a){return n(),t("div",null,a[0]||(a[0]=[r('<h1 id="运行时数据区" tabindex="-1"><a class="header-anchor" href="#运行时数据区"><span>运行时数据区</span></a></h1><figure><img src="https://raw.githubusercontent.com/houbb/resource/master/img/jvm/2018-01-03-jvm-rt-data-area.png" alt="2018-01-03-jvm-rt-data-area.png" tabindex="0" loading="lazy"><figcaption>2018-01-03-jvm-rt-data-area.png</figcaption></figure><blockquote><p>图片来源 <a href="https://www.cnblogs.com/zhouxuanyu/p/6942417.html" target="_blank" rel="noopener noreferrer">读《深入理解Java虚拟机》</a></p></blockquote><h2 id="程序计数器" tabindex="-1"><a class="header-anchor" href="#程序计数器"><span>程序计数器</span></a></h2><h2 id="java-虚拟机栈" tabindex="-1"><a class="header-anchor" href="#java-虚拟机栈"><span>Java 虚拟机栈</span></a></h2><h2 id="本地方法栈" tabindex="-1"><a class="header-anchor" href="#本地方法栈"><span>本地方法栈</span></a></h2><h2 id="java-堆" tabindex="-1"><a class="header-anchor" href="#java-堆"><span>Java 堆</span></a></h2><h2 id="方法区" tabindex="-1"><a class="header-anchor" href="#方法区"><span>方法区</span></a></h2><h2 id="运行时常量池" tabindex="-1"><a class="header-anchor" href="#运行时常量池"><span>运行时常量池</span></a></h2><h2 id="直接内存" tabindex="-1"><a class="header-anchor" href="#直接内存"><span>直接内存</span></a></h2>',10)]))}const c=e(o,[["render",i]]),h=JSON.parse('{"path":"/posts/Reading/2018-01-03-jvm-data-area-oom.html","title":"JVM-01 memory area & OOM","lang":"zh-CN","frontmatter":{"title":"JVM-01 memory area & OOM","date":"2018-01-03T00:00:00.000Z","categories":["Reading"],"tags":["java","reading"],"published":true,"description":"运行时数据区 2018-01-03-jvm-rt-data-area.png2018-01-03-jvm-rt-data-area.png 图片来源 读《深入理解Java虚拟机》 程序计数器 Java 虚拟机栈 本地方法栈 Java 堆 方法区 运行时常量池 直接内存","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/Reading/2018-01-03-jvm-data-area-oom.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"JVM-01 memory area & OOM"}],["meta",{"property":"og:description","content":"运行时数据区 2018-01-03-jvm-rt-data-area.png2018-01-03-jvm-rt-data-area.png 图片来源 读《深入理解Java虚拟机》 程序计数器 Java 虚拟机栈 本地方法栈 Java 堆 方法区 运行时常量池 直接内存"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/houbb/resource/master/img/jvm/2018-01-03-jvm-rt-data-area.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"reading"}],["meta",{"property":"article:published_time","content":"2018-01-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM-01 memory area & OOM\\",\\"image\\":[\\"https://raw.githubusercontent.com/houbb/resource/master/img/jvm/2018-01-03-jvm-rt-data-area.png\\"],\\"datePublished\\":\\"2018-01-03T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":0.28,"words":83},"filePathRelative":"posts/Reading/2018-01-03-jvm-data-area-oom.md","localizedDate":"2018年1月3日","excerpt":"\\n<figure><img src=\\"https://raw.githubusercontent.com/houbb/resource/master/img/jvm/2018-01-03-jvm-rt-data-area.png\\" alt=\\"2018-01-03-jvm-rt-data-area.png\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>2018-01-03-jvm-rt-data-area.png</figcaption></figure>\\n<blockquote>\\n<p>图片来源 <a href=\\"https://www.cnblogs.com/zhouxuanyu/p/6942417.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">读《深入理解Java虚拟机》</a></p>\\n</blockquote>","autoDesc":true}');export{c as comp,h as data};
