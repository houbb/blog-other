import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as n,o as a}from"./app-CEDSurVN.js";const t={};function p(l,s){return a(),e("div",null,s[0]||(s[0]=[n(`<h1 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试"><span>单元测试</span></a></h1><p>代码总会存在各种问题。</p><p>测试是必须的，其他</p><h1 id="pytest-使用入门" tabindex="-1"><a class="header-anchor" href="#pytest-使用入门"><span>PyTest 使用入门</span></a></h1><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>参考 <a href="https://houbb.github.io/2018/02/14/python-18-pip-18#%E5%AE%9E%E6%88%98%E4%BE%8B%E5%AD%90" target="_blank" rel="noopener noreferrer">Pip 安装 pytest</a></p><h2 id="快速开始" tabindex="-1"><a class="header-anchor" href="#快速开始"><span>快速开始</span></a></h2><ul><li>测试代码</li></ul><p>写一个测试代码</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># content of test_sample.py</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> inc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test_answer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    assert</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> inc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>执行测试</li></ul><p>命令行执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$   pytest test_sample.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行日志如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>=========================================================================== test session starts ============================================================================ platform win32 -- Python 3.7.3, pytest-4.4.0, py-1.8.0, pluggy-0.9.0</span></span>
<span class="line"><span>rootdir: D:\\python\\10-test\\pytest</span></span>
<span class="line"><span>collected 1 item</span></span>
<span class="line"><span></span></span>
<span class="line"><span>test_sample.py F                                                                                                                                                      [100%]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>================================================================================= FAILURES ================================================================================= _______________________________________________________________________________ test_answer ________________________________________________________________________________</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    def test_answer():</span></span>
<span class="line"><span>&gt;       assert inc(3) == 5</span></span>
<span class="line"><span>E       assert 4 == 5</span></span>
<span class="line"><span>E        +  where 4 = inc(3)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>test_sample.py:7: AssertionError</span></span>
<span class="line"><span>========================================================================= 1 failed in 0.06 seconds =========================================================================</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试多个测试用例" tabindex="-1"><a class="header-anchor" href="#测试多个测试用例"><span>测试多个测试用例</span></a></h2><p>pytest 会执行所有的 <code>test_*.py</code>/<code>*_test.py</code> 对应的 python 文件。</p><p>执行当前文件夹及其子文件夹。</p><h3 id="测试标准规则" tabindex="-1"><a class="header-anchor" href="#测试标准规则"><span>测试标准规则</span></a></h3><p>pytest实现以下标准测试发现：</p><p>如果未指定参数，则从testpath（如果已配置）或当前目录开始收集。 或者，命令行参数可以用于目录，文件名或节点ID的任意组合。</p><p>递归到目录中，除非它们与norecursedirs匹配。</p><p>在这些目录中，搜索由其测试包名称导入的 <code>test_*.py</code>/<code>*_test.py</code> 文件。</p><p>从这些文件中收集测试项目：</p><p>在课堂外测试前缀测试函数或方法</p><p>在测试前缀测试类中测试前缀测试函数或方法（没有<code>__init__</code>方法）</p><p>有关如何自定义测试发现的示例更改标准（Python）测试发现。</p><p>在Python模块中，pytest还使用标准的unittest.TestCase子类化技术发现测试。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><ul><li>关键词</li></ul><p>python unittest pytest</p><p><a href="https://testandcode.com/2" target="_blank" rel="noopener noreferrer">https://testandcode.com/2</a></p><ul><li>unittest</li></ul><p><a href="https://www.cnblogs.com/mapu/p/8549824.html" target="_blank" rel="noopener noreferrer">Python必会的单元测试框架 —— unittest</a></p><p><a href="https://segmentfault.com/a/1190000014847419" target="_blank" rel="noopener noreferrer">说说Python中的单元测试</a></p><p><a href="https://blog.csdn.net/u013783095/article/details/80341537" target="_blank" rel="noopener noreferrer">python接口测试学习（1）HTTP请求理论知识</a></p><p><a href="http://www.php.cn/python-tutorials-373157.html" target="_blank" rel="noopener noreferrer">Python中接口的实现实例</a></p>`,37)]))}const d=i(t,[["render",p]]),o=JSON.parse('{"path":"/posts/Lang/2018-02-14-python-19-test-19.html","title":"Python-19-单元测试 unittest pytest nose","lang":"zh-CN","frontmatter":{"title":"Python-19-单元测试 unittest pytest nose","date":"2018-02-14T00:00:00.000Z","categories":["Lang"],"tags":["python","lang","test","sh"],"published":true,"description":"单元测试 代码总会存在各种问题。 测试是必须的，其他 PyTest 使用入门 安装 参考 Pip 安装 pytest 快速开始 测试代码 写一个测试代码 执行测试 命令行执行 执行日志如下： 测试多个测试用例 pytest 会执行所有的 test_*.py/*_test.py 对应的 python 文件。 执行当前文件夹及其子文件夹。 测试标准规则 p...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Lang/2018-02-14-python-19-test-19.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Python-19-单元测试 unittest pytest nose"}],["meta",{"property":"og:description","content":"单元测试 代码总会存在各种问题。 测试是必须的，其他 PyTest 使用入门 安装 参考 Pip 安装 pytest 快速开始 测试代码 写一个测试代码 执行测试 命令行执行 执行日志如下： 测试多个测试用例 pytest 会执行所有的 test_*.py/*_test.py 对应的 python 文件。 执行当前文件夹及其子文件夹。 测试标准规则 p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"test"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python-19-单元测试 unittest pytest nose\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.6,"words":481},"filePathRelative":"posts/Lang/2018-02-14-python-19-test-19.md","localizedDate":"2018年2月14日","excerpt":"\\n<p>代码总会存在各种问题。</p>\\n<p>测试是必须的，其他</p>\\n<h1>PyTest 使用入门</h1>\\n<h2>安装</h2>\\n<p>参考 <a href=\\"https://houbb.github.io/2018/02/14/python-18-pip-18#%E5%AE%9E%E6%88%98%E4%BE%8B%E5%AD%90\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Pip 安装 pytest</a></p>\\n<h2>快速开始</h2>\\n<ul>\\n<li>测试代码</li>\\n</ul>\\n<p>写一个测试代码</p>\\n<div class=\\"language-py line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"py\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\"># content of test_sample.py</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">def</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> inc</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\\">x</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    return</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> x </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">+</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 1</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">def</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> test_answer</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">():</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">    assert</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#61AFEF\\"> inc</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">3</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 5</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,o as data};
