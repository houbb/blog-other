import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as s,o as n}from"./app-uJE4P3e0.js";const i={};function t(r,a){return n(),p("div",null,a[0]||(a[0]=[s(`<h1 id="整体的思路" tabindex="-1"><a class="header-anchor" href="#整体的思路"><span>整体的思路</span></a></h1><p>最好的方式是基于图数据库</p><p>cmdb + 图数据库(neo4j) + 逻辑推断（权重）+报警结合</p><p>切为子图</p><p>ui <mark>》接口</mark>》实现</p><h1 id="关系" tabindex="-1"><a class="header-anchor" href="#关系"><span>关系</span></a></h1><p>资源 + 机器 + 报警</p><h2 id="关系-1" tabindex="-1"><a class="header-anchor" href="#关系-1"><span>关系</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>app -- 资源 --- 机器 -- 报警</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="app-和其他资源" tabindex="-1"><a class="header-anchor" href="#app-和其他资源"><span>app 和其他资源</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>app -- database</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>|</span></span>
<span class="line"><span>redis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>底层对应的 vm / phy 等物理资源。</p><h2 id="异常过滤" tabindex="-1"><a class="header-anchor" href="#异常过滤"><span>异常过滤</span></a></h2><p>聚集性的 vm / phy</p><h1 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路"><span>实现思路</span></a></h1><h2 id="_1-alarm-作为出发点" tabindex="-1"><a class="header-anchor" href="#_1-alarm-作为出发点"><span>1. alarm 作为出发点</span></a></h2><p>将和 alarm 相关的所有信息关联出来：</p><p>app</p><p>phy / vm</p><p>redis / database</p><p>kafka</p><h2 id="_2-app-关系" tabindex="-1"><a class="header-anchor" href="#_2-app-关系"><span>2. app 关系</span></a></h2><p>app==&gt;app（trace）</p><p>app==&gt;Redis</p><p>app==&gt;database</p><h2 id="_3-从新查询-alarm" tabindex="-1"><a class="header-anchor" href="#_3-从新查询-alarm"><span>3. 从新查询 alarm</span></a></h2><p>app</p><p>redis</p><p>databse</p><p>各种资源</p><h2 id="_4-重新查询关系资源" tabindex="-1"><a class="header-anchor" href="#_4-重新查询关系资源"><span>4. 重新查询关系资源</span></a></h2><p>查询对应的资源信息</p><p>app</p><p>redis</p><p>database</p><p>等等</p><h1 id="ui" tabindex="-1"><a class="header-anchor" href="#ui"><span>UI</span></a></h1><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter"><span>filter</span></a></h2><p>appNameList</p><p>levelList</p><p>time-range</p><p>app-resources: kafka / redis / databse /</p><h2 id="全景图" tabindex="-1"><a class="header-anchor" href="#全景图"><span>全景图</span></a></h2><p>意义不大</p><p>antv6</p><h2 id="子图" tabindex="-1"><a class="header-anchor" href="#子图"><span>子图</span></a></h2><p>为了避免 ui 复杂化，通过卡片的形式</p><p>按照权重排序处理。</p><p>等级+标题</p><p>子图可以进一步点击展开</p><h1 id="基础数据" tabindex="-1"><a class="header-anchor" href="#基础数据"><span>基础数据</span></a></h1><h2 id="cmdb" tabindex="-1"><a class="header-anchor" href="#cmdb"><span>cmdb</span></a></h2><p>如何获取到？</p><p>作业平台巡检 + cmdb 基本数据。</p><h2 id="数据形式" tabindex="-1"><a class="header-anchor" href="#数据形式"><span>数据形式</span></a></h2><p>最基本的就是 mysql 存储。</p><p>当然 neo4j 可视化比较直观。</p><h1 id="实现逻辑" tabindex="-1"><a class="header-anchor" href="#实现逻辑"><span>实现逻辑</span></a></h1><p>要知道缺什么？</p><p>实际推断是什么流程？</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>`,61)]))}const o=e(i,[["render",t]]),l=JSON.parse('{"path":"/posts/devops/2019-04-01-monitor-in-action-11-RCA-how-to-impl.html","title":"监控系统实战-11-RCA 根本原因分析(Root Cause Analysis) 如何实现？整体的思路","lang":"zh-CN","frontmatter":{"title":"监控系统实战-11-RCA 根本原因分析(Root Cause Analysis) 如何实现？整体的思路","date":"2018-11-25T00:00:00.000Z","categories":["Devops"],"tags":["devops","monitor","apm","zabbix","sh"],"published":true,"description":"整体的思路 最好的方式是基于图数据库 cmdb + 图数据库(neo4j) + 逻辑推断（权重）+报警结合 切为子图 ui 》接口》实现 关系 资源 + 机器 + 报警 关系 app 和其他资源 底层对应的 vm / phy 等物理资源。 异常过滤 聚集性的 vm / phy 实现思路 1. alarm 作为出发点 将和 alarm 相关的所有信息关联...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/devops/2019-04-01-monitor-in-action-11-RCA-how-to-impl.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"监控系统实战-11-RCA 根本原因分析(Root Cause Analysis) 如何实现？整体的思路"}],["meta",{"property":"og:description","content":"整体的思路 最好的方式是基于图数据库 cmdb + 图数据库(neo4j) + 逻辑推断（权重）+报警结合 切为子图 ui 》接口》实现 关系 资源 + 机器 + 报警 关系 app 和其他资源 底层对应的 vm / phy 等物理资源。 异常过滤 聚集性的 vm / phy 实现思路 1. alarm 作为出发点 将和 alarm 相关的所有信息关联..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"monitor"}],["meta",{"property":"article:tag","content":"apm"}],["meta",{"property":"article:tag","content":"zabbix"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-11-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"监控系统实战-11-RCA 根本原因分析(Root Cause Analysis) 如何实现？整体的思路\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.14,"words":342},"filePathRelative":"posts/devops/2019-04-01-monitor-in-action-11-RCA-how-to-impl.md","localizedDate":"2018年11月25日","excerpt":"\\n<p>最好的方式是基于图数据库</p>\\n<p>cmdb + 图数据库(neo4j) + 逻辑推断（权重）+报警结合</p>\\n<p>切为子图</p>\\n<p>ui <mark>》接口</mark>》实现</p>\\n<h1>关系</h1>\\n<p>资源 + 机器 + 报警</p>\\n<h2>关系</h2>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>app -- 资源 --- 机器 -- 报警</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{o as comp,l as data};
