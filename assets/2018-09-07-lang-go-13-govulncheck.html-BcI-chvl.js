import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as n,o as c}from"./app-CEDSurVN.js";const a={};function r(p,e){return c(),t("div",null,e[0]||(e[0]=[n('<h1 id="教程-使用-govulncheck-查找并修复易受攻击的依赖项" tabindex="-1"><a class="header-anchor" href="#教程-使用-govulncheck-查找并修复易受攻击的依赖项"><span>教程：使用 govulncheck 查找并修复易受攻击的依赖项</span></a></h1><p>Govulncheck 是一个低噪音工具，可帮助您查找并修复 Go 项目中易受攻击的依赖项。</p><p>它通过扫描项目的依赖项中是否存在已知漏洞，然后识别代码中对这些漏洞的任何直接或间接调用来实现此目的。</p><p>在本教程中，您将学习如何使用 govulncheck 扫描简单程序中的漏洞。</p><p>您还将学习如何确定漏洞的优先级和评估漏洞，以便您可以首先专注于修复最重要的漏洞。</p><p>要了解有关 govulncheck 的更多信息，请参阅 govulncheck 文档以及有关 Go 漏洞管理的博客文章。</p><p><a href="https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck" target="_blank" rel="noopener noreferrer">https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck</a></p><p><a href="https://go.dev/blog/vuln" target="_blank" rel="noopener noreferrer">https://go.dev/blog/vuln</a></p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://go.dev/doc/tutorial/govulncheck" target="_blank" rel="noopener noreferrer">https://go.dev/doc/tutorial/govulncheck</a></p>',10)]))}const h=o(a,[["render",r]]),i=JSON.parse('{"path":"/posts/Lang/2018-09-07-lang-go-13-govulncheck.html","title":"Go Lang-12-govulncheck 漏洞检查有关的 Go 工具","lang":"zh-CN","frontmatter":{"title":"Go Lang-12-govulncheck 漏洞检查有关的 Go 工具","date":"2018-09-07T00:00:00.000Z","categories":["Lang"],"tags":["go","lang","sh"],"published":true,"description":"教程：使用 govulncheck 查找并修复易受攻击的依赖项 Govulncheck 是一个低噪音工具，可帮助您查找并修复 Go 项目中易受攻击的依赖项。 它通过扫描项目的依赖项中是否存在已知漏洞，然后识别代码中对这些漏洞的任何直接或间接调用来实现此目的。 在本教程中，您将学习如何使用 govulncheck 扫描简单程序中的漏洞。 您还将学习如何确...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Lang/2018-09-07-lang-go-13-govulncheck.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Go Lang-12-govulncheck 漏洞检查有关的 Go 工具"}],["meta",{"property":"og:description","content":"教程：使用 govulncheck 查找并修复易受攻击的依赖项 Govulncheck 是一个低噪音工具，可帮助您查找并修复 Go 项目中易受攻击的依赖项。 它通过扫描项目的依赖项中是否存在已知漏洞，然后识别代码中对这些漏洞的任何直接或间接调用来实现此目的。 在本教程中，您将学习如何使用 govulncheck 扫描简单程序中的漏洞。 您还将学习如何确..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"go"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-09-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go Lang-12-govulncheck 漏洞检查有关的 Go 工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-09-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":0.75,"words":226},"filePathRelative":"posts/Lang/2018-09-07-lang-go-13-govulncheck.md","localizedDate":"2018年9月7日","excerpt":"\\n<p>Govulncheck 是一个低噪音工具，可帮助您查找并修复 Go 项目中易受攻击的依赖项。</p>\\n<p>它通过扫描项目的依赖项中是否存在已知漏洞，然后识别代码中对这些漏洞的任何直接或间接调用来实现此目的。</p>\\n<p>在本教程中，您将学习如何使用 govulncheck 扫描简单程序中的漏洞。</p>\\n<p>您还将学习如何确定漏洞的优先级和评估漏洞，以便您可以首先专注于修复最重要的漏洞。</p>\\n<p>要了解有关 govulncheck 的更多信息，请参阅 govulncheck 文档以及有关 Go 漏洞管理的博客文章。</p>\\n<p><a href=\\"https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://pkg.go.dev/golang.org/x/vuln/cmd/govulncheck</a></p>","autoDesc":true}');export{h as comp,i as data};
