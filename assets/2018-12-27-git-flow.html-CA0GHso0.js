import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,o as n}from"./app-uJE4P3e0.js";const l={};function t(p,s){return n(),i("div",null,s[0]||(s[0]=[a(`<h1 id="git-flow" tabindex="-1"><a class="header-anchor" href="#git-flow"><span>Git Flow</span></a></h1><p>最近在着手制定开发规范，想要把项目正规高效的跑起来。计划引入 Git 版本控制，Git-Flow 便成为了首选。</p><p>因为之前并没有过多接触，所以先花些时间摸索一下。</p><h1 id="一、为什么使用-git-flow" tabindex="-1"><a class="header-anchor" href="#一、为什么使用-git-flow"><span>一、为什么使用 git-flow</span></a></h1><p>当在团队开发中使用版本控制系统时，商定一个统一的工作流程是至关重要的。</p><p>Git 的确可以在各个方面做很多事情，然而，如果在你的团队中还没有能形成一个特定有效的工作流程，那么混乱就将是不可避免的。</p><p>基本套路：你可以定义一个完全适合你自己项目的工作流程，或者使用一个别人定义好的。</p><h1 id="二、安装-git-flow" tabindex="-1"><a class="header-anchor" href="#二、安装-git-flow"><span>二、安装 git-flow</span></a></h1><p>我们使用 Homebrew 来安装 git-flow：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>brew install git-flow</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后，通过 git-flow 来初始化项目：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这时候就会有一些配置的操作，先默认操作：直接全部选择默认即可。</p><h2 id="git-flow-是对-git-的封装" tabindex="-1"><a class="header-anchor" href="#git-flow-是对-git-的封装"><span>git flow 是对 Git 的封装</span></a></h2><p>需要强调一点：git-flow 只是封装了 git 的命令。</p><p>所以在我们初始化的时候，对仓库并没有其他改动，只是创建了几个分支。当然，如果你不想继续使用 git-flow ,那么只需要简单的停用 git-flow 的命令即可，不需要修改或者删除任何文件。</p><p>为了验证一下，我们看下目前的分支，执行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git branch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>* develop</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="windows-安装实战" tabindex="-1"><a class="header-anchor" href="#windows-安装实战"><span>Windows 安装实战</span></a></h1><h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git"><span>安装 git</span></a></h2><p><a href="">git 相关</a></p><p>我的安装目录：<code>C:\\Program Files\\Git</code></p><h2 id="下载-git-flow" tabindex="-1"><a class="header-anchor" href="#下载-git-flow"><span>下载 git flow</span></a></h2><p>在任一目录执行</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git clone --recursive git://github.com/nvie/gitflow.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>下载后文件如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>AUTHORS        git-flow*         git-flow-init     git-flow-version  shFlags/</span></span>
<span class="line"><span>bump-version*  gitflow-common    git-flow-release  LICENSE</span></span>
<span class="line"><span>Changes.mdown  git-flow-feature  gitflow-shFlags   Makefile</span></span>
<span class="line"><span>contrib/       git-flow-hotfix   git-flow-support  README.mdown</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>contrib</strong> 文件夹中，我们可行安装</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ cd contrib/</span></span>
<span class="line"><span>$ ls</span></span>
<span class="line"><span>gitflow-installer.sh*  msysgit-install.cmd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行安装命令" tabindex="-1"><a class="header-anchor" href="#执行安装命令"><span>执行安装命令</span></a></h2><p>使用管理员权限执行</p><p>第二个参数指定我的 git 安装目录</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>.\\msysgit-install.cmd &quot;C:\\Program Files\\Git&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="验证" tabindex="-1"><a class="header-anchor" href="#验证"><span>验证</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow</span></span>
<span class="line"><span>usage: git flow </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Available subcommands are:</span></span>
<span class="line"><span>   init      Initialize a new git repo with support for the branching model.</span></span>
<span class="line"><span>   feature   Manage your feature branches.</span></span>
<span class="line"><span>   bugfix    Manage your bugfix branches.</span></span>
<span class="line"><span>   release   Manage your release branches.</span></span>
<span class="line"><span>   hotfix    Manage your hotfix branches.</span></span>
<span class="line"><span>   support   Manage your support branches.</span></span>
<span class="line"><span>   version   Shows version information.</span></span>
<span class="line"><span>   config    Manage your git-flow configuration.</span></span>
<span class="line"><span>   log       Show log deviating from base branch.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="查看帮助文档" tabindex="-1"><a class="header-anchor" href="#查看帮助文档"><span>查看帮助文档</span></a></h1><h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature"><span>feature</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow feature help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow feature help</span></span>
<span class="line"><span>usage: git flow feature [list]</span></span>
<span class="line"><span>   or: git flow feature start</span></span>
<span class="line"><span>   or: git flow feature finish</span></span>
<span class="line"><span>   or: git flow feature publish</span></span>
<span class="line"><span>   or: git flow feature track</span></span>
<span class="line"><span>   or: git flow feature diff</span></span>
<span class="line"><span>   or: git flow feature rebase</span></span>
<span class="line"><span>   or: git flow feature checkout</span></span>
<span class="line"><span>   or: git flow feature pull</span></span>
<span class="line"><span>   or: git flow feature delete</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Manage your feature branches.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    For more specific help type the command followed by --help</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、分支模式" tabindex="-1"><a class="header-anchor" href="#三、分支模式"><span>三、分支模式</span></a></h1><p>git-flow 模式会预设两个主分支在仓库中：</p><ol><li>master 只能用来包含产品代码 我们不能直接工作在这个 master 分支上，而是在其他指定的，独立的特性分支中。</li></ol><p>不直接提交改动到 master 分支上也是很多工作流程的一个共同的规则。</p><ol start="2"><li>develop 是你进行任何新的开发的基础分支 当你开始一个新的功能分支时，它将是开发的基础。</li></ol><p>另外，该分支也汇集所有已经完成的功能，并等待被整合到 master 分支中。</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXAsUt6n6Fs5zBgSUwF8boickHpaj8Jia4SKB7QJa8cnWvPvDNaF5FHuqw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="分支模式" tabindex="0" loading="lazy"><figcaption>分支模式</figcaption></figure><p>上面说到的这两个分支被称作为长期分支，它们会存活在项目的整个生命周期中。</p><p>而其他的分支，例如针对功能的分支，针对发行的分支，仅仅只是临时存在的。它们是根据需要来创建的，当它们完成了自己的任务之后就会被删除掉。</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXnlCibRts7QQUQ1ia9uTE2w9PDxtxYSYibCaEAa3S5eQxVTul0otiaLlgcA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="删除后的信息" tabindex="0" loading="lazy"><figcaption>删除后的信息</figcaption></figure><h1 id="四、明确分支功能" tabindex="-1"><a class="header-anchor" href="#四、明确分支功能"><span>四、明确分支功能</span></a></h1><ol><li><p>master 分支 最为稳定功能比较完整的随时可发布的代码，即代码开发完成，经过测试，没有明显的 bug，才能合并到 master 中。请注意永远不要在 master 分支上直接开发和提交代码，以确保 master 上的代码一直可用；</p></li><li><p>develop 分支 用作平时开发的主分支，并一直存在，永远是功能最新最全的分支，包含所有要发布 到下一个 release 的代码，主要用于合并其他分支，比如 feature 分支； 如果修改代码，新建 feature分支修改完再合并到 develop 分支。所有的 feature、 release 分支都是从 develop 分支上拉的。</p></li><li><p>feature 分支 这个分支主要是用来开发新的功能，一旦开发完成，通过测试没问题，我们合并回 develop 分支进入下一个 release 。</p></li><li><p>release 分支 用于发布准备的专门分支。当开发进行到一定程度，或者说快到了既定的发布日，可以发布时，建立一个 release 分支并指定版本号(可以在 finish 的时候添加)。开发人员可以对 release 分支上的代码进行集中测试和修改 bug。（这个测试，测试新功能与已有的功能是否有冲突，兼容性）全部完成经过测试没有问题后，将 release 分支上的代码合并到 master 分支和 develop 分支。</p></li><li><p>hotfix 分支 用于修复线上代码的 bug 。从 master 分支上拉。完成 hotfix 后，打上 tag 我们合并回 master 和 develop 分支。</p></li></ol><p>需要注意：</p><p>所有开发分支从 develop 分支拉。</p><p>所有 hotfix 分支从 master 拉。</p><p>所有在 master 上的提交都必要要有 tag，方便回滚。</p><p>只要有合并到 master 分支的操作，都需要和 develop 分支合并下，保证同步。</p><p>master 和 develop 分支是主要分支，主要分支每种类型只能有一个，派生分支每个类型可以同时存在多个。</p><h1 id="五、关于-feature-分支" tabindex="-1"><a class="header-anchor" href="#五、关于-feature-分支"><span>五、关于 Feature 分支</span></a></h1><h2 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init</span></a></h2><p>类似于 git init，我们随便找一个文件夹。</p><p>比如：<strong>D:\\github\\my-test</strong> 做测试：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pwd</span></span>
<span class="line"><span>D:\\github\\my-test</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>git flow init</li></ul><p>根据初始化的提示，命名我们的分支信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow init</span></span>
<span class="line"><span>Initialized empty Git repository in D:/github/my-test/.git/</span></span>
<span class="line"><span>No branches exist yet. Base branches must be created now.</span></span>
<span class="line"><span>Branch name for production releases: [master] master</span></span>
<span class="line"><span>Branch name for &quot;next release&quot; development: [develop] dev</span></span>
<span class="line"><span></span></span>
<span class="line"><span>How to name your supporting branch prefixes?</span></span>
<span class="line"><span>Feature branches? [feature/] new</span></span>
<span class="line"><span>Bugfix branches? [bugfix/] bugfix</span></span>
<span class="line"><span>Version tag prefix? [] 1.0.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看当前分支</li></ul><p>其他的依然和 git 保持一致</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git branch</span></span>
<span class="line"><span></span></span>
<span class="line"><span>* dev</span></span>
<span class="line"><span>  master</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="feature-1" tabindex="-1"><a class="header-anchor" href="#feature-1"><span>feature</span></a></h2><p>在 Git-flow 中，通过使用 Feature 分支，使得我们在同一时间开发多个分支更加简单。</p><p>我们接到了一个 Test1 需求，使用 feature start 来启动：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow feature start test1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当我们开始一个新的 feature 开发后：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Switched to a new branch &#39;newtest1&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary of actions:</span></span>
<span class="line"><span>- A new branch &#39;newtest1&#39; was created, based on &#39;dev&#39;</span></span>
<span class="line"><span>- You are now on branch &#39;newtest1&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Now, start committing on your feature. When done, use:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>     git flow feature finish test1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>新增需求</li></ul><p>我们新建一个文件 <code>feature.txt</code></p><ul><li>提交变更</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git add .</span></span>
<span class="line"><span>git commit -m &quot;[Feature] add for txt&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>完成开发</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow feature finish test1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>日志如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Switched to branch &#39;dev&#39;</span></span>
<span class="line"><span>Updating 96a1a67..085c31c</span></span>
<span class="line"><span>Fast-forward</span></span>
<span class="line"><span> 1.txt       | 0</span></span>
<span class="line"><span> feature.txt | 0</span></span>
<span class="line"><span> 2 files changed, 0 insertions(+), 0 deletions(-)</span></span>
<span class="line"><span> create mode 100644 1.txt</span></span>
<span class="line"><span> create mode 100644 feature.txt</span></span>
<span class="line"><span>Deleted branch newtest1 (was 085c31c).</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary of actions:</span></span>
<span class="line"><span>- The feature branch &#39;newtest1&#39; was merged into &#39;dev&#39;</span></span>
<span class="line"><span>- Feature branch &#39;newtest1&#39; has been locally deleted</span></span>
<span class="line"><span>- You are now on branch &#39;dev&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里做了几件事情： 1.将 feature/test1 分支合并到了 develop 分支； 2.删除了 feature/test1； 3.切换到 develop 分支；</p><p>需要注意： git-flow 使用的命令是：</p><p><code>git merge —no-ff feature/test1</code></p><p>这样，在我们移除 feature 分支之前，是不会丢失任何历史记录的。</p><p>如果你还不了解 --no-ff 相关知识，可以先看看：Git merge 的 –ff 和 –no-ff。</p><ul><li>查看变更记录</li></ul><p>接着，我们看一下变更记录：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git log --oneline</span></span>
<span class="line"><span>085c31c (HEAD -&gt; dev) [Feature] add for txt</span></span>
<span class="line"><span>96a1a67 (master) Initial commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="六、release-分支-版本发布" tabindex="-1"><a class="header-anchor" href="#六、release-分支-版本发布"><span>六、release 分支－版本发布</span></a></h1><p>当我们开发完毕，需要去发布新版本的时候，我们可以使用：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow release start   0.1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>日志如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Switched to a new branch &#39;release/0.1.0&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Summary of actions:</span></span>
<span class="line"><span>- A new branch &#39;release/0.1.0&#39; was created, based on &#39;dev&#39;</span></span>
<span class="line"><span>- You are now on branch &#39;release/0.1.0&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Follow-up actions:</span></span>
<span class="line"><span>- Bump the version number now!</span></span>
<span class="line"><span>- Start committing last-minute fixes in preparing your release</span></span>
<span class="line"><span>- When done, run:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>     git flow release finish &#39;0.1.0&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很清晰，我们简单说一下： 1.基于 develop 分支新建了 release/0.1.0 分支； 2.切换至 release/0.1.0 分支；</p><p>又出现了新问题： 1.这是什么意思： Bumpthe version number now! 2. last-minute fixes 又是什么意思？</p><p>那接下来我们要做什么呢？不着急，按照提示一步步来。</p><ul><li>修改代码</li></ul><p>我们修改了代码，进行add，和 commit 之后，</p><p>执行：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow release finish 0.1.0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="七、hotfix-线上代码" tabindex="-1"><a class="header-anchor" href="#七、hotfix-线上代码"><span>七、Hotfix 线上代码</span></a></h1><p>如果线上代码有问题，这时候你需要紧急修复呢？</p><p>我们可以使用 git flow hotfix ：</p><ul><li>开始</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow hotfix start jartto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>结束</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>git flow hotfix finish jartto</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="八、git-flow-流程图示" tabindex="-1"><a class="header-anchor" href="#八、git-flow-流程图示"><span>八、git-flow 流程图示</span></a></h1><p>恭喜你，到这里你已经完成了 git-flow 的基本流程。为了更加整体的理解工作流，我们来看看下面这张流程图：</p><figure><img src="https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXvj8ZtoLWsylQarsibc48QXqs4Y3PKgGToib7MgECl2ibx0a4rC0CrE8IQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="git-flow-all" tabindex="0" loading="lazy"><figcaption>git-flow-all</figcaption></figure><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://blog.csdn.net/wyc_cs/article/details/51458978" target="_blank" rel="noopener noreferrer">git flow在Windows上的安装和使用</a></p><p><a href="https://mp.weixin.qq.com/s/SIxpHSrm6nf_Dtw3GdACVw" target="_blank" rel="noopener noreferrer">Git 版本控制之 GitFlow</a></p>`,118)]))}const c=e(l,[["render",t]]),o=JSON.parse('{"path":"/posts/devops/2018-12-27-git-flow.html","title":"Git Flow","lang":"zh-CN","frontmatter":{"title":"Git Flow","date":"2018-12-27T00:00:00.000Z","categories":["Devops"],"tags":["devops","git","sh"],"published":true,"excerpt":"Git Flow","description":"Git Flow 最近在着手制定开发规范，想要把项目正规高效的跑起来。计划引入 Git 版本控制，Git-Flow 便成为了首选。 因为之前并没有过多接触，所以先花些时间摸索一下。 一、为什么使用 git-flow 当在团队开发中使用版本控制系统时，商定一个统一的工作流程是至关重要的。 Git 的确可以在各个方面做很多事情，然而，如果在你的团队中还没有...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/devops/2018-12-27-git-flow.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Git Flow"}],["meta",{"property":"og:description","content":"Git Flow 最近在着手制定开发规范，想要把项目正规高效的跑起来。计划引入 Git 版本控制，Git-Flow 便成为了首选。 因为之前并没有过多接触，所以先花些时间摸索一下。 一、为什么使用 git-flow 当在团队开发中使用版本控制系统时，商定一个统一的工作流程是至关重要的。 Git 的确可以在各个方面做很多事情，然而，如果在你的团队中还没有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXAsUt6n6Fs5zBgSUwF8boickHpaj8Jia4SKB7QJa8cnWvPvDNaF5FHuqw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-12-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Flow\\",\\"image\\":[\\"https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXAsUt6n6Fs5zBgSUwF8boickHpaj8Jia4SKB7QJa8cnWvPvDNaF5FHuqw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\\",\\"https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXnlCibRts7QQUQ1ia9uTE2w9PDxtxYSYibCaEAa3S5eQxVTul0otiaLlgcA/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\\",\\"https://mmbiz.qpic.cn/mmbiz_png/R3InYSAIZkEJZoia3WicHIjy9UvOPT8oVXvj8ZtoLWsylQarsibc48QXqs4Y3PKgGToib7MgECl2ibx0a4rC0CrE8IQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\\"],\\"datePublished\\":\\"2018-12-27T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":7.58,"words":2274},"filePathRelative":"posts/devops/2018-12-27-git-flow.md","localizedDate":"2018年12月27日","autoDesc":true}');export{c as comp,o as data};
