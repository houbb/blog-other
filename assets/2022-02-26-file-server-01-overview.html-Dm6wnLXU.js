import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as l}from"./app-CEDSurVN.js";const e={};function h(p,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="业务需求" tabindex="-1"><a class="header-anchor" href="#业务需求"><span>业务需求</span></a></h1><p>产品经理：小明啊，我们需要做一个附件上传的需求，内容可能是图片、pdf 或者视频。</p><p>小明：可以实现的，不过要限制下文件大小。最好别超过 30MB，太大了上传比较慢，服务器压力也大。</p><p>产品经理：沟通下来，视频是一定要的。就限制 50MB 以下吧。</p><p>小明：可以。</p><figure><img src="https://img-blog.csdnimg.cn/a9ca7e4cf921435f8f14feb432dac2b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6ICB6ams5ZW46KW_6aOO,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="A FEW DAYS LATER" tabindex="0" loading="lazy"><figcaption>A FEW DAYS LATER</figcaption></figure><p>测试同学：这文件上传也太慢了吧，我试了一个 50mb 的文件，花了一分钟。</p><p>小明：whats up，这么慢。</p><p>产品经理：不行，你这太慢了， 想办法优化下。</p><h1 id="优化之路" tabindex="-1"><a class="header-anchor" href="#优化之路"><span>优化之路</span></a></h1><h2 id="问题定位" tabindex="-1"><a class="header-anchor" href="#问题定位"><span>问题定位</span></a></h2><p>整体的文件上传调用链路如下图：</p><figure><img src="https://img-blog.csdnimg.cn/d1be7cc71f9f48f099df3d81098d6237.png" alt="调用链路" tabindex="0" loading="lazy"><figcaption>调用链路</figcaption></figure><p>小明发现前端开始上传，到请求到后端就花费了近 30 秒，应该是浏览器解析文件导致的慢。</p><p>后端服务请求文件服务也比较慢。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>小明：文件服务有异步接口吗？</p><p>文件服务：暂时没有。</p><p>小明：这个上传确实很慢，有优化建议吗？</p><p>文件服务：没有，看了下就是这么慢。</p><p>小明：……</p><p>最后小明还是决定把后端的同步返回，调整为异步返回，降低用户的等待时间。</p><p>把后端的实现调整了一番适应业务，前端调用后获取异步返回标识，后端根据标识查询文件服务同步返回的结果。</p><p>缺点也很明显，<strong>异步上传失败，用户是不知道的</strong>。</p><p>不过碍于时间原因，也就是能权衡利弊，暂时上线了。</p><p>最近小明有些时间，于是就想着自己实现一个文件服务。</p><h1 id="文件服务" tabindex="-1"><a class="header-anchor" href="#文件服务"><span>文件服务</span></a></h1><p>碍于文件服务的功能非常原始，小明就想着自己实现一个，从以下几个方面优化：</p><p>（1）压缩</p><p>（2）异步</p><p>（3）秒传</p><p>（4）并发</p><p>（5）直连</p><h2 id="压缩" tabindex="-1"><a class="header-anchor" href="#压缩"><span>压缩</span></a></h2><p>日常开发中，尽可能和产品沟通清楚，让用户上传/下载压缩包文件。</p><p>因为<strong>网络传输是非常耗时的</strong>。</p><p>压缩文件还有一个好处就是节约存储空间，当然，一般我们不用考虑这个成本。</p><p>优点：实现简单，效果拔群。</p><p>缺点：需要结合业务，并且说服产品。如果产品希望图片预览，视频播放，压缩就不太适用。</p><h2 id="异步" tabindex="-1"><a class="header-anchor" href="#异步"><span>异步</span></a></h2><p>对于比较耗时的操作，我们会自然的想到异步执行，降低用户同步等待的时间。</p><p>服务端接收到文件内容后，返回一个请求标识，异步执行处理逻辑。</p><p>那如何获取执行结果呢？</p><p>一般有 2 种常见方案：</p><p>（1）提供结果查询接口</p><p>相对简单，但是可能会有无效查询。</p><p>（2）提供异步结果回调功能</p><p>实现比较麻烦，可以第一时间获取执行结果。</p><h2 id="秒传" tabindex="-1"><a class="header-anchor" href="#秒传"><span>秒传</span></a></h2><p>小伙伴们应该都用过云盘，云盘有时候上传文件，非常大的文件，却可以瞬间上传完成。</p><p>这是如何实现的呢？</p><p>每一个文件内容，都对应唯一的文件哈希值。</p><p>我们可以在上传之前，查询该哈希值是否存在，如果已经存在，则直接增加一个引用即可，跳过了文件传输的环节。</p><p>当然，这个只在你的用户文件数据量很大，且有一定重复率的时候优势才能体现出来。</p><p>伪代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FileUploadResponse</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> uploadByHash</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fileName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                       final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fileBase64) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    FileUploadResponse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> response </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> FileUploadResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //判断文件是否存在</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> fileHash </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> Md5Util</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">md5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fileBase64);</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    FileInfoExistsResponse</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> fileInfoExistsResponse </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fileInfoExists</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(fileHash)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">RespCodeConst</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">SUCCESS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">fileInfoExistsResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRespCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setRespCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">fileInfoExistsResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRespCode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setRespMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">fileInfoExistsResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRespMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    Boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> exists </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> fileInfoExistsResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getExists</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">    FileUploadByHashRequest</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> request </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> FileUploadByHashRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setFileName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fileName);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setFileHash</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fileHash);</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAsyncFlag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(asyncFlag);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 文件不存在再上传内容</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TRUE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">equals</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(exists)</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setFileBase64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fileBase64);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 调用服务端</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> fillAndCallServer</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;api/file/uploadByHash&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> FileUploadResponse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="并发" tabindex="-1"><a class="header-anchor" href="#并发"><span>并发</span></a></h2><p>另一种方式就是对一个比较大的文件进行切分。</p><p>比如 100MB 的文件，切成 10 个子文件，然后并发上传。一个文件对应唯一的批次号。</p><p>下载的时候，根据批次号，并发下载文件，拼接成一个完整的文件。</p><p>伪代码如下：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> FileUploadResponse</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> concurrentUpload</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fileName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">                                           final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> fileBase64) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 首先进行分段</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> limitSize </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> fileBase64</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> segments </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> StringUtil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">splitByLength</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(fileBase64, limitSize);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 并发上传</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> size </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> segments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ConcurrentHashMap</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> map </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ConcurrentHashMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> CountDownLatch</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> lock </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CountDownLatch</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(size)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> segments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">size</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        final</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> index </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        Thread</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> t </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Thread</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // 并发上传</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">               // countDown</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">               lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">countDown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        }</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 等待完成</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    lock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">await</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 针对上传后的信息处理</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="直连" tabindex="-1"><a class="header-anchor" href="#直连"><span>直连</span></a></h2><p>当然，还有一种策略就是客户端直接访问服务端，跳过后端服务。</p><figure><img src="https://img-blog.csdnimg.cn/bd26b1696674444dbd07187b60c56690.png" alt="文件直连" tabindex="0" loading="lazy"><figcaption>文件直连</figcaption></figure><p>当然，这个前提要求文件服务必须提供 HTTP 文件上传接口。</p><p>还需要考虑安全问题，最好是前端调用后端，获取授权 token，然后携带 token 进行文件上传。</p><h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://mp.weixin.qq.com/s/i-9HfwOpY9tvLC26-Szh6w" target="_blank" rel="noopener noreferrer">提升文件上传性能的 4 种方式，你会吗？</a></p><p><a href="https://mp.weixin.qq.com/s/320vFxi3KVdqMjorhQ8p5A" target="_blank" rel="noopener noreferrer">异步查询转同步的 7 种实现方式</a></p><p><a href="https://mp.weixin.qq.com/s/cPYrtFgzBDKvW6v6nas8mA" target="_blank" rel="noopener noreferrer">java压缩归档算法框架工具 compress</a></p><h1 id="小结" tabindex="-1"><a class="header-anchor" href="#小结"><span>小结</span></a></h1><p>文件上传是非常常见的业务需求，上传的性能问题是肯定要考虑和优化的一个问题。</p><p>上面的几种方法可以灵活的组合使用，结合自己的业务进行更好的实践。</p><p>希望本文对你有所帮助，如果喜欢，欢迎点赞收藏转发一波。</p><p>我是老马，期待与你的下次重逢。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>`,77)]))}const r=i(e,[["render",h]]),d=JSON.parse('{"path":"/posts/File/2022-02-26-file-server-01-overview.html","title":"提升文件上传性能的 4 种方式，你会吗？","lang":"zh-CN","frontmatter":{"title":"提升文件上传性能的 4 种方式，你会吗？","date":"2022-02-23T00:00:00.000Z","categories":["File"],"tags":["file","sh"],"published":true,"description":"业务需求 产品经理：小明啊，我们需要做一个附件上传的需求，内容可能是图片、pdf 或者视频。 小明：可以实现的，不过要限制下文件大小。最好别超过 30MB，太大了上传比较慢，服务器压力也大。 产品经理：沟通下来，视频是一定要的。就限制 50MB 以下吧。 小明：可以。 A FEW DAYS LATERA FEW DAYS LATER 测试同学：这文件上...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/File/2022-02-26-file-server-01-overview.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"提升文件上传性能的 4 种方式，你会吗？"}],["meta",{"property":"og:description","content":"业务需求 产品经理：小明啊，我们需要做一个附件上传的需求，内容可能是图片、pdf 或者视频。 小明：可以实现的，不过要限制下文件大小。最好别超过 30MB，太大了上传比较慢，服务器压力也大。 产品经理：沟通下来，视频是一定要的。就限制 50MB 以下吧。 小明：可以。 A FEW DAYS LATERA FEW DAYS LATER 测试同学：这文件上..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img-blog.csdnimg.cn/a9ca7e4cf921435f8f14feb432dac2b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6ICB6ams5ZW46KW_6aOO,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"file"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2022-02-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"提升文件上传性能的 4 种方式，你会吗？\\",\\"image\\":[\\"https://img-blog.csdnimg.cn/a9ca7e4cf921435f8f14feb432dac2b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6ICB6ams5ZW46KW_6aOO,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\\",\\"https://img-blog.csdnimg.cn/d1be7cc71f9f48f099df3d81098d6237.png\\",\\"https://img-blog.csdnimg.cn/bd26b1696674444dbd07187b60c56690.png\\"],\\"datePublished\\":\\"2022-02-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":4.81,"words":1443},"filePathRelative":"posts/File/2022-02-26-file-server-01-overview.md","localizedDate":"2022年2月23日","excerpt":"\\n<p>产品经理：小明啊，我们需要做一个附件上传的需求，内容可能是图片、pdf 或者视频。</p>\\n<p>小明：可以实现的，不过要限制下文件大小。最好别超过 30MB，太大了上传比较慢，服务器压力也大。</p>\\n<p>产品经理：沟通下来，视频是一定要的。就限制 50MB 以下吧。</p>\\n<p>小明：可以。</p>\\n<figure><img src=\\"https://img-blog.csdnimg.cn/a9ca7e4cf921435f8f14feb432dac2b2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6ICB6ams5ZW46KW_6aOO,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\\" alt=\\"A FEW DAYS LATER\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>A FEW DAYS LATER</figcaption></figure>","autoDesc":true}');export{r as comp,d as data};
