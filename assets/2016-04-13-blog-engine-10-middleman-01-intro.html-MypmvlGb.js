import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as s}from"./app-CEDSurVN.js";const l={};function r(t,e){return s(),a("div",null,e[0]||(e[0]=[n(`<h1 id="拓展阅读" tabindex="-1"><a class="header-anchor" href="#拓展阅读"><span>拓展阅读</span></a></h1><p><a href="https://houbb.github.io/2016/04/13/blog-engine-01-overview" target="_blank" rel="noopener noreferrer">blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-02-jekyll-01-install" target="_blank" rel="noopener noreferrer">blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-02-intro" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll 博客引擎介绍</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-03-install-on-windows-doc" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll 如何在 windows 环境安装，官方文档</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-03-jekyll-04-seo" target="_blank" rel="noopener noreferrer">blog-engine-02-博客引擎jekyll-jekyll SEO</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-04-hugo-intro" target="_blank" rel="noopener noreferrer">blog-engine-04-博客引擎 hugo intro 入门介绍+安装笔记</a></p><p><a href="https://houbb.github.io/2017/03/29/blog-engine-05-hexo" target="_blank" rel="noopener noreferrer">blog-engine-05-博客引擎 Hexo 入门介绍+安装笔记</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-06-pelican-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-06-pelican 静态网站生成 官方文档</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-06-pelican-02-quick-start" target="_blank" rel="noopener noreferrer">blog-engine-06-pelican 静态网站生成 windows 安装实战</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-07-gatsby-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-07-gatsby 建极速网站和应用程序 基于React的最佳框架，具备性能、可扩展性和安全性</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-08-vuepress-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-08-vuepress 以 Markdown 为中心的静态网站生成器</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-09-nuxt-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-09-nuxt 构建快速、SEO友好和可扩展的Web应用程序变得轻松</a></p><p><a href="https://houbb.github.io/2016/04/13/blog-engine-10-middleman-01-intro" target="_blank" rel="noopener noreferrer">blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具</a></p><h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>由于个人一直喜欢使用 markdown 来写 <a href="https://houbb.github.io/" target="_blank" rel="noopener noreferrer">个人博客</a>，最近就整理了一下有哪些博客引擎。</p><p>感兴趣的小伙伴也可以选择自己合适的。</p><p>好的，咱们来聊聊Middleman，用一种特别接地气的方式。</p><h1 id="middleman-是什么" tabindex="-1"><a class="header-anchor" href="#middleman-是什么"><span>Middleman 是什么？</span></a></h1><p>Middleman 是一个基于 Ruby 的静态网站生成器。</p><h2 id="middleman-的特点" tabindex="-1"><a class="header-anchor" href="#middleman-的特点"><span>Middleman 的特点</span></a></h2><ol><li><p><strong>静态网站生成</strong><br> Middleman 可以生成静态网站，这意味着速度快，安全性高。</p></li><li><p><strong>模板系统</strong><br> Middleman 提供了强大的模板系统，你可以很容易地创建和重用页面布局。</p></li><li><p><strong>前端支持</strong><br> 你可以在 Middleman 中使用各种前端技术，如 Sass、CoffeeScript、JavaScript 等。</p></li><li><p><strong>数据管理</strong><br> Middleman 支持从 YAML、JSON、CSV 数据源生成页面。</p></li><li><p><strong>部署简单</strong><br> 生成的静态文件可以轻松部署到 GitHub Pages、Amazon S3 等多种平台上。</p></li></ol><h1 id="如何安装-middleman" tabindex="-1"><a class="header-anchor" href="#如何安装-middleman"><span>如何安装 Middleman？</span></a></h1><ol><li><p><strong>安装 Ruby</strong><br> Middleman 是基于 Ruby 的，所以首先需要在你的电脑上安装 Ruby。</p></li><li><p><strong>安装 Middleman</strong><br> 打开终端或命令提示符，输入以下命令安装 Middleman：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> middleman</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>创建新网站</strong><br> 使用以下命令创建一个新的 Middleman 网站：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-blog</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里的 <code>my-blog</code> 是你的博客名，可以自定义。</p></li></ol><h1 id="如何使用-middleman" tabindex="-1"><a class="header-anchor" href="#如何使用-middleman"><span>如何使用 Middleman？</span></a></h1><ol><li><p><strong>编写内容</strong><br> 在 <code>source</code> 目录下创建 Markdown 或 HTML 文件，就可以开始写内容了。</p></li><li><p><strong>本地预览</strong><br> 输入以下命令启动本地服务器：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后在浏览器中输入 <code>http://localhost:4567</code>，就可以实时预览你的博客了。</p></li><li><p><strong>构建网站</strong><br> 当你的内容写好后，使用以下命令构建网站：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这会在 <code>build</code> 目录下生成静态文件。</p></li><li><p><strong>部署网站</strong><br> 将 <code>build</code> 目录下的文件部署到你选择的平台上，你的博客就上线了。</p></li><li><p><strong>定制主题和扩展</strong><br> Middleman 允许你通过修改模板和使用扩展来定制你的网站外观和功能。</p></li></ol><h1 id="middleman-的优势" tabindex="-1"><a class="header-anchor" href="#middleman-的优势"><span>Middleman 的优势</span></a></h1><ul><li><p><strong>静态网站</strong><br> 静态网站加载速度快，对服务器的要求低。</p></li><li><p><strong>灵活的模板系统</strong><br> Middleman 的模板系统非常灵活，方便创建复杂的页面布局。</p></li><li><p><strong>前端支持</strong><br> Middleman 支持各种前端技术，方便构建现代化的网站。</p></li><li><p><strong>数据管理</strong><br> Middleman 可以方便地从数据源生成内容，适合创建数据驱动的网站。</p></li></ul><h1 id="middleman-的局限" tabindex="-1"><a class="header-anchor" href="#middleman-的局限"><span>Middleman 的局限</span></a></h1><ul><li><p><strong>Ruby 语言</strong><br> 由于 Middleman 是基于 Ruby 的，因此需要一定的 Ruby 语言基础。</p></li><li><p><strong>社区规模</strong><br> 相比其他一些静态网站生成器，Middleman 的社区规模可能稍小。</p></li></ul><p>如果你熟悉 Ruby，想要一个灵活、强大的平台来构建你的网站，Middleman 是一个非常好的选择。</p><hr><h1 id="middleman" tabindex="-1"><a class="header-anchor" href="#middleman"><span>middleman</span></a></h1><p><strong>Middleman</strong> 是一个静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具。</p><p>请查看 <a href="http://middlemanapp.com/" target="_blank" rel="noopener noreferrer">middlemanapp.com</a> 获取详细的教程，包括 <a href="http://middlemanapp.com/basics/getting-started/" target="_blank" rel="noopener noreferrer">入门指南</a>。</p><h2 id="为什么选择-middleman" tabindex="-1"><a class="header-anchor" href="#为什么选择-middleman"><span>为什么选择 Middleman？</span></a></h2><p>如今，许多网站都是以 API 为基础构建的。</p><p>与其将前端和后端打包在一起，不如分别构建和部署，利用公共 API 从后端获取数据并在前端显示。</p><p>静态网站非常快速且需要很少的 RAM。独立部署的前端可以直接部署到云端或 CDN。许多设计师和开发人员简单地向客户提供静态的 HTML/JS/CSS。</p><ul><li><p>使用 <a href="https://sass-lang.com/" target="_blank" rel="noopener noreferrer">Sass</a> 来实现 DRY 样式表。</p></li><li><p>自带资产管道（WebPack、Babel、Sprockets 或其他任何工具）。</p></li><li><p>使用 <a href="https://ruby-doc.org/stdlib-2.0.0/libdoc/erb/rdoc/ERB.html" target="_blank" rel="noopener noreferrer">ERb</a> 或 <a href="https://haml.info/" target="_blank" rel="noopener noreferrer">Haml</a> 进行简单的模板化。</p></li></ul><p><strong>Middleman</strong> 为独立开发者提供了所有这些工具以及许多其他工具。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>Middleman 基于 Ruby 构建，并使用 RubyGems 包管理器进行安装。</p><p>这些通常已预先安装在 Mac OS X 和 Linux 上。</p><p>Windows 用户可以使用 [RubyInstaller] 安装这两者。</p><p>对于 Windows 用户，还需要安装 [RubyInstaller-Devkit]。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">gem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> middleman</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="入门指南" tabindex="-1"><a class="header-anchor" href="#入门指南"><span>入门指南</span></a></h2><p>安装完 Middleman 后，您将可以访问 <code>middleman</code> 命令。</p><p>首先，让我们创建一个新项目。在终端中执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MY_PROJECT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将在 &quot;MY_PROJECT&quot; 目录中创建一个新的 Middleman 项目。该项目包含一个用于配置 Middleman 的 <code>config.rb</code> 文件，以及一个用于存储页面、样式表、JavaScript 和图像的 <code>source</code> 目录。</p><p>切换到新项目的目录，并启动预览服务器：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MY_PROJECT</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>预览服务器允许您构建站点，通过修改 <code>source</code> 目录中的内容，查看您的更改在浏览器中的反映：<code>http://localhost:4567/</code></p><p>要开始，请按照您通常的方式在 <code>source</code> 目录中构建 HTML、CSS 和 JavaScript。当您准备好使用更复杂的模板时，只需将模板引擎的扩展名添加到文件中，然后开始以该格式编写。</p><p>例如，假设我正在 <code>source/stylesheets/site.css</code> 上工作，并且想开始使用 Compass 和 Sass。我会将文件重命名为 <code>source/stylesheets/site.css.scss</code>，Middleman 将自动开始处理该文件为 Sass。对于 CoffeeScript（<code>.js.coffee</code>）、Haml（<code>.html.haml</code>）和任何其他模板引擎，都适用同样的规则。</p><p>最后，您会想将项目构建为一个独立站点。从项目目录执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">middleman</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这将编译您的模板，并输出一个独立站点，可以轻松托管或交付给客户。构建步骤还可以压缩图像，使用 JavaScript 和 CSS 依赖管理，压缩 JavaScript 和 CSS，并运行您选择的其他代码。查看 <code>config.rb</code> 文件，了解可以激活的一些常见扩展。</p><h2 id="了解更多" tabindex="-1"><a class="header-anchor" href="#了解更多"><span>了解更多</span></a></h2><p>官方网站上提供了一整套深入的指南，详见：。</p><p>此外，最新生成的代码文档可以在 [RubyDoc] 上找到。</p><h2 id="社区" tabindex="-1"><a class="header-anchor" href="#社区"><span>社区</span></a></h2><p>官方社区论坛位于：</p><h2 id="bug-报告" tabindex="-1"><a class="header-anchor" href="#bug-报告"><span>Bug 报告</span></a></h2><p>我们使用 Github Issues 来管理 bug 报告和功能请求。如果遇到问题，请搜索问题并提交新问题：</p><p>获得快速响应和快速修复您的 bug 的最佳方法是提交详细的 bug 报告，包括测试案例，并及时回复开发人员的问题。如果您了解 Ruby，您还可以提交包含 Cucumber 功能的 <a href="https://help.github.com/articles/using-pull-requests" target="_blank" rel="noopener noreferrer">Pull Requests</a>，描述您的功能应该如何工作或利用您提交的 bug。</p><h2 id="如何运行-cucumber-测试" tabindex="-1"><a class="header-anchor" href="#如何运行-cucumber-测试"><span>如何运行 Cucumber 测试</span></a></h2><ol><li>检出存储库：<code>git clone https://github.com/middleman/middleman.git</code></li><li>安装 Bundler：<code>gem install bundler</code></li><li>在项目根目录内运行 <code>bundle install</code> 安装 gem 依赖项。</li><li>运行测试案例：<code>bundle exec rake test</code></li></ol><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://github.com/middleman/middleman" target="_blank" rel="noopener noreferrer">https://github.com/middleman/middleman</a></p>`,72)]))}const h=i(l,[["render",r]]),p=JSON.parse('{"path":"/posts/blogs/2016-04-13-blog-engine-10-middleman-01-intro.html","title":"blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具","lang":"zh-CN","frontmatter":{"title":"blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具","date":"2016-04-13T00:00:00.000Z","categories":["Blogs"],"tags":["hexo","blog","blog-engine"],"published":true,"description":"拓展阅读 blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比 blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记 blog-engine-02-博客引擎jekyll-jekyll 博客引...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/blogs/2016-04-13-blog-engine-10-middleman-01-intro.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具"}],["meta",{"property":"og:description","content":"拓展阅读 blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比 blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记 blog-engine-02-博客引擎jekyll-jekyll 博客引..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"hexo"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"blog-engine"}],["meta",{"property":"article:published_time","content":"2016-04-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"blog-engine-10-middleman 静态站点生成器，利用了现代 Web 开发中的所有快捷方式和工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2016-04-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":6.76,"words":2028},"filePathRelative":"posts/blogs/2016-04-13-blog-engine-10-middleman-01-intro.md","localizedDate":"2016年4月13日","excerpt":"\\n<p><a href=\\"https://houbb.github.io/2016/04/13/blog-engine-01-overview\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">blog-engine-01-常见博客引擎 jekyll/hugo/Hexo/Pelican/Gatsby/VuePress/Nuxt.js/Middleman 对比</a></p>\\n<p><a href=\\"https://houbb.github.io/2016/04/13/blog-engine-02-jekyll-01-install\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">blog-engine-02-通过博客引擎 jekyll 构建 github pages 博客实战笔记</a></p>","autoDesc":true}');export{h as comp,p as data};
