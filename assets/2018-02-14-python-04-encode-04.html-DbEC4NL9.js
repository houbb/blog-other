import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a as n,o as a}from"./app-uJE4P3e0.js";const s={};function o(r,e){return a(),i("div",null,e[0]||(e[0]=[n(`<h1 id="解释器的运行环境" tabindex="-1"><a class="header-anchor" href="#解释器的运行环境"><span>解释器的运行环境</span></a></h1><h2 id="源文件的字符编码" tabindex="-1"><a class="header-anchor" href="#源文件的字符编码"><span>源文件的字符编码</span></a></h2><p>默认情况下，Python 源码文件以 <code>UTF-8</code> 编码方式处理。</p><p>在这种编码方式中，世界上大多数语言的字符都可以同时用于字符串字面值、变量或函数名称以及注释中——尽管标准库中只用常规的 ASCII 字符作为变量或函数名，而且任何可移植的代码都应该遵守此约定。</p><p>要正确显示这些字符，你的编辑器必须能识别 UTF-8 编码，而且必须使用能支持打开的文件中所有字符的字体。</p><h2 id="指定编码" tabindex="-1"><a class="header-anchor" href="#指定编码"><span>指定编码</span></a></h2><p>如果不使用默认编码，要声明文件所使用的编码，文件的第一行要写成特殊的注释。</p><p>语法如下所示：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: encoding -*-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 encoding 可以是 Python 支持的任意一种 codecs。</p><p>比如，要声明使用 Windows-1252 编码，你的源码文件要写成：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: cp1252 -*-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>关于 第一行 规则的一种例外情况是，源码以 UNIX &quot;shebang&quot; 行 开头。</p><p>这种情况下，编码声明就要写在文件的第二行。</p><p>例如：</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#!/usr/bin/env python3</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># -*- coding: cp1252 -*-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://docs.python.org/zh-cn/3/tutorial/interpreter.html#the-interpreter-and-its-environment" target="_blank" rel="noopener noreferrer">文件编码</a></p>`,18)]))}const l=t(s,[["render",o]]),d=JSON.parse('{"path":"/posts/Lang/2018-02-14-python-04-encode-04.html","title":"Python-04-文件编码","lang":"zh-CN","frontmatter":{"title":"Python-04-文件编码","date":"2018-02-14T00:00:00.000Z","categories":["Lang"],"tags":["python","lang","sh"],"published":true,"description":"解释器的运行环境 源文件的字符编码 默认情况下，Python 源码文件以 UTF-8 编码方式处理。 在这种编码方式中，世界上大多数语言的字符都可以同时用于字符串字面值、变量或函数名称以及注释中——尽管标准库中只用常规的 ASCII 字符作为变量或函数名，而且任何可移植的代码都应该遵守此约定。 要正确显示这些字符，你的编辑器必须能识别 UTF-8 编码...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-backend/posts/Lang/2018-02-14-python-04-encode-04.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Python-04-文件编码"}],["meta",{"property":"og:description","content":"解释器的运行环境 源文件的字符编码 默认情况下，Python 源码文件以 UTF-8 编码方式处理。 在这种编码方式中，世界上大多数语言的字符都可以同时用于字符串字面值、变量或函数名称以及注释中——尽管标准库中只用常规的 ASCII 字符作为变量或函数名，而且任何可移植的代码都应该遵守此约定。 要正确显示这些字符，你的编辑器必须能识别 UTF-8 编码..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python-04-文件编码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":1.11,"words":333},"filePathRelative":"posts/Lang/2018-02-14-python-04-encode-04.md","localizedDate":"2018年2月14日","excerpt":"\\n<h2>源文件的字符编码</h2>\\n<p>默认情况下，Python 源码文件以 <code>UTF-8</code> 编码方式处理。</p>\\n<p>在这种编码方式中，世界上大多数语言的字符都可以同时用于字符串字面值、变量或函数名称以及注释中——尽管标准库中只用常规的 ASCII 字符作为变量或函数名，而且任何可移植的代码都应该遵守此约定。</p>\\n<p>要正确显示这些字符，你的编辑器必须能识别 UTF-8 编码，而且必须使用能支持打开的文件中所有字符的字体。</p>\\n<h2>指定编码</h2>\\n<p>如果不使用默认编码，要声明文件所使用的编码，文件的第一行要写成特殊的注释。</p>\\n<p>语法如下所示：</p>","autoDesc":true}');export{l as comp,d as data};
