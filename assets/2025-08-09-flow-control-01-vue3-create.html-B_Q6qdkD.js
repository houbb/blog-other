import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as i,o as n}from"./app-CEDSurVN.js";const s={};function r(l,e){return n(),a("div",null,e[0]||(e[0]=[i(`<h1 id="项目创建" tabindex="-1"><a class="header-anchor" href="#项目创建"><span>项目创建</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm create vite@latest flow-control-demo -- --template vue</span></span>
<span class="line"><span>npm install</span></span>
<span class="line"><span>npm run dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="http://localhost:5173/" target="_blank" rel="noopener noreferrer">http://localhost:5173/</a> 可以查看效果</p><h1 id="页面需求" tabindex="-1"><a class="header-anchor" href="#页面需求"><span>页面需求</span></a></h1><p>帮我实现一个简易版本的测试平台前端 vue3，支持循环控制，循环/if 等。<br> 每个步骤，支持定义左侧改为真正的树形多层嵌套结构，点击后右侧可以自定义名称，设置对应的基本信息（保存后生效）。<br> 左侧树支持右键：新增、删除、复制、上下移动。<br> 支持类型包含循环控制，脚本，http，整体保存后是一个 json 结构，方便后端执行处理。<br> 给出页面好看的 vue3 实现</p><h2 id="要求" tabindex="-1"><a class="header-anchor" href="#要求"><span>要求</span></a></h2><p>尽可能的组件化</p><p>页面大气</p><p>vue3+elementui</p><p>按照页面分类，一个个 vue 页面分别给出</p><h2 id="支持的类型有哪些" tabindex="-1"><a class="header-anchor" href="#支持的类型有哪些"><span>支持的类型有哪些</span></a></h2><p>左侧初始化默认有一个根节点ROOT，只允许创建子节点。点击根节点，右侧有对应的变量信息。<br> 流程控制节点也可以新建子节点。</p><p>新建子节点支持的类型有：</p><p>1）流程控制：并发循环，串行循环，IF /ELSE IF /ELSE 、finally、tryException<br> 2）远程调用：http（类似 postman 的参数能力）、rpc、kafka<br> 3) 脚本处理：shell 脚本、python 脚本、groovy 脚本<br> 4) 数据加载：SQL、Redis、文件解析<br> 5) 报告模块：调用 email/sms<br> 6）文件模块：scp 复制文件，本地上传文件</p><p>要求：<br> a. 每个模块，涉及到机器登录权限的，允许用户输入选择执行账户。<br> b. 每个步骤，支持指定超时时间<br> c. 每个步骤，支持断言<br> d. 每个步骤，支持使用变量，输出变量<br> e. 每个子节点步骤，支持复制、删除、上移、下移、拖拽移动。每个步骤，都支持输入步骤名，右侧页面保存后，在菜单左侧同步更新。<br> f. 每个不同的类型，都实现对应的 vue 组件，方便后续维护拓展。</p><p>【优化1】</p><ol><li>默认有一个根节点ROOT，只允许创建子节点。点击根节点，右侧有对应的变量信息。</li></ol><p>变量名 变量值 变量备注，默认只有一行，允许用户修改/增加/删除</p><p>支持保存+导出整体的 json。</p><ol start="2"><li><p>其他子步骤，保存统一放在最上方右侧。为每一种子步骤添加合适的 meoji logo，左侧保存后同步显示，方便查看。样式尽可能好看。</p></li><li><p>label 和输入框最好是一行，如何是内容比较多，用 textarea。样式要好看。</p></li><li><p>不同的子步骤，子页面样式是不同的，你也根据这些实际的情况做一下区分。在左侧树，右键的时候就可以直接选择类型。</p></li></ol><p>以数据加载为例，用户可以输入数据库的基本链接信息（url/username/password/驱动）,执行SQL、结果断言。</p><p>【优化2】</p><ol><li>左侧树，新建子步骤选择的时候，按照分类，做成二级菜单。全部同一级别，太长了。</li><li>ROOT 节点，右键时只允许新建子步骤。点击 ROOT 右侧是变量设置，ROOT 界面不需要说明信息。ROOT 右侧需要保存，导出JSON，导入JSON。<br> 点击导入JSON，可以根据JSON初始化整棵树+右侧基本信息。</li><li>导出 JSON 只需要 root 页面右侧有。</li><li>复制节点，调整为复制。复制、上移、下移、删除添加合适的 emoji logo。</li><li>只有 root 节点和流程控制节点允许有右键新建子步骤，其他节点右键只有复制、上移、下移、删除的基础操作。</li><li>涉及到SQL脚本、其他编程脚本输入框，使用黑色，更酷炫。</li><li>左侧树支持拖拽移动到合适的树位置，提升用户体验</li></ol><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1>`,24)]))}const c=t(s,[["render",r]]),h=JSON.parse('{"path":"/posts/FLOW/2025-08-09-flow-control-01-vue3-create.html","title":"流程控制-01-vue3项目创建","lang":"zh-CN","frontmatter":{"title":"流程控制-01-vue3项目创建","date":"2025-08-09T00:00:00.000Z","categories":["FLOW"],"tags":["flow","vue3","sh"],"published":true,"description":"项目创建 http://localhost:5173/ 可以查看效果 页面需求 帮我实现一个简易版本的测试平台前端 vue3，支持循环控制，循环/if 等。 每个步骤，支持定义左侧改为真正的树形多层嵌套结构，点击后右侧可以自定义名称，设置对应的基本信息（保存后生效）。 左侧树支持右键：新增、删除、复制、上下移动。 支持类型包含循环控制，脚本，http，...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/FLOW/2025-08-09-flow-control-01-vue3-create.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"流程控制-01-vue3项目创建"}],["meta",{"property":"og:description","content":"项目创建 http://localhost:5173/ 可以查看效果 页面需求 帮我实现一个简易版本的测试平台前端 vue3，支持循环控制，循环/if 等。 每个步骤，支持定义左侧改为真正的树形多层嵌套结构，点击后右侧可以自定义名称，设置对应的基本信息（保存后生效）。 左侧树支持右键：新增、删除、复制、上下移动。 支持类型包含循环控制，脚本，http，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"flow"}],["meta",{"property":"article:tag","content":"vue3"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2025-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"流程控制-01-vue3项目创建\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.29,"words":987},"filePathRelative":"posts/FLOW/2025-08-09-flow-control-01-vue3-create.md","localizedDate":"2025年8月9日","excerpt":"\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>npm create vite@latest flow-control-demo -- --template vue</span></span>\\n<span class=\\"line\\"><span>npm install</span></span>\\n<span class=\\"line\\"><span>npm run dev</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{c as comp,h as data};
