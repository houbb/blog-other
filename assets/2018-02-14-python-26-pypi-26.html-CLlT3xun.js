import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,o as e}from"./app-CEDSurVN.js";const t={};function l(p,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h1><p>因为自已平时会把一个常用到逻辑写成一个工具python脚本，像关于时间字符串处理，像关于路径和文件夹遍历什么的工具。</p><p>每一次新建一个项目的时候都要把这些工具程序复制到每个项目中，换一个电脑后还要从github生新下载后再复制到项目中，实在太麻烦。</p><p>最后想想，还是建一个自已的pip项目会比较好。</p><p>类似于 java 将代码上传到 mvn 中央仓库。python 也可以做类似的事情。</p><h1 id="项目编写" tabindex="-1"><a class="header-anchor" href="#项目编写"><span>项目编写</span></a></h1><p>在 github 中创建对应的项目。</p><p>先建一个目录，比如 pycc，这个里边放的是你的项目代码</p><p>在这个 pycc 目录里,新建一个 <code>__init__.py</code>，这个文件里可以什么都不用写，然后就是你要发布的 <code>.py</code> 文件</p><h1 id="编写-setup-py" tabindex="-1"><a class="header-anchor" href="#编写-setup-py"><span>编写 <a href="http://setup.py" target="_blank" rel="noopener noreferrer">setup.py</a></span></a></h1><p>这里重点说明一下这个setup.py文件，因为整个pip项目的发布和上传都是基于这个setup.py文件完成的。</p><p>下面是在官方基础上修改的例子。</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> setuptools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;README.md&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;r&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fh:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    long_description </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> fh.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">setuptools.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 别人搜索会用到的项目名称</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 这个名字必须是独一无二的，你可以 pip search + 名字确保唯一性。</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pyopencc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    version</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0.0.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    keywords</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;tool&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;opencc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;opencc-py&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;opencc-python&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Chinese Convert&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;中文繁简体转换&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    author</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;houbb&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    author_email</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;houbinbin.echo@gmail.com&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    description</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Open Chinese Convert is an opensource project for conversion between Traditional Chinese and Simplified Chinese for python.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    long_description</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">long_description,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    long_description_content_type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text/markdown&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    url</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;https://github.com/houbb/pycc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 这个参数是导入目录下的所有__init__.py包</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    packages</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">setuptools.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">find_packages</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    include_package_data</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 这是一个数组，里边包含的是咱的pip项目引用到的第三方库，如果你的项目有用到第三方库，要在这里添上第三方库的包名，如果用的第三方版本不是最新版本，还要有版本号。</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    install_requires</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">    classifiers</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;Programming Language :: Python :: 3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;License :: OSI Approved :: MIT License&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;Operating System :: OS Independent&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开源协议" tabindex="-1"><a class="header-anchor" href="#开源协议"><span>开源协议</span></a></h2><p>必须符合 <a href="https://upload.pypi.org/legacy/" target="_blank" rel="noopener noreferrer">https://upload.pypi.org/legacy/</a></p><h1 id="打包自已的项目" tabindex="-1"><a class="header-anchor" href="#打包自已的项目"><span>打包自已的项目</span></a></h1><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><p>确定安装了最新版本的 <code>setuptools</code> 和 <code>wheel</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python3 -m pip install --user --upgrade setuptools wheel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>日志如下:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>192:pycc houbinbin$ python3 -m pip install --user --upgrade setuptools wheel</span></span>
<span class="line"><span>Cache entry deserialization failed, entry ignored</span></span>
<span class="line"><span>Collecting setuptools</span></span>
<span class="line"><span>  Downloading https://files.pythonhosted.org/packages/c8/b0/cc6b7ba28d5fb790cf0d5946df849233e32b8872b6baca10c9e002ff5b41/setuptools-41.0.0-py2.py3-none-any.whl (575kB)</span></span>
<span class="line"><span>    100% |████████████████████████████████| 583kB 6.4kB/s </span></span>
<span class="line"><span>Collecting wheel</span></span>
<span class="line"><span>  Downloading https://files.pythonhosted.org/packages/96/ba/a4702cbb6a3a485239fbe9525443446203f00771af9ac000fa3ef2788201/wheel-0</span></span>
<span class="line"><span>.33.1-py2.py3-none-any.whl</span></span>
<span class="line"><span>Installing collected packages: setuptools, wheel</span></span>
<span class="line"><span>  The script wheel is installed in &#39;/Users/houbinbin/Library/Python/3.7/bin&#39; which is not on PATH.</span></span>
<span class="line"><span>  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.</span></span>
<span class="line"><span>Successfully installed setuptools-41.0.0 wheel-0.33.1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运行打包命令" tabindex="-1"><a class="header-anchor" href="#运行打包命令"><span>运行打包命令</span></a></h2><p>在和 <a href="http://setup.py" target="_blank" rel="noopener noreferrer">setup.py</a> 相同的目录下，执行下面的命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python3 setup.py sdist bdist_wheel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>命令正常执行，会在 dist 下生成如下的文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>openccpy-0.0.1-py3-none-any.whl </span></span>
<span class="line"><span>openccpy-0.0.1.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>文件说明</li></ul><p>tar.gz文件是源存档，而.whl文件是构建的分发。</p><p>较新的pip版本优先安装构建的发行版，但如果需要，将回退到源代码存档。</p><p>您应该始终上传源存档并为项目兼容的平台提供构建的存档。</p><p>在这种情况下，我们的示例包在任何平台上都与Python兼容，因此只需要一个构建的发行版。</p><h1 id="上传打包文件" tabindex="-1"><a class="header-anchor" href="#上传打包文件"><span>上传打包文件</span></a></h1><h2 id="注册账号" tabindex="-1"><a class="header-anchor" href="#注册账号"><span>注册账号</span></a></h2><p>在 <a href="https://pypi.org/" target="_blank" rel="noopener noreferrer">https://pypi.org/</a> 上注册一个账号，然后。注册好后<strong>在邮箱激活</strong></p><p>一般注册流程都是这么操作了，这里就不多说了。</p><p>记住自己的账号密码。</p><h2 id="安装-twine" tabindex="-1"><a class="header-anchor" href="#安装-twine"><span>安装 twine</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python3 -m pip install --user --upgrade twine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="上传到-pypi" tabindex="-1"><a class="header-anchor" href="#上传到-pypi"><span>上传到 pypi</span></a></h2><p>执行命令</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python3 -m twine upload dist/*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>日志</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Uploading distributions to https://upload.pypi.org/legacy/</span></span>
<span class="line"><span>Uploading openccpy-0.0.1-py3-none-any.whl</span></span>
<span class="line"><span>100%|██████████████████████████████████████████████████████████████████████████████████████| 8.99k/8.99k [00:04&lt;00:00, 2.26kB/s]</span></span>
<span class="line"><span>Uploading openccpy-0.0.1.tar.gz</span></span>
<span class="line"><span>100%|██████████████████████████████████████████████████████████████████████████████████████| 4.94k/4.94k [00:01&lt;00:00, 3.13kB/s]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如果你不想重复输入密码" tabindex="-1"><a class="header-anchor" href="#如果你不想重复输入密码"><span>如果你不想重复输入密码</span></a></h3><p>在上传前，要建一个文件，<code>$HOME/.pypirc</code>，$HOME目录在linux或者mac系统下就是~/目录。在这里建一个.pypirc文件。</p><p>里边的内容如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[distutils]</span></span>
<span class="line"><span>index-servers = pypi</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[pypi]</span></span>
<span class="line"><span>username:你的PyPi用户名</span></span>
<span class="line"><span>password:你的PyPi密码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="查看自己的项目" tabindex="-1"><a class="header-anchor" href="#查看自己的项目"><span>查看自己的项目</span></a></h1><h2 id="查找" tabindex="-1"><a class="header-anchor" href="#查找"><span>查找</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>$ pip search openccpy</span></span>
<span class="line"><span>openccpy (0.0.1)  - Open Chinese Convert is an opensource project for</span></span>
<span class="line"><span>                    conversion between Traditional Chinese and Simplified</span></span>
<span class="line"><span>                    Chinese for python.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>就和使用其他开源包一样。</p><h1 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h1><p><a href="https://blog.csdn.net/fengmm521/article/details/79144407" target="_blank" rel="noopener noreferrer">python如何发布自已pip项目</a></p><p><a href="https://packaging.python.org/tutorials/packaging-projects/" target="_blank" rel="noopener noreferrer">创建流程</a></p>`,55)]))}const d=s(t,[["render",l]]),k=JSON.parse('{"path":"/posts/Lang/2018-02-14-python-26-pypi-26.html","title":"Python-26-pypi 发布自已 pip 项目","lang":"zh-CN","frontmatter":{"title":"Python-26-pypi 发布自已 pip 项目","date":"2018-02-14T00:00:00.000Z","categories":["Lang"],"tags":["python","lang","devops","sh"],"published":true,"description":"前言 因为自已平时会把一个常用到逻辑写成一个工具python脚本，像关于时间字符串处理，像关于路径和文件夹遍历什么的工具。 每一次新建一个项目的时候都要把这些工具程序复制到每个项目中，换一个电脑后还要从github生新下载后再复制到项目中，实在太麻烦。 最后想想，还是建一个自已的pip项目会比较好。 类似于 java 将代码上传到 mvn 中央仓库。p...","head":[["meta",{"property":"og:url","content":"https://houbb.github.io/blog-other/posts/Lang/2018-02-14-python-26-pypi-26.html"}],["meta",{"property":"og:site_name","content":"老马啸西风"}],["meta",{"property":"og:title","content":"Python-26-pypi 发布自已 pip 项目"}],["meta",{"property":"og:description","content":"前言 因为自已平时会把一个常用到逻辑写成一个工具python脚本，像关于时间字符串处理，像关于路径和文件夹遍历什么的工具。 每一次新建一个项目的时候都要把这些工具程序复制到每个项目中，换一个电脑后还要从github生新下载后再复制到项目中，实在太麻烦。 最后想想，还是建一个自已的pip项目会比较好。 类似于 java 将代码上传到 mvn 中央仓库。p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-22T03:45:14.000Z"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"lang"}],["meta",{"property":"article:tag","content":"devops"}],["meta",{"property":"article:tag","content":"sh"}],["meta",{"property":"article:published_time","content":"2018-02-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-22T03:45:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python-26-pypi 发布自已 pip 项目\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-02-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-22T03:45:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"老马啸西风\\",\\"url\\":\\"https://houbb.github.io\\"}]}"]]},"git":{"createdTime":1755834314000,"updatedTime":1755834314000,"contributors":[{"name":"binbin.hou","username":"","email":"binbin.hou@huifu.com","commits":1}]},"readingTime":{"minutes":3.52,"words":1056},"filePathRelative":"posts/Lang/2018-02-14-python-26-pypi-26.md","localizedDate":"2018年2月14日","excerpt":"\\n<p>因为自已平时会把一个常用到逻辑写成一个工具python脚本，像关于时间字符串处理，像关于路径和文件夹遍历什么的工具。</p>\\n<p>每一次新建一个项目的时候都要把这些工具程序复制到每个项目中，换一个电脑后还要从github生新下载后再复制到项目中，实在太麻烦。</p>\\n<p>最后想想，还是建一个自已的pip项目会比较好。</p>\\n<p>类似于 java 将代码上传到 mvn 中央仓库。python 也可以做类似的事情。</p>\\n<h1>项目编写</h1>\\n<p>在 github 中创建对应的项目。</p>\\n<p>先建一个目录，比如 pycc，这个里边放的是你的项目代码</p>\\n<p>在这个 pycc 目录里,新建一个 <code>__init__.py</code>，这个文件里可以什么都不用写，然后就是你要发布的 <code>.py</code> 文件</p>","autoDesc":true}');export{d as comp,k as data};
